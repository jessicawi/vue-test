{"remainingRequest":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\data\\datasource.js","dependencies":[{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\data\\datasource.js","mtime":1559116278016},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1553612671158}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport _Promise from \"C:\\\\Users\\\\jessi\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/es6.number.constructor\";\nimport _JSON$stringify from \"C:\\\\Users\\\\jessi\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\jessi\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\jessi\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\jessi\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/createClass\";\nimport { URLForEndpoint, NewRequest, parseResponseAndHandleErrors, parseObject } from \"../data/requests\";\nimport { ERROR_SERVER_UNREACHABLE } from \"../data/datasourceConst\";\nimport axios from \"axios\";\nimport jQuery from 'jquery';\nimport moment from \"moment\";\nimport Cookies from \"js-cookie\";\nvar API_HOST = process.env.VUE_APP_ROOT_API || \"http://local.emsv2\";\nvar GoogleGeocodeAPIKey = 'AIzaSyBSjzdBEO1Akg0aZfKpglWYBtdqLMHJLzM';\n\nfunction getMs() {\n  var d = new Date();\n  return d.getTime();\n} // let alertExpireDate = new Date(new Date().getTime() + 1 * 60 * 1000);\n\n\nfunction setToHappen(fn, d) {\n  var t = d.getTime() - new Date().getTime();\n  return setTimeout(fn, t);\n}\n\nfunction alertExpire() {\n  alert(\"almost expire\");\n}\n\nvar DataSource =\n/*#__PURE__*/\nfunction () {\n  _createClass(DataSource, null, [{\n    key: \"shared\",\n    get: function get() {\n      if (DataSource.instance == null || DataSource.instance === undefined) {\n        DataSource.instance = new DataSource();\n      }\n\n      return DataSource.instance;\n    }\n  }]);\n\n  function DataSource() {\n    _classCallCheck(this, DataSource);\n\n    this.loggedIn = false;\n    this.isExpireAlerted = false;\n  }\n\n  _createClass(DataSource, [{\n    key: \"callAPI\",\n    value: function () {\n      var _callAPI = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee(endPoint) {\n        var method,\n            queryObject,\n            requestBody,\n            hasContentType,\n            url,\n            request,\n            response,\n            _args = arguments;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                method = _args.length > 1 && _args[1] !== undefined ? _args[1] : \"GET\";\n                queryObject = _args.length > 2 ? _args[2] : undefined;\n                requestBody = _args.length > 3 ? _args[3] : undefined;\n                hasContentType = _args.length > 4 && _args[4] !== undefined ? _args[4] : true;\n                url = URLForEndpoint(endPoint, queryObject);\n                request = NewRequest(method, hasContentType);\n\n                if (!hasContentType) {\n                  delete request.headers[\"Content-Type\"];\n                  request.body = requestBody;\n                } else if (method !== \"GET\" && requestBody) {\n                  request.body = _JSON$stringify(requestBody);\n                }\n\n                _context.prev = 7;\n                _context.next = 10;\n                return fetch(url, request);\n\n              case 10:\n                response = _context.sent;\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](7);\n                throw ERROR_SERVER_UNREACHABLE;\n\n              case 16:\n                _context.next = 18;\n                return parseResponseAndHandleErrors(response);\n\n              case 18:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[7, 13]]);\n      }));\n\n      function callAPI(_x) {\n        return _callAPI.apply(this, arguments);\n      }\n\n      return callAPI;\n    }() // by default, withToken set to true\n\n  }, {\n    key: \"callWebService\",\n    value: function callWebService(endPoint, data, method) {\n      var withToken = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n      var withFormData = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var request = {\n        dataType: \"json\",\n        url: \"\".concat(API_HOST).concat(endPoint),\n        cache: false,\n        success: function success(response) {\n          return response;\n        }\n      };\n\n      if (method) {\n        request.method = method;\n      }\n\n      if (data) {\n        request.data = data;\n      }\n\n      if (withToken) {\n        data.token = Cookies.get('authToken');\n        data.UserSchool_Session = Cookies.get('schoolSession');\n        data.UserID_Session = Cookies.get('userIDSession');\n        data.UserType_Session = Cookies.get('userTypeSession');\n        data.UserUniversity_Session = Cookies.get('userUniversitySession');\n        data.UserEmail_Session = Cookies.get('userEmailSession');\n        data.USRid_Session = Cookies.get('usRidSession');\n        data.UserName_Session = Cookies.get('userNameSession');\n        var extendTime = Cookies.get('extendTime');\n        var expireTime = Cookies.get('expireTime');\n        var nowMs = getMs(); // const expireAlert = Cookies.get('alert');\n        // if (expireAlert) {\n        //     const date = Date.parse(expireAlert);\n        //     const now = new Date();\n        //     if (now.getTime() > date) {\n        //         if (!this.isExpireAlerted) {\n        //             // alert(\"token almost expire\");\n        //             this.isExpireAlerted = true;\n        //         }\n        //\n        //     }\n        // }\n        // console.log(new Date(nowMs), \"now\");\n        // console.log(new Date(Number(extendTime)), \"extendTime\");\n        // console.log(new Date(Number(expireTime)), \"expireTime\");\n\n        if (nowMs > extendTime && nowMs < expireTime) {\n          var newExtendDate = new Date(Number(extendTime) + 120 * 60 * 1000);\n          console.log('first extend check');\n          console.log(newExtendDate, \"new extend\");\n          console.log(newExtendDate.getTime() + \" \" + Number(expireTime));\n\n          if (newExtendDate.getTime() >= Number(expireTime)) {\n            var newExpireDate = new Date(Number(expireTime) + 90 * 60 * 1000);\n            this.extendCookies(newExpireDate, newExtendDate); // alert('extend!');\n\n            console.log(newExpireDate, \"later\");\n          }\n        }\n      } // this is just testing, remove this if savePost not working\n      // this might just use for upload file request only(formData), not for whole request\n\n\n      if (withFormData) {\n        request.processData = false;\n        request.contentType = false;\n      } // get token from session\n      // const token = Cookies.get('authToken');\n      // if token is available and withToken set as true, then pass request with headers\n      // they not using header Authorization so disable this\n      // if (token && withToken === true) {\n      //     request.headers = {\"Authorization\": token};\n      // }\n\n\n      return jQuery.ajax(request);\n    }\n  }, {\n    key: \"uploadFile\",\n    value: function () {\n      var _uploadFile = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2(files, postID) {\n        var formData, request;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                console.log(postID);\n                formData = new FormData();\n                formData.append('token', Cookies.get('authToken'));\n                formData.append('UserID_Session', Cookies.get('userIDSession'));\n                console.log(files);\n                formData.append(\"file\", files[0]);\n                formData.append(\"postID\", postID); // console.log(formData);\n                // console.log(files);\n\n                request = {\n                  url: \"\".concat(API_HOST, \"/controller/Upload_File.asmx/uploadFile\"),\n                  cache: false,\n                  type: 'POST',\n                  data: formData,\n                  enctype: 'multipart/form-data',\n                  processData: false,\n                  contentType: false,\n                  async: false,\n                  json: false,\n                  success: function success(response) {\n                    return response;\n                  }\n                };\n                return _context2.abrupt(\"return\", jQuery.ajax(request));\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function uploadFile(_x2, _x3) {\n        return _uploadFile.apply(this, arguments);\n      }\n\n      return uploadFile;\n    }()\n  }, {\n    key: \"login\",\n    value: function () {\n      var _login = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(userId, password) {\n        var data, extendDate, expireDate, extendMs, expiredMs, response;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                data = {\n                  userID: userId,\n                  userPassword: password\n                };\n                _context3.prev = 1;\n                // Cookies.set('alert', alertExpireDate, {expires: expireDate});\n                extendDate = new Date(new Date().getTime() + 120 * 60 * 1000);\n                expireDate = new Date(new Date().getTime() + 90 * 60 * 1000);\n                extendMs = extendDate.getTime();\n                expiredMs = expireDate.getTime();\n                _context3.next = 8;\n                return this.callWebService(\"/controller/Login.asmx/checkLogin\", data, \"POST\", false);\n\n              case 8:\n                response = _context3.sent;\n                Cookies.set('authToken', response.token, {\n                  expires: expireDate\n                }); //expire in 3 hour);\n\n                Cookies.set('schoolSession', response.UserSchool_Session, {\n                  expires: expireDate\n                }); //expire in 3 hour);\n\n                Cookies.set('userIDSession', response.UserID_Session, {\n                  expires: expireDate\n                }); //expire in 3 hour);\n\n                Cookies.set('userTypeSession', response.UserType_Session, {\n                  expires: expireDate\n                }); //expire in 3 hour);\n\n                Cookies.set('userUniversitySession', response.UserUniversity_Session, {\n                  expires: expireDate\n                }); //expire in 3 hour);\n\n                Cookies.set('usRidSession', response.USRid_Session, {\n                  expires: expireDate\n                }); //expire in 3 hour);\n\n                Cookies.set('userEmailSession', response.UserEmail_Session, {\n                  expires: expireDate\n                }); //expire in 3 hour);\n\n                Cookies.set('userNameSession', response.UserName_Session, {\n                  expires: expireDate\n                }); //expire in 3 hour);\n\n                Cookies.set('expireTime', expiredMs, {\n                  expires: expireDate\n                }); //expire in 3 hour);\n\n                Cookies.set('extendTime', extendMs, {\n                  expires: expireDate\n                }); //expire in 3 hour);\n\n                return _context3.abrupt(\"return\", response);\n\n              case 22:\n                _context3.prev = 22;\n                _context3.t0 = _context3[\"catch\"](1);\n                throw _context3.t0;\n\n              case 25:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[1, 22]]);\n      }));\n\n      function login(_x4, _x5) {\n        return _login.apply(this, arguments);\n      }\n\n      return login;\n    }()\n  }, {\n    key: \"extendCookies\",\n    value: function extendCookies(expireDate, extendTime) {\n      try {\n        var token = Cookies.get('authToken');\n        var UserSchool_Session = Cookies.get('schoolSession');\n        var UserID_Session = Cookies.get('userIDSession');\n        var UserType_Session = Cookies.get('userTypeSession');\n        var UserUniversity_Session = Cookies.get('userUniversitySession');\n        var UserEmail_Session = Cookies.get('userEmailSession');\n        var USRid_Session = Cookies.get('usRidSession');\n        var UserName_Session = Cookies.get('userNameSession');\n        var expiredMs = expireDate.getTime();\n        var extendMs = extendTime.getTime();\n        Cookies.set('authToken', token, {\n          expires: expireDate\n        }); //expire in 3 hour);\n\n        Cookies.set('schoolSession', UserSchool_Session, {\n          expires: expireDate\n        }); //expire in 3 hour);\n\n        Cookies.set('userIDSession', UserID_Session, {\n          expires: expireDate\n        }); //expire in 3 hour);\n\n        Cookies.set('userTypeSession', UserType_Session, {\n          expires: expireDate\n        }); //expire in 3 hour);\n\n        Cookies.set('userUniversitySession', UserUniversity_Session, {\n          expires: expireDate\n        }); //expire in 3 hour);\n\n        Cookies.set('usRidSession', USRid_Session, {\n          expires: expireDate\n        }); //expire in 3 hour);\n\n        Cookies.set('userEmailSession', UserEmail_Session, {\n          expires: expireDate\n        }); //expire in 3 hour);\n\n        Cookies.set('userNameSession', UserName_Session, {\n          expires: expireDate\n        }); //expire in 3 hour);\n\n        Cookies.set('expireTime', expiredMs, {\n          expires: expireDate\n        }); //expire in 3 hour);\n\n        Cookies.set('extendTime', extendMs, {\n          expires: expireDate\n        }); //expire in 3 hour);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }, {\n    key: \"externalLogin\",\n    value: function () {\n      var _externalLogin = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(userId, tokenId) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                data = {\n                  userID: userId,\n                  externalLoginToken: tokenId\n                };\n                _context4.next = 3;\n                return this.callWebService(\"/controller/Login.asmx/checkLogin\", data, \"POST\", false);\n\n              case 3:\n                response = _context4.sent;\n                Cookies.set('authToken', response.token, {\n                  expires: 3 / 24\n                }); //expire in 3 hour);\n\n                Cookies.set('schoolSession', response.UserSchool_Session, {\n                  expires: 3 / 24\n                }); //expire in 3 hour);\n\n                Cookies.set('userIDSession', response.UserID_Session, {\n                  expires: 3 / 24\n                }); //expire in 3 hour);\n\n                Cookies.set('userTypeSession', response.UserType_Session, {\n                  expires: 3 / 24\n                }); //expire in 3 hour);\n\n                Cookies.set('userUniversitySession', response.UserUniversity_Session, {\n                  expires: 3 / 24\n                }); //expire in 3 hour);\n\n                Cookies.set('usRidSession', response.USRid_Session, {\n                  expires: 3 / 24\n                }); //expire in 3 hour);\n\n                Cookies.set('userEmailSession', response.UserEmail_Session, {\n                  expires: 3 / 24\n                }); //expire in 3 hour);\n\n                Cookies.set('userNameSession', response.UserName_Session, {\n                  expires: 3 / 24\n                }); //expire in 3 hour);\n\n                return _context4.abrupt(\"return\", response);\n\n              case 13:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function externalLogin(_x6, _x7) {\n        return _externalLogin.apply(this, arguments);\n      }\n\n      return externalLogin;\n    }()\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      var _this = this;\n\n      var $ = require(\"jquery\");\n\n      var internalSession = new _Promise(function (resolve, reject) {\n        var data = {};\n\n        _this.callWebService(\"/controller/Login.asmx/logOut\", data, \"POST\").then(function (result) {\n          resolve(result == \"1\");\n        });\n      });\n      var sessionSignout = new _Promise(function (resolve, reject) {\n        Cookies.remove('authToken');\n        Cookies.remove('schoolSession');\n        Cookies.remove('userIDSession');\n        Cookies.remove('userTypeSession');\n        Cookies.remove('userUniversitySession');\n        Cookies.remove('usRidSession');\n        Cookies.remove('userEmailSession');\n        Cookies.remove('userNameSession');\n        resolve(true);\n      });\n      var googleSignout = new _Promise(function (resolve, reject) {\n        $.getScript('https://apis.google.com/js/platform.js', function () {\n          gapi.load(\"auth2\", function () {\n            gapi.auth2.init({\n              client_id: \"646978523324-lcudp248dvuuk0rda4q6kf2bti9qkk3b.apps.googleusercontent.com\"\n            }).then(function (auth2) {\n              auth2.signOut();\n              resolve(true);\n            });\n          });\n        });\n      });\n      var fbSignout = new _Promise(function (resolve, reject) {\n        $.getScript('https://connect.facebook.net/en_US/sdk.js', function () {\n          FB.init({\n            // appId: '255792542012990',\n            appId: '1983777365262188',\n            version: 'v2.7' // or v2.1, v2.2, v2.3, ...\n\n          });\n          FB.getLoginStatus(function () {\n            FB.logout();\n            resolve(true);\n          });\n        });\n      });\n\n      _Promise.all([internalSession, sessionSignout, googleSignout, fbSignout]).then(function (result) {\n        window.location.replace(\"/login\");\n      });\n    }\n  }, {\n    key: \"resetEmailPassword\",\n    value: function () {\n      var _resetEmailPassword = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5(userEmail) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                data = {\n                  userEmail: userEmail\n                };\n                _context5.next = 3;\n                return this.callWebService(\"/controller/Login.asmx/resetPasswordEmail\", data, \"POST\", false);\n\n              case 3:\n                response = _context5.sent;\n                return _context5.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function resetEmailPassword(_x8) {\n        return _resetEmailPassword.apply(this, arguments);\n      }\n\n      return resetEmailPassword;\n    }()\n  }, {\n    key: \"resetPassword\",\n    value: function () {\n      var _resetPassword = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(userEmail, userPassword, otp) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                data = {\n                  userEmail: userEmail,\n                  userPassword: userPassword,\n                  otp: otp\n                };\n                _context6.next = 3;\n                return this.callWebService(\"/controller/Login.asmx/resetPassword\", data, \"POST\", false);\n\n              case 3:\n                response = _context6.sent;\n                return _context6.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function resetPassword(_x9, _x10, _x11) {\n        return _resetPassword.apply(this, arguments);\n      }\n\n      return resetPassword;\n    }()\n  }, {\n    key: \"parentRegister\",\n    value: function () {\n      var _parentRegister = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7(userEmail, userPassword, studentIDNo, studentID_Index, studentDOB, studentIDType, externalLoginType, externalLoginToken) {\n        var date, data, response;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                date = moment(studentDOB).format('Y-MM-DD HH:mm:ss');\n                console.log(date);\n                data = {\n                  userEmail: userEmail,\n                  userPassword: userPassword,\n                  studentID_Index: studentID_Index,\n                  studentDOB: date,\n                  studentIDType: studentIDType,\n                  studentIDNo: studentIDNo,\n                  externalLoginType: externalLoginType,\n                  externalLoginToken: externalLoginToken\n                };\n                _context7.next = 5;\n                return this.callWebService(\"/controller/Register.asmx/parentRegistration\", data, \"POST\", false);\n\n              case 5:\n                response = _context7.sent;\n\n                if (typeof response === \"string\") {\n                  response = JSON.parse(response);\n                }\n\n                return _context7.abrupt(\"return\", response);\n\n              case 8:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function parentRegister(_x12, _x13, _x14, _x15, _x16, _x17, _x18, _x19) {\n        return _parentRegister.apply(this, arguments);\n      }\n\n      return parentRegister;\n    }()\n  }, {\n    key: \"getStudent\",\n    value: function () {\n      var _getStudent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8(studentID, studentID_Index, studentFirstName, studentLastName, parentName) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                data = {\n                  studentID: studentID,\n                  studentID_Index: studentID_Index,\n                  studentFirstName: studentFirstName,\n                  studentLastName: studentLastName,\n                  parentName: parentName // token: Cookies.get('authToken'),\n                  //UserSchool_Session: Cookies.get('schoolSession'),\n\n                };\n                _context8.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getStudent\", data, \"POST\");\n\n              case 3:\n                response = _context8.sent;\n                return _context8.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function getStudent(_x20, _x21, _x22, _x23, _x24) {\n        return _getStudent.apply(this, arguments);\n      }\n\n      return getStudent;\n    }()\n  }, {\n    key: \"getStudentParentView\",\n    value: function () {\n      var _getStudentParentView = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee9(studentID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                data = {\n                  studentID: studentID,\n                  parentView: \"YES\"\n                };\n                _context9.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getStudent\", data, \"POST\");\n\n              case 3:\n                response = _context9.sent;\n                return _context9.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this);\n      }));\n\n      function getStudentParentView(_x25) {\n        return _getStudentParentView.apply(this, arguments);\n      }\n\n      return getStudentParentView;\n    }()\n  }, {\n    key: \"checkStudentDuplication\",\n    value: function () {\n      var _checkStudentDuplication = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee10(studentFirstName, studentLastName, studentDOB, finExpire, fin, birthCert, ic, passport, passportExpire) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                data = {\n                  studentFirstName: studentFirstName,\n                  studentLastName: studentLastName,\n                  studentDOB: studentDOB,\n                  finExpire: finExpire,\n                  fin: fin,\n                  birthCert: birthCert,\n                  ic: ic,\n                  passport: passport,\n                  passportExpire: passportExpire\n                };\n                _context10.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/checkStudentDuplication\", data, \"POST\");\n\n              case 3:\n                response = _context10.sent;\n                return _context10.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this);\n      }));\n\n      function checkStudentDuplication(_x26, _x27, _x28, _x29, _x30, _x31, _x32, _x33, _x34) {\n        return _checkStudentDuplication.apply(this, arguments);\n      }\n\n      return checkStudentDuplication;\n    }()\n  }, {\n    key: \"getStudentProfilePicture\",\n    value: function () {\n      var _getStudentProfilePicture = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee11(studentID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                data = {\n                  studentID: studentID\n                };\n                _context11.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getStudentProfilePicture\", data, \"POST\");\n\n              case 3:\n                response = _context11.sent;\n                return _context11.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function getStudentProfilePicture(_x35) {\n        return _getStudentProfilePicture.apply(this, arguments);\n      }\n\n      return getStudentProfilePicture;\n    }()\n  }, {\n    key: \"getStudentAddressGoogleAPI\",\n    value: function () {\n      var _getStudentAddressGoogleAPI = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee12(postcode, country) {\n        var result, request, response, lat, lng, request2, response2;\n        return regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                result = '';\n\n                if (country === '' || country === 'Singapore') {\n                  country = 'Singapore'; //to take out S in front of postcode\n\n                  if (postcode.substring(0, 1).toUpperCase() === 'S') {\n                    postcode = postcode.substring(1, postcode.length);\n                  } //to take out S in front of postcode\n\n                } //search by address / postcode\n\n\n                request = {\n                  url: 'https://maps.googleapis.com/maps/api/geocode/json?address=' + postcode + '+' + country + '&result_type=street_address&key=' + GoogleGeocodeAPIKey,\n                  cache: false,\n                  type: 'POST',\n                  enctype: 'multipart/form-data',\n                  processData: false,\n                  contentType: false,\n                  async: false,\n                  json: false,\n                  success: function success(response) {\n                    return response;\n                  }\n                };\n                _context12.next = 5;\n                return jQuery.ajax(request);\n\n              case 5:\n                response = _context12.sent;\n\n                if (typeof response === \"string\") {\n                  response = JSON.parse(response);\n                } //search by address / postcode\n                //get lat lng\n\n\n                lat = '';\n                lng = '';\n                this.resultResponse = response.results;\n                this.resultResponse.forEach(function (m) {\n                  lat = m.geometry.location.lat;\n                  lng = m.geometry.location.lng;\n                }); //get lat lng\n                //search by lat lng\n\n                if (!(response.status === 'OK')) {\n                  _context12.next = 18;\n                  break;\n                }\n\n                request2 = {\n                  url: 'https://maps.googleapis.com/maps/api/geocode/json?latlng=' + lat + ',' + lng + '&key=' + GoogleGeocodeAPIKey,\n                  cache: false,\n                  type: 'POST',\n                  enctype: 'multipart/form-data',\n                  processData: false,\n                  contentType: false,\n                  async: false,\n                  json: false,\n                  success: function success(response2) {\n                    return response2;\n                  }\n                };\n                _context12.next = 15;\n                return jQuery.ajax(request2);\n\n              case 15:\n                response2 = _context12.sent;\n\n                if (typeof response2 === \"string\") {\n                  response2 = JSON.parse(response2);\n                }\n\n                result = response2.results[0].formatted_address; // const resultResponse2 = response2.results[0].address_components;\n                // resultResponse2.forEach(m => {\n                //     console.log(m);\n                // });\n\n              case 18:\n                return _context12.abrupt(\"return\", result);\n\n              case 19:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function getStudentAddressGoogleAPI(_x36, _x37) {\n        return _getStudentAddressGoogleAPI.apply(this, arguments);\n      }\n\n      return getStudentAddressGoogleAPI;\n    }()\n  }, {\n    key: \"saveStudent\",\n    value: function () {\n      var _saveStudent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee13(files, jsonString, jsonString2, familyID, parentID, allergiesList) {\n        var data, key, request, response;\n        return regeneratorRuntime.wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                data = new FormData();\n                data.append('token', Cookies.get('authToken'));\n                data.append('UserSchool_Session', Cookies.get('schoolSession'));\n                data.append('UserID_Session', Cookies.get('userIDSession'));\n                data.append('UserUniversity_Session', Cookies.get('userUniversitySession'));\n\n                if (files && files.length > 1) {\n                  for (key in files) {\n                    //console.log(key);\n                    if (files.hasOwnProperty(key)) {\n                      // console.log(files[key]);\n                      if (key > 0) {\n                        data.append(\"upload_\".concat(key), files[key]);\n                      } else {\n                        data.append(\"upload\", files[key]);\n                      }\n                    }\n                  }\n                } else if (files) {\n                  data.append(\"upload\", files[0]);\n                }\n\n                data.append(\"jsonString\", jsonString);\n                data.append(\"jsonString2\", jsonString2);\n                data.append(\"familyID\", familyID);\n                data.append(\"parentID\", parentID);\n                data.append(\"allergiesList\", allergiesList);\n                request = {\n                  url: \"\".concat(API_HOST, \"/controller/Students.asmx/saveStudent\"),\n                  cache: false,\n                  type: 'POST',\n                  data: data,\n                  enctype: 'multipart/form-data',\n                  processData: false,\n                  contentType: false,\n                  async: false,\n                  json: false,\n                  success: function success(response) {\n                    return response;\n                  }\n                };\n                _context13.next = 14;\n                return jQuery.ajax(request);\n\n              case 14:\n                response = _context13.sent;\n\n                if (typeof response === \"string\") {\n                  response = JSON.parse(response);\n                }\n\n                return _context13.abrupt(\"return\", response);\n\n              case 17:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13);\n      }));\n\n      function saveStudent(_x38, _x39, _x40, _x41, _x42, _x43) {\n        return _saveStudent.apply(this, arguments);\n      }\n\n      return saveStudent;\n    }()\n  }, {\n    key: \"updateStudent\",\n    value: function () {\n      var _updateStudent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee14(files, studentID, jsonString, allergiesList) {\n        var data, key, request, response;\n        return regeneratorRuntime.wrap(function _callee14$(_context14) {\n          while (1) {\n            switch (_context14.prev = _context14.next) {\n              case 0:\n                data = new FormData();\n                data.append('token', Cookies.get('authToken'));\n                data.append('UserID_Session', Cookies.get('userIDSession'));\n\n                if (files && files.length > 1) {\n                  for (key in files) {\n                    //console.log(key);\n                    if (files.hasOwnProperty(key)) {\n                      // console.log(files[key]);\n                      if (key > 0) {\n                        data.append(\"upload_\".concat(key), files[key]);\n                      } else {\n                        data.append(\"upload\", files[key]);\n                      }\n                    }\n                  }\n                } else if (files) {\n                  data.append(\"upload\", files[0]);\n                }\n\n                data.append(\"studentID\", studentID);\n                data.append(\"jsonString\", jsonString);\n                data.append(\"allergiesList\", allergiesList);\n                request = {\n                  url: \"\".concat(API_HOST, \"/controller/Students.asmx/updateStudent\"),\n                  cache: false,\n                  type: 'POST',\n                  data: data,\n                  enctype: 'multipart/form-data',\n                  processData: false,\n                  contentType: false,\n                  async: false,\n                  json: false,\n                  success: function success(response) {\n                    return response;\n                  }\n                };\n                _context14.next = 10;\n                return jQuery.ajax(request);\n\n              case 10:\n                response = _context14.sent;\n\n                if (typeof response === \"string\") {\n                  response = JSON.parse(response);\n                }\n\n                return _context14.abrupt(\"return\", response);\n\n              case 13:\n              case \"end\":\n                return _context14.stop();\n            }\n          }\n        }, _callee14);\n      }));\n\n      function updateStudent(_x44, _x45, _x46, _x47) {\n        return _updateStudent.apply(this, arguments);\n      }\n\n      return updateStudent;\n    }()\n  }, {\n    key: \"activeStudent\",\n    value: function () {\n      var _activeStudent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee15(studentID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee15$(_context15) {\n          while (1) {\n            switch (_context15.prev = _context15.next) {\n              case 0:\n                data = {\n                  studentID: studentID\n                };\n                _context15.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/activeStudent\", data, \"POST\");\n\n              case 3:\n                response = _context15.sent;\n                return _context15.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context15.stop();\n            }\n          }\n        }, _callee15, this);\n      }));\n\n      function activeStudent(_x48) {\n        return _activeStudent.apply(this, arguments);\n      }\n\n      return activeStudent;\n    }()\n  }, {\n    key: \"getStudentAvailableStatusAction\",\n    value: function () {\n      var _getStudentAvailableStatusAction = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee16(currentStatus) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee16$(_context16) {\n          while (1) {\n            switch (_context16.prev = _context16.next) {\n              case 0:\n                data = {\n                  currentStatus: currentStatus\n                };\n                _context16.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getStudentAvailableStatusAction\", data, \"POST\");\n\n              case 3:\n                response = _context16.sent;\n                return _context16.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context16.stop();\n            }\n          }\n        }, _callee16, this);\n      }));\n\n      function getStudentAvailableStatusAction(_x49) {\n        return _getStudentAvailableStatusAction.apply(this, arguments);\n      }\n\n      return getStudentAvailableStatusAction;\n    }()\n  }, {\n    key: \"updateStudentStatus\",\n    value: function () {\n      var _updateStudentStatus = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee17(studentID, newStatus) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee17$(_context17) {\n          while (1) {\n            switch (_context17.prev = _context17.next) {\n              case 0:\n                data = {\n                  studentID: studentID,\n                  newStatus: newStatus\n                };\n                _context17.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/updateStudentStatus\", data, \"POST\");\n\n              case 3:\n                response = _context17.sent;\n                return _context17.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context17.stop();\n            }\n          }\n        }, _callee17, this);\n      }));\n\n      function updateStudentStatus(_x50, _x51) {\n        return _updateStudentStatus.apply(this, arguments);\n      }\n\n      return updateStudentStatus;\n    }()\n  }, {\n    key: \"getParentList\",\n    value: function () {\n      var _getParentList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee18(familyId, parentLastName, parentFirstName) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee18$(_context18) {\n          while (1) {\n            switch (_context18.prev = _context18.next) {\n              case 0:\n                data = {\n                  familyID: familyId,\n                  parentFirstName: parentFirstName,\n                  parentLastName: parentLastName // token: Cookies.get('authToken'),\n                  // UserSchool_Session: Cookies.get('schoolSession'),\n\n                };\n                _context18.next = 3;\n                return this.callWebService(\"/controller/Parents.asmx/getParentList\", data, \"POST\");\n\n              case 3:\n                response = _context18.sent;\n                return _context18.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context18.stop();\n            }\n          }\n        }, _callee18, this);\n      }));\n\n      function getParentList(_x52, _x53, _x54) {\n        return _getParentList.apply(this, arguments);\n      }\n\n      return getParentList;\n    }()\n  }, {\n    key: \"getParent\",\n    value: function () {\n      var _getParent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee19(parentID, familyID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee19$(_context19) {\n          while (1) {\n            switch (_context19.prev = _context19.next) {\n              case 0:\n                data = {\n                  parentID: parentID,\n                  familyID: familyID\n                };\n                _context19.next = 3;\n                return this.callWebService(\"/controller/Parents.asmx/getParent\", data, \"POST\");\n\n              case 3:\n                response = _context19.sent;\n                return _context19.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context19.stop();\n            }\n          }\n        }, _callee19, this);\n      }));\n\n      function getParent(_x55, _x56) {\n        return _getParent.apply(this, arguments);\n      }\n\n      return getParent;\n    }()\n  }, {\n    key: \"getRelationship\",\n    value: function () {\n      var _getRelationship = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee20(familyID, studentID, parentFirstName, parentLastName, studentName) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee20$(_context20) {\n          while (1) {\n            switch (_context20.prev = _context20.next) {\n              case 0:\n                data = {\n                  familyID: familyID,\n                  studentID: studentID,\n                  parentFirstName: parentFirstName,\n                  parentLastName: parentLastName,\n                  studentName: studentName\n                };\n                _context20.next = 3;\n                return this.callWebService(\"/controller/Parents.asmx/getRelationship\", data, \"POST\");\n\n              case 3:\n                response = _context20.sent;\n                return _context20.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context20.stop();\n            }\n          }\n        }, _callee20, this);\n      }));\n\n      function getRelationship(_x57, _x58, _x59, _x60, _x61) {\n        return _getRelationship.apply(this, arguments);\n      }\n\n      return getRelationship;\n    }()\n  }, {\n    key: \"getRelationshipByParentID\",\n    value: function () {\n      var _getRelationshipByParentID = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee21(parentID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee21$(_context21) {\n          while (1) {\n            switch (_context21.prev = _context21.next) {\n              case 0:\n                data = {\n                  parentID: parentID\n                };\n                _context21.next = 3;\n                return this.callWebService(\"/controller/Parents.asmx/getRelationship\", data, \"POST\");\n\n              case 3:\n                response = _context21.sent;\n                return _context21.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context21.stop();\n            }\n          }\n        }, _callee21, this);\n      }));\n\n      function getRelationshipByParentID(_x62) {\n        return _getRelationshipByParentID.apply(this, arguments);\n      }\n\n      return getRelationshipByParentID;\n    }()\n  }, {\n    key: \"getStudentSiblingReligionLanguages\",\n    value: function () {\n      var _getStudentSiblingReligionLanguages = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee22(parentID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee22$(_context22) {\n          while (1) {\n            switch (_context22.prev = _context22.next) {\n              case 0:\n                data = {\n                  parentID: parentID\n                };\n                _context22.next = 3;\n                return this.callWebService(\"/controller/Parents.asmx/getStudentSiblingReligionLanguages\", data, \"POST\");\n\n              case 3:\n                response = _context22.sent;\n                return _context22.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context22.stop();\n            }\n          }\n        }, _callee22, this);\n      }));\n\n      function getStudentSiblingReligionLanguages(_x63) {\n        return _getStudentSiblingReligionLanguages.apply(this, arguments);\n      }\n\n      return getStudentSiblingReligionLanguages;\n    }()\n  }, {\n    key: \"updateRelationship\",\n    value: function () {\n      var _updateRelationship = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee23(familyID, studentID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee23$(_context23) {\n          while (1) {\n            switch (_context23.prev = _context23.next) {\n              case 0:\n                data = {\n                  familyID: familyID,\n                  studentID: studentID\n                };\n                _context23.next = 3;\n                return this.callWebService(\"/controller/Parents.asmx/updateRelationship\", data, \"POST\");\n\n              case 3:\n                response = _context23.sent;\n                return _context23.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context23.stop();\n            }\n          }\n        }, _callee23, this);\n      }));\n\n      function updateRelationship(_x64, _x65) {\n        return _updateRelationship.apply(this, arguments);\n      }\n\n      return updateRelationship;\n    }()\n  }, {\n    key: \"getStudentLevel\",\n    value: function () {\n      var _getStudentLevel = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee24(studentID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee24$(_context24) {\n          while (1) {\n            switch (_context24.prev = _context24.next) {\n              case 0:\n                data = {\n                  studentID: studentID\n                };\n                _context24.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getStudentLevel\", data, \"POST\");\n\n              case 3:\n                response = _context24.sent;\n                return _context24.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context24.stop();\n            }\n          }\n        }, _callee24, this);\n      }));\n\n      function getStudentLevel(_x66) {\n        return _getStudentLevel.apply(this, arguments);\n      }\n\n      return getStudentLevel;\n    }()\n  }, {\n    key: \"getStudentLevelActiveOnly\",\n    value: function () {\n      var _getStudentLevelActiveOnly = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee25(studentID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee25$(_context25) {\n          while (1) {\n            switch (_context25.prev = _context25.next) {\n              case 0:\n                data = {\n                  studentID: studentID,\n                  onlyActive: 'Yes'\n                };\n                _context25.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getStudentLevel\", data, \"POST\");\n\n              case 3:\n                response = _context25.sent;\n                return _context25.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context25.stop();\n            }\n          }\n        }, _callee25, this);\n      }));\n\n      function getStudentLevelActiveOnly(_x67) {\n        return _getStudentLevelActiveOnly.apply(this, arguments);\n      }\n\n      return getStudentLevelActiveOnly;\n    }()\n  }, {\n    key: \"getEditClass\",\n    value: function () {\n      var _getEditClass = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee26(semID, subjectcourseID, customClassNotEqual) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee26$(_context26) {\n          while (1) {\n            switch (_context26.prev = _context26.next) {\n              case 0:\n                data = {\n                  semID: semID,\n                  subjectcourseID: subjectcourseID,\n                  customClassNotEqual: customClassNotEqual\n                };\n                _context26.next = 3;\n                return this.callWebService(\"/controller/Course.asmx/getEditClass\", data, \"POST\");\n\n              case 3:\n                response = _context26.sent;\n                return _context26.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context26.stop();\n            }\n          }\n        }, _callee26, this);\n      }));\n\n      function getEditClass(_x68, _x69, _x70) {\n        return _getEditClass.apply(this, arguments);\n      }\n\n      return getEditClass;\n    }()\n  }, {\n    key: \"getStudentClass\",\n    value: function () {\n      var _getStudentClass = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee27(studentID, courseID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee27$(_context27) {\n          while (1) {\n            switch (_context27.prev = _context27.next) {\n              case 0:\n                data = {\n                  studentID: studentID,\n                  courseID: courseID\n                };\n                _context27.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getStudentClass\", data, \"POST\");\n\n              case 3:\n                response = _context27.sent;\n                return _context27.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context27.stop();\n            }\n          }\n        }, _callee27, this);\n      }));\n\n      function getStudentClass(_x71, _x72) {\n        return _getStudentClass.apply(this, arguments);\n      }\n\n      return getStudentClass;\n    }()\n  }, {\n    key: \"setClass\",\n    value: function () {\n      var _setClass = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee28(studentID, classID, studentCourseID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee28$(_context28) {\n          while (1) {\n            switch (_context28.prev = _context28.next) {\n              case 0:\n                data = {\n                  studentID: studentID,\n                  classID: classID,\n                  studentCourseID: studentCourseID\n                };\n                _context28.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/setClass\", data, \"POST\");\n\n              case 3:\n                response = _context28.sent;\n                return _context28.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context28.stop();\n            }\n          }\n        }, _callee28, this);\n      }));\n\n      function setClass(_x73, _x74, _x75) {\n        return _setClass.apply(this, arguments);\n      }\n\n      return setClass;\n    }()\n  }, {\n    key: \"massSetClass\",\n    value: function () {\n      var _massSetClass = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee29(classID, jsonString) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee29$(_context29) {\n          while (1) {\n            switch (_context29.prev = _context29.next) {\n              case 0:\n                data = {\n                  classID: classID,\n                  jsonString: jsonString\n                };\n                _context29.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/massSetClass\", data, \"POST\");\n\n              case 3:\n                response = _context29.sent;\n                return _context29.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context29.stop();\n            }\n          }\n        }, _callee29, this);\n      }));\n\n      function massSetClass(_x76, _x77) {\n        return _massSetClass.apply(this, arguments);\n      }\n\n      return massSetClass;\n    }()\n  }, {\n    key: \"updateLevel\",\n    value: function () {\n      var _updateLevel = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee30(studentID, studentCourseID, actionMode) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee30$(_context30) {\n          while (1) {\n            switch (_context30.prev = _context30.next) {\n              case 0:\n                data = {\n                  studentID: studentID,\n                  studentCourseID: studentCourseID,\n                  actionMode: actionMode\n                };\n                _context30.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/updateLevel\", data, \"POST\");\n\n              case 3:\n                response = _context30.sent;\n                return _context30.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context30.stop();\n            }\n          }\n        }, _callee30, this);\n      }));\n\n      function updateLevel(_x78, _x79, _x80) {\n        return _updateLevel.apply(this, arguments);\n      }\n\n      return updateLevel;\n    }()\n  }, {\n    key: \"getSibling\",\n    value: function () {\n      var _getSibling = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee31(studentID_Index, studentID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee31$(_context31) {\n          while (1) {\n            switch (_context31.prev = _context31.next) {\n              case 0:\n                data = {\n                  studentID_Index: studentID_Index,\n                  studentID: studentID\n                };\n                _context31.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getSibling\", data, \"POST\");\n\n              case 3:\n                response = _context31.sent;\n                return _context31.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context31.stop();\n            }\n          }\n        }, _callee31, this);\n      }));\n\n      function getSibling(_x81, _x82) {\n        return _getSibling.apply(this, arguments);\n      }\n\n      return getSibling;\n    }()\n  }, {\n    key: \"updateParent\",\n    value: function () {\n      var _updateParent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee32(parentID, jsonString) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee32$(_context32) {\n          while (1) {\n            switch (_context32.prev = _context32.next) {\n              case 0:\n                data = {\n                  parentID: parentID,\n                  jsonString: jsonString\n                };\n                _context32.next = 3;\n                return this.callWebService(\"/controller/Parents.asmx/updateParent\", data, \"POST\");\n\n              case 3:\n                response = _context32.sent;\n                return _context32.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context32.stop();\n            }\n          }\n        }, _callee32, this);\n      }));\n\n      function updateParent(_x83, _x84) {\n        return _updateParent.apply(this, arguments);\n      }\n\n      return updateParent;\n    }()\n  }, {\n    key: \"getAcademicYearDateRange\",\n    value: function () {\n      var _getAcademicYearDateRange = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee33(academicYearID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee33$(_context33) {\n          while (1) {\n            switch (_context33.prev = _context33.next) {\n              case 0:\n                data = {\n                  academicYearID: academicYearID\n                };\n                _context33.next = 3;\n                return this.callWebService(\"/controller/Course.asmx/getAcademicYearDateRange\", data, \"POST\");\n\n              case 3:\n                response = _context33.sent;\n                return _context33.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context33.stop();\n            }\n          }\n        }, _callee33, this);\n      }));\n\n      function getAcademicYearDateRange(_x85) {\n        return _getAcademicYearDateRange.apply(this, arguments);\n      }\n\n      return getAcademicYearDateRange;\n    }()\n  }, {\n    key: \"setLevel\",\n    value: function () {\n      var _setLevel = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee34(studentID, levelID, fromDate, toDate, academicYearID, intakeYear) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee34$(_context34) {\n          while (1) {\n            switch (_context34.prev = _context34.next) {\n              case 0:\n                data = {\n                  studentID: studentID,\n                  levelID: levelID,\n                  fromDate: fromDate,\n                  toDate: toDate,\n                  academicYearID: academicYearID,\n                  intakeYear: intakeYear\n                };\n                _context34.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/setLevel\", data, \"POST\");\n\n              case 3:\n                response = _context34.sent;\n                return _context34.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context34.stop();\n            }\n          }\n        }, _callee34, this);\n      }));\n\n      function setLevel(_x86, _x87, _x88, _x89, _x90, _x91) {\n        return _setLevel.apply(this, arguments);\n      }\n\n      return setLevel;\n    }()\n  }, {\n    key: \"setLevelForAcceptScool\",\n    value: function () {\n      var _setLevelForAcceptScool = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee35(studentID, levelID, fromDate, toDate, academicYearID, intakeYear, acceptTransferStudent, studentSchoolID, effectiveDate) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee35$(_context35) {\n          while (1) {\n            switch (_context35.prev = _context35.next) {\n              case 0:\n                data = {\n                  studentID: studentID,\n                  levelID: levelID,\n                  fromDate: fromDate,\n                  toDate: toDate,\n                  academicYearID: academicYearID,\n                  intakeYear: intakeYear,\n                  acceptTransferStudent: acceptTransferStudent,\n                  studentSchoolID: studentSchoolID,\n                  effectiveDate: effectiveDate\n                };\n                _context35.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/setLevel\", data, \"POST\");\n\n              case 3:\n                response = _context35.sent;\n                return _context35.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context35.stop();\n            }\n          }\n        }, _callee35, this);\n      }));\n\n      function setLevelForAcceptScool(_x92, _x93, _x94, _x95, _x96, _x97, _x98, _x99, _x100) {\n        return _setLevelForAcceptScool.apply(this, arguments);\n      }\n\n      return setLevelForAcceptScool;\n    }()\n  }, {\n    key: \"checkParentDuplication\",\n    value: function () {\n      var _checkParentDuplication = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee36(firstName, lastName, checkMode) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee36$(_context36) {\n          while (1) {\n            switch (_context36.prev = _context36.next) {\n              case 0:\n                data = {\n                  firstName: firstName,\n                  lastName: lastName,\n                  checkMode: checkMode\n                };\n                _context36.next = 3;\n                return this.callWebService(\"/controller/Parents.asmx/checkParentDuplication\", data, \"POST\");\n\n              case 3:\n                response = _context36.sent;\n                return _context36.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context36.stop();\n            }\n          }\n        }, _callee36, this);\n      }));\n\n      function checkParentDuplication(_x101, _x102, _x103) {\n        return _checkParentDuplication.apply(this, arguments);\n      }\n\n      return checkParentDuplication;\n    }()\n  }, {\n    key: \"getUserMenu\",\n    value: function () {\n      var _getUserMenu = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee37() {\n        var data, userType, response;\n        return regeneratorRuntime.wrap(function _callee37$(_context37) {\n          while (1) {\n            switch (_context37.prev = _context37.next) {\n              case 0:\n                data = {};\n                userType = Cookies.get('userTypeSession');\n\n                if (userType !== \"Parent\") {\n                  data.USRid_Session = Cookies.get('usRidSession');\n                }\n\n                _context37.next = 5;\n                return this.callWebService(\"/controller/User.asmx/getUserMenu\", data, \"POST\");\n\n              case 5:\n                response = _context37.sent;\n                return _context37.abrupt(\"return\", response);\n\n              case 7:\n              case \"end\":\n                return _context37.stop();\n            }\n          }\n        }, _callee37, this);\n      }));\n\n      function getUserMenu() {\n        return _getUserMenu.apply(this, arguments);\n      }\n\n      return getUserMenu;\n    }()\n  }, {\n    key: \"getUserSch\",\n    value: function () {\n      var _getUserSch = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee38() {\n        var data, userEmail, response;\n        return regeneratorRuntime.wrap(function _callee38$(_context38) {\n          while (1) {\n            switch (_context38.prev = _context38.next) {\n              case 0:\n                data = {};\n                userEmail = Cookies.get('userEmailSession');\n\n                if (userEmail !== \"\" || userEmail !== null) {\n                  data.UserEmail_Session = Cookies.get('userEmailSession');\n                }\n\n                _context38.next = 5;\n                return this.callWebService(\"/controller/User.asmx/getUserSch\", data, \"POST\");\n\n              case 5:\n                response = _context38.sent;\n                return _context38.abrupt(\"return\", response);\n\n              case 7:\n              case \"end\":\n                return _context38.stop();\n            }\n          }\n        }, _callee38, this);\n      }));\n\n      function getUserSch() {\n        return _getUserSch.apply(this, arguments);\n      }\n\n      return getUserSch;\n    }()\n  }, {\n    key: \"getAllStaffListBySchool\",\n    value: function () {\n      var _getAllStaffListBySchool = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee39() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee39$(_context39) {\n          while (1) {\n            switch (_context39.prev = _context39.next) {\n              case 0:\n                data = {};\n                _context39.next = 3;\n                return this.callWebService(\"/controller/User.asmx/getAllStaffListBySchool\", data, \"POST\");\n\n              case 3:\n                response = _context39.sent;\n                return _context39.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context39.stop();\n            }\n          }\n        }, _callee39, this);\n      }));\n\n      function getAllStaffListBySchool() {\n        return _getAllStaffListBySchool.apply(this, arguments);\n      }\n\n      return getAllStaffListBySchool;\n    }()\n  }, {\n    key: \"getAllStaffList\",\n    value: function () {\n      var _getAllStaffList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee40() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee40$(_context40) {\n          while (1) {\n            switch (_context40.prev = _context40.next) {\n              case 0:\n                data = {};\n                _context40.next = 3;\n                return this.callWebService(\"/controller/User.asmx/getAllStaffList\", data, \"POST\");\n\n              case 3:\n                response = _context40.sent;\n                return _context40.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context40.stop();\n            }\n          }\n        }, _callee40, this);\n      }));\n\n      function getAllStaffList() {\n        return _getAllStaffList.apply(this, arguments);\n      }\n\n      return getAllStaffList;\n    }()\n  }, {\n    key: \"getStaffPost\",\n    value: function () {\n      var _getStaffPost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee41(int_NumberOfPost, str_LastPostID, postType) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee41$(_context41) {\n          while (1) {\n            switch (_context41.prev = _context41.next) {\n              case 0:\n                data = {\n                  UserID_Session: Cookies.get('userIDSession'),\n                  numberOfPost: int_NumberOfPost,\n                  lastPostID: str_LastPostID,\n                  postType: postType\n                };\n                _context41.next = 3;\n                return this.callWebService(\"/controller/Posting.asmx/getPostStaff\", data, \"POST\");\n\n              case 3:\n                response = _context41.sent;\n                return _context41.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context41.stop();\n            }\n          }\n        }, _callee41, this);\n      }));\n\n      function getStaffPost(_x104, _x105, _x106) {\n        return _getStaffPost.apply(this, arguments);\n      }\n\n      return getStaffPost;\n    }()\n  }, {\n    key: \"getParentPost\",\n    value: function () {\n      var _getParentPost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee42(int_NumberOfPost, str_LastPostID, postType) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee42$(_context42) {\n          while (1) {\n            switch (_context42.prev = _context42.next) {\n              case 0:\n                data = {\n                  UserID_Session: Cookies.get('userIDSession'),\n                  numberOfPost: int_NumberOfPost,\n                  lastPostID: str_LastPostID,\n                  postType: postType\n                };\n                _context42.next = 3;\n                return this.callWebService(\"/controller/Posting.asmx/getPostParent\", data, \"POST\");\n\n              case 3:\n                response = _context42.sent;\n                return _context42.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context42.stop();\n            }\n          }\n        }, _callee42, this);\n      }));\n\n      function getParentPost(_x107, _x108, _x109) {\n        return _getParentPost.apply(this, arguments);\n      }\n\n      return getParentPost;\n    }()\n  }, {\n    key: \"getPostDropdown\",\n    value: function () {\n      var _getPostDropdown = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee43() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee43$(_context43) {\n          while (1) {\n            switch (_context43.prev = _context43.next) {\n              case 0:\n                data = {};\n                _context43.next = 3;\n                return this.callWebService(\"/controller/Posting.asmx/getPostDropDown\", data, \"POST\");\n\n              case 3:\n                response = _context43.sent;\n                return _context43.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context43.stop();\n            }\n          }\n        }, _callee43, this);\n      }));\n\n      function getPostDropdown() {\n        return _getPostDropdown.apply(this, arguments);\n      }\n\n      return getPostDropdown;\n    }()\n  }, {\n    key: \"getStaffPostHome\",\n    value: function () {\n      var _getStaffPostHome = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee44() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee44$(_context44) {\n          while (1) {\n            switch (_context44.prev = _context44.next) {\n              case 0:\n                data = {};\n                data.UserID_Session = Cookies.get('userIDSession');\n                data.numberOfPost = 5;\n                _context44.next = 5;\n                return this.callWebService(\"/controller/Posting.asmx/getPostStaff\", data, \"POST\");\n\n              case 5:\n                response = _context44.sent;\n                return _context44.abrupt(\"return\", response);\n\n              case 7:\n              case \"end\":\n                return _context44.stop();\n            }\n          }\n        }, _callee44, this);\n      }));\n\n      function getStaffPostHome() {\n        return _getStaffPostHome.apply(this, arguments);\n      }\n\n      return getStaffPostHome;\n    }()\n  }, {\n    key: \"savePostUpdate\",\n    value: function () {\n      var _savePostUpdate = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee45(files, postContent, tagUserID, tagClassID, tagLevelID, postLinkID) {\n        var postType, formData, key, request, response;\n        return regeneratorRuntime.wrap(function _callee45$(_context45) {\n          while (1) {\n            switch (_context45.prev = _context45.next) {\n              case 0:\n                postType = \"UPDATE\";\n                formData = new FormData();\n                formData.append('token', Cookies.get('authToken'));\n                formData.append('UserID_Session', Cookies.get('userIDSession'));\n                formData.append('UserSchool_Session', Cookies.get('schoolSession'));\n                formData.append(\"postLinkID\", postLinkID);\n\n                if (files && files.length > 1) {\n                  for (key in files) {\n                    // console.log(key);\n                    if (files.hasOwnProperty(key)) {\n                      // console.log(files[key]);\n                      if (key > 0) {\n                        formData.append(\"upload_\".concat(key), files[key]);\n                      } else {\n                        formData.append(\"upload\", files[key]);\n                      }\n                    }\n                  }\n                } else if (files) {\n                  formData.append(\"upload\", files[0]);\n                }\n\n                formData.append(\"updateContent\", postContent); // formData.append(\"tagAcademicYearID\", tagAcademicYearID);\n\n                formData.append(\"postType\", postType);\n\n                if (tagUserID && tagUserID.length > 0) {\n                  formData.append(\"tagUserID\", tagUserID);\n                } else if (tagLevelID) {\n                  formData.append(\"tagLevelID\", tagLevelID);\n                } else if (tagClassID) {\n                  formData.append(\"tagClassID\", tagClassID);\n                }\n\n                request = {\n                  url: \"\".concat(API_HOST, \"/controller/Posting.asmx/savePost\"),\n                  cache: false,\n                  type: 'POST',\n                  data: formData,\n                  enctype: 'multipart/form-data',\n                  processData: false,\n                  contentType: false,\n                  async: false,\n                  json: false,\n                  success: function success(response) {\n                    return response;\n                  }\n                };\n                _context45.next = 13;\n                return jQuery.ajax(request);\n\n              case 13:\n                response = _context45.sent;\n\n                if (typeof response === \"string\") {\n                  response = JSON.parse(response);\n                }\n\n                return _context45.abrupt(\"return\", response);\n\n              case 16:\n              case \"end\":\n                return _context45.stop();\n            }\n          }\n        }, _callee45);\n      }));\n\n      function savePostUpdate(_x110, _x111, _x112, _x113, _x114, _x115) {\n        return _savePostUpdate.apply(this, arguments);\n      }\n\n      return savePostUpdate;\n    }()\n  }, {\n    key: \"savePortfolioPost\",\n    value: function () {\n      var _savePortfolioPost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee46(files, porTitle, porObservation, porAnalysisReflection, porDevelopmentGoals, tagUserID, tagClassID, tagLevelID, postLinkID) {\n        var postType, formData, key, request, response;\n        return regeneratorRuntime.wrap(function _callee46$(_context46) {\n          while (1) {\n            switch (_context46.prev = _context46.next) {\n              case 0:\n                postType = \"PORTFOLIO\";\n                formData = new FormData();\n                formData.append('token', Cookies.get('authToken'));\n                formData.append('UserID_Session', Cookies.get('userIDSession'));\n                formData.append('UserSchool_Session', Cookies.get('schoolSession'));\n                formData.append(\"porTitle\", porTitle);\n                formData.append(\"porObservation\", porObservation);\n                formData.append(\"porAnalysisReflection\", porAnalysisReflection);\n                formData.append(\"porDevelopmentGoals\", porDevelopmentGoals);\n                formData.append(\"postLinkID\", postLinkID);\n\n                if (files && files.length > 1) {\n                  for (key in files) {\n                    // console.log(key);\n                    if (files.hasOwnProperty(key)) {\n                      // console.log(files[key]);\n                      if (key > 0) {\n                        formData.append(\"upload_\".concat(key), files[key]);\n                      } else {\n                        formData.append(\"upload\", files[key]);\n                      }\n                    }\n                  }\n                } else if (files) {\n                  formData.append(\"upload\", files[0]);\n                } // formData.append(\"tagAcademicYearID\", tagAcademicYearID);\n\n\n                formData.append(\"postType\", postType);\n\n                if (tagUserID && tagUserID.length > 0) {\n                  formData.append(\"tagUserID\", tagUserID);\n                } else if (tagLevelID) {\n                  formData.append(\"tagLevelID\", tagLevelID);\n                } else if (tagClassID) {\n                  formData.append(\"tagClassID\", tagClassID);\n                }\n\n                request = {\n                  url: \"\".concat(API_HOST, \"/controller/Posting.asmx/savePost\"),\n                  cache: false,\n                  type: 'POST',\n                  data: formData,\n                  enctype: 'multipart/form-data',\n                  processData: false,\n                  contentType: false,\n                  async: false,\n                  json: false,\n                  success: function success(response) {\n                    return response;\n                  }\n                };\n                _context46.next = 16;\n                return jQuery.ajax(request);\n\n              case 16:\n                response = _context46.sent;\n\n                if (typeof response === \"string\") {\n                  response = JSON.parse(response);\n                }\n\n                return _context46.abrupt(\"return\", response);\n\n              case 19:\n              case \"end\":\n                return _context46.stop();\n            }\n          }\n        }, _callee46);\n      }));\n\n      function savePortfolioPost(_x116, _x117, _x118, _x119, _x120, _x121, _x122, _x123, _x124) {\n        return _savePortfolioPost.apply(this, arguments);\n      }\n\n      return savePortfolioPost;\n    }()\n  }, {\n    key: \"saveReportPost\",\n    value: function () {\n      var _saveReportPost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee47(files, repTitle, repObservation, tagUserID, tagClassID, tagLevelID, postLinkID) {\n        var postType, formData, key, request, response;\n        return regeneratorRuntime.wrap(function _callee47$(_context47) {\n          while (1) {\n            switch (_context47.prev = _context47.next) {\n              case 0:\n                postType = \"REPORT\";\n                formData = new FormData();\n                formData.append('token', Cookies.get('authToken'));\n                formData.append('UserID_Session', Cookies.get('userIDSession'));\n                formData.append('UserSchool_Session', Cookies.get('schoolSession'));\n                formData.append(\"repTitle\", repTitle);\n                formData.append(\"repObservation\", repObservation);\n                formData.append(\"postLinkID\", postLinkID);\n\n                if (files && files.length > 1) {\n                  for (key in files) {\n                    // console.log(key);\n                    if (files.hasOwnProperty(key)) {\n                      // console.log(files[key]);\n                      if (key > 0) {\n                        formData.append(\"upload_\".concat(key), files[key]);\n                      } else {\n                        formData.append(\"upload\", files[key]);\n                      }\n                    }\n                  }\n                } else if (files) {\n                  formData.append(\"upload\", files[0]);\n                } // formData.append(\"tagAcademicYearID\", tagAcademicYearID);\n\n\n                formData.append(\"postType\", postType);\n\n                if (tagUserID && tagUserID.length > 0) {\n                  formData.append(\"tagUserID\", tagUserID);\n                } else if (tagLevelID) {\n                  formData.append(\"tagLevelID\", tagLevelID);\n                } else if (tagClassID) {\n                  formData.append(\"tagClassID\", tagClassID);\n                }\n\n                request = {\n                  url: \"\".concat(API_HOST, \"/controller/Posting.asmx/savePost\"),\n                  cache: false,\n                  type: 'POST',\n                  data: formData,\n                  enctype: 'multipart/form-data',\n                  processData: false,\n                  contentType: false,\n                  async: false,\n                  json: false,\n                  success: function success(response) {\n                    return response;\n                  }\n                };\n                _context47.next = 14;\n                return jQuery.ajax(request);\n\n              case 14:\n                response = _context47.sent;\n\n                if (typeof response === \"string\") {\n                  response = JSON.parse(response);\n                }\n\n                return _context47.abrupt(\"return\", response);\n\n              case 17:\n              case \"end\":\n                return _context47.stop();\n            }\n          }\n        }, _callee47);\n      }));\n\n      function saveReportPost(_x125, _x126, _x127, _x128, _x129, _x130, _x131) {\n        return _saveReportPost.apply(this, arguments);\n      }\n\n      return saveReportPost;\n    }()\n  }, {\n    key: \"saveDocumentPost\",\n    value: function () {\n      var _saveDocumentPost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee48(files, docContent, postLinkID) {\n        var postType, formData, key, request, response;\n        return regeneratorRuntime.wrap(function _callee48$(_context48) {\n          while (1) {\n            switch (_context48.prev = _context48.next) {\n              case 0:\n                postType = \"DOCUMENTATION\";\n                formData = new FormData();\n                formData.append('token', Cookies.get('authToken'));\n                formData.append('UserID_Session', Cookies.get('userIDSession'));\n                formData.append('UserSchool_Session', Cookies.get('schoolSession'));\n                formData.append(\"docContent\", docContent);\n                formData.append(\"postLinkID\", postLinkID);\n\n                if (files && files.length > 1) {\n                  for (key in files) {\n                    // console.log(key);\n                    if (files.hasOwnProperty(key)) {\n                      // console.log(files[key]);\n                      if (key > 0) {\n                        formData.append(\"upload_\".concat(key), files[key]);\n                      } else {\n                        formData.append(\"upload\", files[key]);\n                      }\n                    }\n                  }\n                } else if (files) {\n                  formData.append(\"upload\", files[0]);\n                } // formData.append(\"tagAcademicYearID\", tagAcademicYearID);\n\n\n                formData.append(\"postType\", postType);\n\n                if (tagUserID && tagUserID.length > 0) {\n                  formData.append(\"tagUserID\", \"\");\n                } else if (tagLevelID) {\n                  formData.append(\"tagLevelID\", \"\");\n                } else if (tagClassID) {\n                  formData.append(\"tagClassID\", \"\");\n                }\n\n                request = {\n                  url: \"\".concat(API_HOST, \"/controller/Posting.asmx/savePost\"),\n                  cache: false,\n                  type: 'POST',\n                  data: formData,\n                  enctype: 'multipart/form-data',\n                  processData: false,\n                  contentType: false,\n                  async: false,\n                  json: false,\n                  success: function success(response) {\n                    return response;\n                  }\n                };\n                _context48.next = 13;\n                return jQuery.ajax(request);\n\n              case 13:\n                response = _context48.sent;\n\n                if (typeof response === \"string\") {\n                  response = JSON.parse(response);\n                }\n\n                return _context48.abrupt(\"return\", response);\n\n              case 16:\n              case \"end\":\n                return _context48.stop();\n            }\n          }\n        }, _callee48);\n      }));\n\n      function saveDocumentPost(_x132, _x133, _x134) {\n        return _saveDocumentPost.apply(this, arguments);\n      }\n\n      return saveDocumentPost;\n    }()\n  }, {\n    key: \"saveBroadcastPost\",\n    value: function () {\n      var _saveBroadcastPost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee49(files, broadContent, tagUserID, tagClassID, tagLevelID, postLinkID) {\n        var postType, formData, key, request, response;\n        return regeneratorRuntime.wrap(function _callee49$(_context49) {\n          while (1) {\n            switch (_context49.prev = _context49.next) {\n              case 0:\n                postType = \"BROADCAST\";\n                formData = new FormData();\n                formData.append('token', Cookies.get('authToken'));\n                formData.append('UserID_Session', Cookies.get('userIDSession'));\n                formData.append('UserSchool_Session', Cookies.get('schoolSession'));\n                formData.append(\"broadContent\", broadContent);\n                formData.append(\"postLinkID\", postLinkID);\n\n                if (files && files.length > 1) {\n                  for (key in files) {\n                    // console.log(key);\n                    if (files.hasOwnProperty(key)) {\n                      // console.log(files[key]);\n                      if (key > 0) {\n                        formData.append(\"upload_\".concat(key), files[key]);\n                      } else {\n                        formData.append(\"upload\", files[key]);\n                      }\n                    }\n                  }\n                } else if (files) {\n                  formData.append(\"upload\", files[0]);\n                } // formData.append(\"tagAcademicYearID\", tagAcademicYearID);\n\n\n                formData.append(\"postType\", postType);\n\n                if (tagUserID && tagUserID.length > 0) {\n                  formData.append(\"tagUserID\", tagUserID);\n                } else if (tagLevelID) {\n                  formData.append(\"tagLevelID\", tagLevelID);\n                } else if (tagClassID) {\n                  formData.append(\"tagClassID\", tagClassID);\n                }\n\n                request = {\n                  url: \"\".concat(API_HOST, \"/controller/Posting.asmx/savePost\"),\n                  cache: false,\n                  type: 'POST',\n                  data: formData,\n                  enctype: 'multipart/form-data',\n                  processData: false,\n                  contentType: false,\n                  async: false,\n                  json: false,\n                  success: function success(response) {\n                    return response;\n                  }\n                };\n                _context49.next = 13;\n                return jQuery.ajax(request);\n\n              case 13:\n                response = _context49.sent;\n\n                if (typeof response === \"string\") {\n                  response = JSON.parse(response);\n                }\n\n                return _context49.abrupt(\"return\", response);\n\n              case 16:\n              case \"end\":\n                return _context49.stop();\n            }\n          }\n        }, _callee49);\n      }));\n\n      function saveBroadcastPost(_x135, _x136, _x137, _x138, _x139, _x140) {\n        return _saveBroadcastPost.apply(this, arguments);\n      }\n\n      return saveBroadcastPost;\n    }()\n  }, {\n    key: \"getPostFile\",\n    value: function () {\n      var _getPostFile = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee50(postID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee50$(_context50) {\n          while (1) {\n            switch (_context50.prev = _context50.next) {\n              case 0:\n                data = {\n                  postID: postID\n                };\n                _context50.next = 3;\n                return this.callWebService(\"/controller/Posting.asmx/getPostFile\", data, \"POST\");\n\n              case 3:\n                response = _context50.sent;\n                return _context50.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context50.stop();\n            }\n          }\n        }, _callee50, this);\n      }));\n\n      function getPostFile(_x141) {\n        return _getPostFile.apply(this, arguments);\n      }\n\n      return getPostFile;\n    }()\n  }, {\n    key: \"getPostAllTaggingStudentsByPostID\",\n    value: function () {\n      var _getPostAllTaggingStudentsByPostID = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee51(postID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee51$(_context51) {\n          while (1) {\n            switch (_context51.prev = _context51.next) {\n              case 0:\n                data = {\n                  postID: postID\n                };\n                _context51.next = 3;\n                return this.callWebService(\"/controller/Posting.asmx/getPostAllTaggingStudentsByPostID\", data, \"POST\");\n\n              case 3:\n                response = _context51.sent;\n                return _context51.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context51.stop();\n            }\n          }\n        }, _callee51, this);\n      }));\n\n      function getPostAllTaggingStudentsByPostID(_x142) {\n        return _getPostAllTaggingStudentsByPostID.apply(this, arguments);\n      }\n\n      return getPostAllTaggingStudentsByPostID;\n    }()\n  }, {\n    key: \"saveComment\",\n    value: function () {\n      var _saveComment = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee52(PostID, postContent) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee52$(_context52) {\n          while (1) {\n            switch (_context52.prev = _context52.next) {\n              case 0:\n                data = {\n                  postID: PostID,\n                  postContent: postContent\n                };\n                _context52.next = 3;\n                return this.callWebService(\"/controller/Posting.asmx/savePostComment\", data, \"POST\");\n\n              case 3:\n                response = _context52.sent;\n                return _context52.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context52.stop();\n            }\n          }\n        }, _callee52, this);\n      }));\n\n      function saveComment(_x143, _x144) {\n        return _saveComment.apply(this, arguments);\n      }\n\n      return saveComment;\n    }()\n  }, {\n    key: \"getComment\",\n    value: function () {\n      var _getComment = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee53(PostID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee53$(_context53) {\n          while (1) {\n            switch (_context53.prev = _context53.next) {\n              case 0:\n                data = {\n                  postId: PostID\n                };\n                _context53.next = 3;\n                return this.callWebService(\"/controller/Posting.asmx/getPostComment\", data, \"POST\");\n\n              case 3:\n                response = _context53.sent;\n                return _context53.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context53.stop();\n            }\n          }\n        }, _callee53, this);\n      }));\n\n      function getComment(_x145) {\n        return _getComment.apply(this, arguments);\n      }\n\n      return getComment;\n    }()\n  }, {\n    key: \"editComment\",\n    value: function () {\n      var _editComment = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee54(commentPostID, postContent, actionMode) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee54$(_context54) {\n          while (1) {\n            switch (_context54.prev = _context54.next) {\n              case 0:\n                data = {\n                  commentPostID: commentPostID,\n                  postContent: postContent,\n                  actionMode: actionMode\n                };\n                _context54.next = 3;\n                return this.callWebService(\"/controller/Posting.asmx/updatePostComment\", data, \"POST\");\n\n              case 3:\n                response = _context54.sent;\n                return _context54.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context54.stop();\n            }\n          }\n        }, _callee54, this);\n      }));\n\n      function editComment(_x146, _x147, _x148) {\n        return _editComment.apply(this, arguments);\n      }\n\n      return editComment;\n    }()\n  }, {\n    key: \"deleteComment\",\n    value: function () {\n      var _deleteComment = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee55(commentPostID, postContent, actionMode) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee55$(_context55) {\n          while (1) {\n            switch (_context55.prev = _context55.next) {\n              case 0:\n                data = {\n                  commentPostID: commentPostID,\n                  postContent: postContent,\n                  actionMode: actionMode\n                };\n                _context55.next = 3;\n                return this.callWebService(\"/controller/Posting.asmx/updatePostComment\", data, \"POST\");\n\n              case 3:\n                response = _context55.sent;\n                return _context55.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context55.stop();\n            }\n          }\n        }, _callee55, this);\n      }));\n\n      function deleteComment(_x149, _x150, _x151) {\n        return _deleteComment.apply(this, arguments);\n      }\n\n      return deleteComment;\n    }()\n  }, {\n    key: \"saveGallery\",\n    value: function () {\n      var _saveGallery = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee56(files, fileType, galFolderID, folderName) {\n        var formData, key, request, response;\n        return regeneratorRuntime.wrap(function _callee56$(_context56) {\n          while (1) {\n            switch (_context56.prev = _context56.next) {\n              case 0:\n                formData = new FormData();\n                formData.append('token', Cookies.get('authToken'));\n                formData.append('UserID_Session', Cookies.get('userIDSession'));\n\n                if (files && files.length > 1) {\n                  for (key in files) {\n                    // console.log(key);\n                    if (files.hasOwnProperty(key)) {\n                      // console.log(files[key]);\n                      if (key > 0) {\n                        formData.append(\"upload_\".concat(key), files[key]);\n                      } else {\n                        formData.append(\"upload\", files[key]);\n                      }\n                    }\n                  }\n                } else if (files) {\n                  formData.append(\"upload\", files[0]);\n                }\n\n                formData.append(\"fileType\", fileType);\n                formData.append(\"galFolderID\", galFolderID);\n                formData.append(\"folderName\", folderName);\n                request = {\n                  url: \"\".concat(API_HOST, \"/controller/Gallery.asmx/saveFile\"),\n                  cache: false,\n                  type: 'POST',\n                  data: formData,\n                  enctype: 'multipart/form-data',\n                  processData: false,\n                  contentType: false,\n                  async: false,\n                  json: false,\n                  success: function success(response) {\n                    return response;\n                  }\n                };\n                _context56.next = 10;\n                return jQuery.ajax(request);\n\n              case 10:\n                response = _context56.sent;\n\n                if (typeof response === \"string\") {\n                  response = JSON.parse(response);\n                }\n\n                return _context56.abrupt(\"return\", response);\n\n              case 13:\n              case \"end\":\n                return _context56.stop();\n            }\n          }\n        }, _callee56);\n      }));\n\n      function saveGallery(_x152, _x153, _x154, _x155) {\n        return _saveGallery.apply(this, arguments);\n      }\n\n      return saveGallery;\n    }()\n  }, {\n    key: \"pendingPost\",\n    value: function () {\n      var _pendingPost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee57(ID, PostID, PostContent, PostStatus, PostCreatedDate, PostApproverID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee57$(_context57) {\n          while (1) {\n            switch (_context57.prev = _context57.next) {\n              case 0:\n                data = {\n                  ID: ID,\n                  PostID: PostID,\n                  PostContent: PostContent,\n                  PostStatus: PostStatus,\n                  PostCreatedDate: PostCreatedDate,\n                  PostApproverID: PostApproverID\n                };\n                data.UserID_Session = Cookies.get('userIDSession');\n                _context57.next = 4;\n                return this.callWebService(\"/controller/Approver.asmx/getPendingApproverPost\", data, \"POST\");\n\n              case 4:\n                response = _context57.sent;\n                return _context57.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context57.stop();\n            }\n          }\n        }, _callee57, this);\n      }));\n\n      function pendingPost(_x156, _x157, _x158, _x159, _x160, _x161) {\n        return _pendingPost.apply(this, arguments);\n      }\n\n      return pendingPost;\n    }()\n  }, {\n    key: \"approvePost\",\n    value: function () {\n      var _approvePost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee58(postID, postType, actionStatus, postComment) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee58$(_context58) {\n          while (1) {\n            switch (_context58.prev = _context58.next) {\n              case 0:\n                data = {\n                  postID: postID,\n                  postType: postType,\n                  actionStatus: actionStatus,\n                  postComment: postComment\n                };\n                _context58.next = 3;\n                return this.callWebService(\"/controller/Posting.asmx/approvePost\", data, \"POST\");\n\n              case 3:\n                response = _context58.sent;\n                return _context58.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context58.stop();\n            }\n          }\n        }, _callee58, this);\n      }));\n\n      function approvePost(_x162, _x163, _x164, _x165) {\n        return _approvePost.apply(this, arguments);\n      }\n\n      return approvePost;\n    }()\n  }, {\n    key: \"updatePost\",\n    value: function () {\n      var _updatePost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee59(currentFiles, actionStatus, postID, UpdateContent, profolio, tagUserID, tagClassID, tagLevelID) {\n        var formData, key, request, response;\n        return regeneratorRuntime.wrap(function _callee59$(_context59) {\n          while (1) {\n            switch (_context59.prev = _context59.next) {\n              case 0:\n                formData = new FormData();\n                formData.append('token', Cookies.get('authToken'));\n                formData.append('UserID_Session', Cookies.get('userIDSession'));\n                console.log(currentFiles);\n\n                if (currentFiles && currentFiles.length > 1) {\n                  for (key in currentFiles) {\n                    // console.log(key);\n                    if (currentFiles.hasOwnProperty(key)) {\n                      // console.log(files[key]);\n                      if (key > 0) {\n                        formData.append(\"upload_\".concat(key), currentFiles[key]);\n                      } else {\n                        formData.append(\"upload\", currentFiles[key]);\n                      }\n                    }\n                  }\n                } else if (currentFiles) {\n                  formData.append(\"upload\", currentFiles[0]);\n                }\n\n                formData.append(\"actionStatus\", actionStatus);\n                formData.append(\"postID\", postID);\n                formData.append(\"UpdateContent\", UpdateContent);\n                formData.append(\"profolio\", profolio);\n                formData.append(\"tagUserID\", tagUserID);\n                formData.append(\"tagClassID\", tagClassID);\n                formData.append(\"tagLevelID\", tagLevelID);\n                request = {\n                  url: \"\".concat(API_HOST, \"/controller/Posting.asmx/updatePost\"),\n                  cache: false,\n                  type: 'POST',\n                  data: formData,\n                  enctype: 'multipart/form-data',\n                  processData: false,\n                  contentType: false,\n                  async: false,\n                  json: false,\n                  success: function success(response) {\n                    return response;\n                  }\n                };\n                _context59.next = 15;\n                return jQuery.ajax(request);\n\n              case 15:\n                response = _context59.sent;\n\n                if (typeof response === \"string\") {\n                  response = JSON.parse(response);\n                }\n\n                return _context59.abrupt(\"return\", response);\n\n              case 18:\n              case \"end\":\n                return _context59.stop();\n            }\n          }\n        }, _callee59);\n      }));\n\n      function updatePost(_x166, _x167, _x168, _x169, _x170, _x171, _x172, _x173) {\n        return _updatePost.apply(this, arguments);\n      }\n\n      return updatePost;\n    }()\n  }, {\n    key: \"softDeletePost\",\n    value: function () {\n      var _softDeletePost = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee60(postId, profolio) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee60$(_context60) {\n          while (1) {\n            switch (_context60.prev = _context60.next) {\n              case 0:\n                data = {\n                  postID: postId,\n                  profolio: profolio,\n                  actionStatus: \"Void\"\n                };\n                _context60.next = 3;\n                return this.callWebService(\"/controller/Posting.asmx/updatePost\", data, \"POST\");\n\n              case 3:\n                response = _context60.sent;\n                return _context60.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context60.stop();\n            }\n          }\n        }, _callee60, this);\n      }));\n\n      function softDeletePost(_x174, _x175) {\n        return _softDeletePost.apply(this, arguments);\n      }\n\n      return softDeletePost;\n    }()\n  }, {\n    key: \"getApproverMaster\",\n    value: function () {\n      var _getApproverMaster = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee61() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee61$(_context61) {\n          while (1) {\n            switch (_context61.prev = _context61.next) {\n              case 0:\n                data = {};\n                _context61.next = 3;\n                return this.callWebService(\"/controller/Approver.asmx/getApproverMaster\", data, \"POST\");\n\n              case 3:\n                response = _context61.sent;\n                return _context61.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context61.stop();\n            }\n          }\n        }, _callee61, this);\n      }));\n\n      function getApproverMaster() {\n        return _getApproverMaster.apply(this, arguments);\n      }\n\n      return getApproverMaster;\n    }()\n  }, {\n    key: \"saveApproverMaster\",\n    value: function () {\n      var _saveApproverMaster = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee62(approverLevel, approverUserID, approverType) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee62$(_context62) {\n          while (1) {\n            switch (_context62.prev = _context62.next) {\n              case 0:\n                data = {\n                  approverLevel: approverLevel,\n                  approverUserID: approverUserID,\n                  approverType: approverType\n                };\n                _context62.next = 3;\n                return this.callWebService(\"/controller/Approver.asmx/saveApproverMaster\", data, \"POST\");\n\n              case 3:\n                response = _context62.sent;\n                return _context62.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context62.stop();\n            }\n          }\n        }, _callee62, this);\n      }));\n\n      function saveApproverMaster(_x176, _x177, _x178) {\n        return _saveApproverMaster.apply(this, arguments);\n      }\n\n      return saveApproverMaster;\n    }()\n  }, {\n    key: \"updateApproverMaster\",\n    value: function () {\n      var _updateApproverMaster = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee63(approverMasterID, actionStatus) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee63$(_context63) {\n          while (1) {\n            switch (_context63.prev = _context63.next) {\n              case 0:\n                data = {\n                  approverMasterID: approverMasterID,\n                  actionStatus: actionStatus\n                };\n                _context63.next = 3;\n                return this.callWebService(\"/controller/Approver.asmx/updateApproverMaster\", data, \"POST\");\n\n              case 3:\n                response = _context63.sent;\n                return _context63.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context63.stop();\n            }\n          }\n        }, _callee63, this);\n      }));\n\n      function updateApproverMaster(_x179, _x180) {\n        return _updateApproverMaster.apply(this, arguments);\n      }\n\n      return updateApproverMaster;\n    }()\n  }, {\n    key: \"getApproverMasterSpecificUser\",\n    value: function () {\n      var _getApproverMasterSpecificUser = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee64() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee64$(_context64) {\n          while (1) {\n            switch (_context64.prev = _context64.next) {\n              case 0:\n                data = {};\n                _context64.next = 3;\n                return this.callWebService(\"/controller/Approver.asmx/getApproverMasterSpecificUser\", data, \"POST\");\n\n              case 3:\n                response = _context64.sent;\n                return _context64.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context64.stop();\n            }\n          }\n        }, _callee64, this);\n      }));\n\n      function getApproverMasterSpecificUser() {\n        return _getApproverMasterSpecificUser.apply(this, arguments);\n      }\n\n      return getApproverMasterSpecificUser;\n    }()\n  }, {\n    key: \"updateApproverMasterSpecificUser\",\n    value: function () {\n      var _updateApproverMasterSpecificUser = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee65(approverMasterSpecificID, actionStatus) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee65$(_context65) {\n          while (1) {\n            switch (_context65.prev = _context65.next) {\n              case 0:\n                data = {\n                  approverMasterSpecificID: approverMasterSpecificID,\n                  actionStatus: actionStatus\n                };\n                _context65.next = 3;\n                return this.callWebService(\"/controller/Approver.asmx/updateApproverMasterSpecificUser\", data, \"POST\");\n\n              case 3:\n                response = _context65.sent;\n                return _context65.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context65.stop();\n            }\n          }\n        }, _callee65, this);\n      }));\n\n      function updateApproverMasterSpecificUser(_x181, _x182) {\n        return _updateApproverMasterSpecificUser.apply(this, arguments);\n      }\n\n      return updateApproverMasterSpecificUser;\n    }()\n  }, {\n    key: \"saveApproverMasterSpecificUser\",\n    value: function () {\n      var _saveApproverMasterSpecificUser = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee66(neededApproveSpecificUserID, approverType) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee66$(_context66) {\n          while (1) {\n            switch (_context66.prev = _context66.next) {\n              case 0:\n                data = {\n                  neededApproveSpecificUserID: neededApproveSpecificUserID,\n                  approverType: approverType\n                };\n                _context66.next = 3;\n                return this.callWebService(\"/controller/Approver.asmx/saveApproverMasterSpecificUser\", data, \"POST\");\n\n              case 3:\n                response = _context66.sent;\n                return _context66.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context66.stop();\n            }\n          }\n        }, _callee66, this);\n      }));\n\n      function saveApproverMasterSpecificUser(_x183, _x184) {\n        return _saveApproverMasterSpecificUser.apply(this, arguments);\n      }\n\n      return saveApproverMasterSpecificUser;\n    }()\n  }, {\n    key: \"getPendingApprover\",\n    value: function () {\n      var _getPendingApprover = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee67() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee67$(_context67) {\n          while (1) {\n            switch (_context67.prev = _context67.next) {\n              case 0:\n                data = {};\n                _context67.next = 3;\n                return this.callWebService(\"/controller/Approver.asmx/getPendingApprover\", data, \"POST\");\n\n              case 3:\n                response = _context67.sent;\n                return _context67.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context67.stop();\n            }\n          }\n        }, _callee67, this);\n      }));\n\n      function getPendingApprover() {\n        return _getPendingApprover.apply(this, arguments);\n      }\n\n      return getPendingApprover;\n    }()\n  }, {\n    key: \"checkApproveStatusByUser\",\n    value: function () {\n      var _checkApproveStatusByUser = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee68(itemID, mode) {\n        var data, result;\n        return regeneratorRuntime.wrap(function _callee68$(_context68) {\n          while (1) {\n            switch (_context68.prev = _context68.next) {\n              case 0:\n                data = {\n                  itemID: itemID,\n                  mode: mode\n                };\n                _context68.next = 3;\n                return this.callWebService(\"/controller/Approver.asmx/checkApproveStatusByUser\", data, \"POST\");\n\n              case 3:\n                result = _context68.sent;\n                return _context68.abrupt(\"return\", result);\n\n              case 5:\n              case \"end\":\n                return _context68.stop();\n            }\n          }\n        }, _callee68, this);\n      }));\n\n      function checkApproveStatusByUser(_x185, _x186) {\n        return _checkApproveStatusByUser.apply(this, arguments);\n      }\n\n      return checkApproveStatusByUser;\n    }()\n  }, {\n    key: \"login2\",\n    value: function () {\n      var _login2 = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee69(userId, password) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee69$(_context69) {\n          while (1) {\n            switch (_context69.prev = _context69.next) {\n              case 0:\n                data = {\n                  username: userId,\n                  password: password\n                };\n                _context69.next = 3;\n                return this.callAPI(\"/login\", \"POST\", null, data);\n\n              case 3:\n                response = _context69.sent;\n                Cookies.set('authToken', response.token, {\n                  expires: 3 / 24\n                }); //expire in 3 hour);\n\n                return _context69.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context69.stop();\n            }\n          }\n        }, _callee69, this);\n      }));\n\n      function login2(_x187, _x188) {\n        return _login2.apply(this, arguments);\n      }\n\n      return login2;\n    }()\n  }, {\n    key: \"getCountryList\",\n    value: function () {\n      var _getCountryList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee70() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee70$(_context70) {\n          while (1) {\n            switch (_context70.prev = _context70.next) {\n              case 0:\n                // let response;\n                // try {\n                //     response = await fetch(\"http://local.emsv2/controller/Students.asmx/getCountryList\");\n                // } catch (err) {\n                //     console.log(err);\n                //     throw ERROR_SERVER_UNREACHABLE;\n                // }\n                // return await parseResponseAndHandleErrors(response);\n                data = {};\n                _context70.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getCountryList\", data, \"POST\");\n\n              case 3:\n                response = _context70.sent;\n                return _context70.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context70.stop();\n            }\n          }\n        }, _callee70, this);\n      }));\n\n      function getCountryList() {\n        return _getCountryList.apply(this, arguments);\n      }\n\n      return getCountryList;\n    }()\n  }, {\n    key: \"getLevel\",\n    value: function () {\n      var _getLevel = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee71(customLevelNotEqual) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee71$(_context71) {\n          while (1) {\n            switch (_context71.prev = _context71.next) {\n              case 0:\n                data = {\n                  customLevelNotEqual: customLevelNotEqual\n                };\n                _context71.next = 3;\n                return this.callWebService(\"/controller/Course.asmx/getLevel\", data, \"POST\");\n\n              case 3:\n                response = _context71.sent;\n                return _context71.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context71.stop();\n            }\n          }\n        }, _callee71, this);\n      }));\n\n      function getLevel(_x189) {\n        return _getLevel.apply(this, arguments);\n      }\n\n      return getLevel;\n    }()\n  }, {\n    key: \"getLevelSpecificSchool\",\n    value: function () {\n      var _getLevelSpecificSchool = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee72(speificSchoolID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee72$(_context72) {\n          while (1) {\n            switch (_context72.prev = _context72.next) {\n              case 0:\n                data = {\n                  speificSchoolID: speificSchoolID\n                };\n                _context72.next = 3;\n                return this.callWebService(\"/controller/Course.asmx/getLevel\", data, \"POST\");\n\n              case 3:\n                response = _context72.sent;\n                return _context72.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context72.stop();\n            }\n          }\n        }, _callee72, this);\n      }));\n\n      function getLevelSpecificSchool(_x190) {\n        return _getLevelSpecificSchool.apply(this, arguments);\n      }\n\n      return getLevelSpecificSchool;\n    }()\n  }, {\n    key: \"getStudentDropDownList\",\n    value: function () {\n      var _getStudentDropDownList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee73(jsonString) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee73$(_context73) {\n          while (1) {\n            switch (_context73.prev = _context73.next) {\n              case 0:\n                data = {\n                  jsonString: jsonString\n                };\n                _context73.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getStudentDropDownList\", data, \"POST\");\n\n              case 3:\n                response = _context73.sent;\n                return _context73.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context73.stop();\n            }\n          }\n        }, _callee73, this);\n      }));\n\n      function getStudentDropDownList(_x191) {\n        return _getStudentDropDownList.apply(this, arguments);\n      }\n\n      return getStudentDropDownList;\n    }()\n  }, {\n    key: \"getStudentEnrollment\",\n    value: function () {\n      var _getStudentEnrollment = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee74() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee74$(_context74) {\n          while (1) {\n            switch (_context74.prev = _context74.next) {\n              case 0:\n                data = {\n                  UserSchool_Session: Cookies.get('schoolSession'),\n                  passHowManyDaysStudentCreated: \"30\"\n                };\n                _context74.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getAllWithdrawStudentsCurrentActiveYearBySchool\", data, \"POST\");\n\n              case 3:\n                response = _context74.sent;\n                return _context74.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context74.stop();\n            }\n          }\n        }, _callee74, this);\n      }));\n\n      function getStudentEnrollment() {\n        return _getStudentEnrollment.apply(this, arguments);\n      }\n\n      return getStudentEnrollment;\n    }()\n  }, {\n    key: \"getWithdrawStudent\",\n    value: function () {\n      var _getWithdrawStudent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee75() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee75$(_context75) {\n          while (1) {\n            switch (_context75.prev = _context75.next) {\n              case 0:\n                data = {\n                  UserSchool_Session: Cookies.get('schoolSession')\n                };\n                _context75.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getAllWithdrawStudentsCurrentActiveYearBySchool\", data, \"POST\");\n\n              case 3:\n                response = _context75.sent;\n                return _context75.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context75.stop();\n            }\n          }\n        }, _callee75, this);\n      }));\n\n      function getWithdrawStudent() {\n        return _getWithdrawStudent.apply(this, arguments);\n      }\n\n      return getWithdrawStudent;\n    }()\n  }, {\n    key: \"getTransferStudent\",\n    value: function () {\n      var _getTransferStudent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee76() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee76$(_context76) {\n          while (1) {\n            switch (_context76.prev = _context76.next) {\n              case 0:\n                data = {\n                  UserSchool_Session: Cookies.get('schoolSession'),\n                  passHowManyDaysStudentTransffered: \"30\"\n                };\n                _context76.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getAllTransferredStudentsBySchoolDay\", data, \"POST\");\n\n              case 3:\n                response = _context76.sent;\n                return _context76.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context76.stop();\n            }\n          }\n        }, _callee76, this);\n      }));\n\n      function getTransferStudent() {\n        return _getTransferStudent.apply(this, arguments);\n      }\n\n      return getTransferStudent;\n    }()\n  }, {\n    key: \"getAcademicYear\",\n    value: function () {\n      var _getAcademicYear = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee77() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee77$(_context77) {\n          while (1) {\n            switch (_context77.prev = _context77.next) {\n              case 0:\n                data = {};\n                _context77.next = 3;\n                return this.callWebService(\"/controller/Course.asmx/getAcademicYear\", data, \"POST\");\n\n              case 3:\n                response = _context77.sent;\n                return _context77.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context77.stop();\n            }\n          }\n        }, _callee77, this);\n      }));\n\n      function getAcademicYear() {\n        return _getAcademicYear.apply(this, arguments);\n      }\n\n      return getAcademicYear;\n    }()\n  }, {\n    key: \"getIntakeYear\",\n    value: function () {\n      var _getIntakeYear = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee78() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee78$(_context78) {\n          while (1) {\n            switch (_context78.prev = _context78.next) {\n              case 0:\n                data = {};\n                _context78.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getIntakeYear\", data, \"POST\");\n\n              case 3:\n                response = _context78.sent;\n                return _context78.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context78.stop();\n            }\n          }\n        }, _callee78, this);\n      }));\n\n      function getIntakeYear() {\n        return _getIntakeYear.apply(this, arguments);\n      }\n\n      return getIntakeYear;\n    }()\n  }, {\n    key: \"getUserList\",\n    value: function () {\n      var _getUserList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee79() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee79$(_context79) {\n          while (1) {\n            switch (_context79.prev = _context79.next) {\n              case 0:\n                data = {};\n                _context79.next = 3;\n                return this.callWebService(\"/controller/UserMagt.asmx/getUserList\", data, \"POST\");\n\n              case 3:\n                response = _context79.sent;\n                return _context79.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context79.stop();\n            }\n          }\n        }, _callee79, this);\n      }));\n\n      function getUserList() {\n        return _getUserList.apply(this, arguments);\n      }\n\n      return getUserList;\n    }() // SAMPLE 2 using axios\n\n  }, {\n    key: \"PostToGetDataWEIRD\",\n    value: function () {\n      var _PostToGetDataWEIRD = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee80() {\n        var options, response;\n        return regeneratorRuntime.wrap(function _callee80$(_context80) {\n          while (1) {\n            switch (_context80.prev = _context80.next) {\n              case 0:\n                options = {\n                  countryID: \"\"\n                };\n                _context80.prev = 1;\n                _context80.next = 4;\n                return axios.post(\"http://local.emsv2/controller/Students.asmx/getCountryList?countryID=\", options);\n\n              case 4:\n                response = _context80.sent;\n                _context80.next = 11;\n                break;\n\n              case 7:\n                _context80.prev = 7;\n                _context80.t0 = _context80[\"catch\"](1);\n                console.log(_context80.t0);\n                throw ERROR_SERVER_UNREACHABLE;\n\n              case 11:\n                return _context80.abrupt(\"return\", response.data);\n\n              case 12:\n              case \"end\":\n                return _context80.stop();\n            }\n          }\n        }, _callee80, null, [[1, 7]]);\n      }));\n\n      function PostToGetDataWEIRD() {\n        return _PostToGetDataWEIRD.apply(this, arguments);\n      }\n\n      return PostToGetDataWEIRD;\n    }() // POST SAMPLE\n\n  }, {\n    key: \"createStudent\",\n    value: function () {\n      var _createStudent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee81() {\n        var headers, request, requestBody, response;\n        return regeneratorRuntime.wrap(function _callee81$(_context81) {\n          while (1) {\n            switch (_context81.prev = _context81.next) {\n              case 0:\n                headers = new Headers();\n                headers.append(\"Content-Type\", \"application/json\");\n                request = {\n                  method: \"POST\",\n                  headers: headers\n                };\n                requestBody = {\n                  countryID: \"\"\n                };\n                request.body = _JSON$stringify(rquestBody);\n                _context81.prev = 5;\n                _context81.next = 8;\n                return fetch(\"URL\", request);\n\n              case 8:\n                response = _context81.sent;\n                _context81.next = 16;\n                break;\n\n              case 11:\n                _context81.prev = 11;\n                _context81.t0 = _context81[\"catch\"](5);\n                console.log(_context81.t0);\n                getApproverMaster;\n                throw ERROR_SERVER_UNREACHABLE;\n\n              case 16:\n                _context81.next = 18;\n                return parseResponseAndHandleErrors(response);\n\n              case 18:\n                return _context81.abrupt(\"return\", _context81.sent);\n\n              case 19:\n              case \"end\":\n                return _context81.stop();\n            }\n          }\n        }, _callee81, null, [[5, 11]]);\n      }));\n\n      function createStudent() {\n        return _createStudent.apply(this, arguments);\n      }\n\n      return createStudent;\n    }()\n  }, {\n    key: \"getAttendanceClass\",\n    value: function () {\n      var _getAttendanceClass = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee82() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee82$(_context82) {\n          while (1) {\n            switch (_context82.prev = _context82.next) {\n              case 0:\n                data = {};\n                _context82.next = 3;\n                return this.callWebService(\"/controller/Attendance.asmx/getAttendanceClass\", data, \"POST\");\n\n              case 3:\n                response = _context82.sent;\n                return _context82.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context82.stop();\n            }\n          }\n        }, _callee82, this);\n      }));\n\n      function getAttendanceClass() {\n        return _getAttendanceClass.apply(this, arguments);\n      }\n\n      return getAttendanceClass;\n    }()\n  }, {\n    key: \"LoadAttendanceList\",\n    value: function () {\n      var _LoadAttendanceList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee83(classValue) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee83$(_context83) {\n          while (1) {\n            switch (_context83.prev = _context83.next) {\n              case 0:\n                data = {\n                  classValue: classValue\n                };\n                _context83.next = 3;\n                return this.callWebService(\"/controller/Attendance.asmx/LoadAttendanceList\", data, \"POST\");\n\n              case 3:\n                response = _context83.sent;\n                return _context83.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context83.stop();\n            }\n          }\n        }, _callee83, this);\n      }));\n\n      function LoadAttendanceList(_x192) {\n        return _LoadAttendanceList.apply(this, arguments);\n      }\n\n      return LoadAttendanceList;\n    }()\n  }, {\n    key: \"updateAttendanceList\",\n    value: function () {\n      var _updateAttendanceList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee84(jsonString) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee84$(_context84) {\n          while (1) {\n            switch (_context84.prev = _context84.next) {\n              case 0:\n                data = {\n                  jsonString: jsonString\n                };\n                _context84.next = 3;\n                return this.callWebService(\"/controller/Attendance.asmx/updateAttendanceList\", data, \"POST\");\n\n              case 3:\n                response = _context84.sent;\n                return _context84.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context84.stop();\n            }\n          }\n        }, _callee84, this);\n      }));\n\n      function updateAttendanceList(_x193) {\n        return _updateAttendanceList.apply(this, arguments);\n      }\n\n      return updateAttendanceList;\n    }() //#region Gallery\n\n  }, {\n    key: \"getFiles\",\n    value: function () {\n      var _getFiles = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee85(galFolderID, startRowNo, endRowNo) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee85$(_context85) {\n          while (1) {\n            switch (_context85.prev = _context85.next) {\n              case 0:\n                data = {\n                  galFolderID: galFolderID,\n                  startRowNo: startRowNo,\n                  endRowNo: endRowNo,\n                  fileRetrieveMode: \"File\"\n                };\n                _context85.next = 3;\n                return this.callWebService(\"/controller/Gallery.asmx/getFile\", data, \"POST\");\n\n              case 3:\n                response = _context85.sent;\n                return _context85.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context85.stop();\n            }\n          }\n        }, _callee85, this);\n      }));\n\n      function getFiles(_x194, _x195, _x196) {\n        return _getFiles.apply(this, arguments);\n      }\n\n      return getFiles;\n    }()\n  }, {\n    key: \"getFolders\",\n    value: function () {\n      var _getFolders = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee86(galFolderID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee86$(_context86) {\n          while (1) {\n            switch (_context86.prev = _context86.next) {\n              case 0:\n                data = {\n                  galFolderID: galFolderID,\n                  fileRetrieveMode: \"Folder\"\n                };\n                _context86.next = 3;\n                return this.callWebService(\"/controller/Gallery.asmx/getFile\", data, \"POST\");\n\n              case 3:\n                response = _context86.sent;\n                return _context86.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context86.stop();\n            }\n          }\n        }, _callee86, this);\n      }));\n\n      function getFolders(_x197) {\n        return _getFolders.apply(this, arguments);\n      }\n\n      return getFolders;\n    }()\n  }, {\n    key: \"downloadFile\",\n    value: function () {\n      var _downloadFile = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee87(galID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee87$(_context87) {\n          while (1) {\n            switch (_context87.prev = _context87.next) {\n              case 0:\n                data = {\n                  galID: galID\n                };\n                _context87.next = 3;\n                return this.callWebService(\"/controller/Gallery.asmx/downloadFile\", data, \"POST\");\n\n              case 3:\n                response = _context87.sent;\n                return _context87.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context87.stop();\n            }\n          }\n        }, _callee87, this);\n      }));\n\n      function downloadFile(_x198) {\n        return _downloadFile.apply(this, arguments);\n      }\n\n      return downloadFile;\n    }()\n  }, {\n    key: \"saveFile\",\n    value: function () {\n      var _saveFile = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee88(files, galFolderID) {\n        var formData, i, request, response;\n        return regeneratorRuntime.wrap(function _callee88$(_context88) {\n          while (1) {\n            switch (_context88.prev = _context88.next) {\n              case 0:\n                formData = new FormData();\n                formData.append('fileType', \"File\");\n                formData.append('galFolderID', galFolderID);\n                formData.append('token', Cookies.get('authToken'));\n                formData.append('UserID_Session', Cookies.get('userIDSession'));\n                formData.append('folderName', \"\");\n\n                if (files && files.length > 1) {\n                  for (i = 0; i < files.length; i++) {\n                    formData.append(\"files\" + i, files[i]);\n                    console.log(files[i]);\n                  }\n                } else if (files) {\n                  formData.append(\"files\", files[0]);\n                }\n\n                request = {\n                  url: \"\".concat(API_HOST, \"/controller/Gallery.asmx/saveFile\"),\n                  cache: false,\n                  type: 'POST',\n                  data: formData,\n                  enctype: 'multipart/form-data',\n                  processData: false,\n                  contentType: false,\n                  async: false,\n                  json: false,\n                  success: function success(response) {\n                    return response;\n                  }\n                };\n                _context88.next = 10;\n                return jQuery.ajax(request);\n\n              case 10:\n                response = _context88.sent;\n\n                if (typeof response === \"string\") {\n                  response = JSON.parse(response);\n                }\n\n                return _context88.abrupt(\"return\", response);\n\n              case 13:\n              case \"end\":\n                return _context88.stop();\n            }\n          }\n        }, _callee88);\n      }));\n\n      function saveFile(_x199, _x200) {\n        return _saveFile.apply(this, arguments);\n      }\n\n      return saveFile;\n    }()\n  }, {\n    key: \"createFolder\",\n    value: function () {\n      var _createFolder = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee89(galFolderID, folderName) {\n        var formData, request, response;\n        return regeneratorRuntime.wrap(function _callee89$(_context89) {\n          while (1) {\n            switch (_context89.prev = _context89.next) {\n              case 0:\n                formData = new FormData();\n                formData.append('fileType', \"Folder\");\n                formData.append('galFolderID', galFolderID);\n                formData.append('token', Cookies.get('authToken'));\n                formData.append('UserID_Session', Cookies.get('userIDSession'));\n                formData.append('folderName', folderName);\n                formData.append(\"files\", null);\n                request = {\n                  url: \"\".concat(API_HOST, \"/controller/Gallery.asmx/saveFile\"),\n                  cache: false,\n                  type: 'POST',\n                  data: formData,\n                  enctype: 'multipart/form-data',\n                  processData: false,\n                  contentType: false,\n                  async: false,\n                  json: false,\n                  success: function success(response) {\n                    return response;\n                  }\n                };\n                _context89.next = 10;\n                return jQuery.ajax(request);\n\n              case 10:\n                response = _context89.sent;\n\n                if (typeof response === \"string\") {\n                  response = JSON.parse(response);\n                }\n\n                return _context89.abrupt(\"return\", response);\n\n              case 13:\n              case \"end\":\n                return _context89.stop();\n            }\n          }\n        }, _callee89);\n      }));\n\n      function createFolder(_x201, _x202) {\n        return _createFolder.apply(this, arguments);\n      }\n\n      return createFolder;\n    }()\n  }, {\n    key: \"removeFile\",\n    value: function () {\n      var _removeFile = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee90(galID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee90$(_context90) {\n          while (1) {\n            switch (_context90.prev = _context90.next) {\n              case 0:\n                data = {\n                  galID: galID,\n                  updateFileMode: \"Delete\"\n                };\n                _context90.next = 3;\n                return this.callWebService(\"/controller/Gallery.asmx/updateFile\", data, \"POST\");\n\n              case 3:\n                response = _context90.sent;\n                return _context90.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context90.stop();\n            }\n          }\n        }, _callee90, this);\n      }));\n\n      function removeFile(_x203) {\n        return _removeFile.apply(this, arguments);\n      }\n\n      return removeFile;\n    }()\n  }, {\n    key: \"renameFile\",\n    value: function () {\n      var _renameFile = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee91(galID, folderRename) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee91$(_context91) {\n          while (1) {\n            switch (_context91.prev = _context91.next) {\n              case 0:\n                data = {\n                  galID: galID,\n                  folderRename: folderRename,\n                  updateFileMode: \"Rename\"\n                };\n                _context91.next = 3;\n                return this.callWebService(\"/controller/Gallery.asmx/updateFile\", data, \"POST\");\n\n              case 3:\n                response = _context91.sent;\n                return _context91.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context91.stop();\n            }\n          }\n        }, _callee91, this);\n      }));\n\n      function renameFile(_x204, _x205) {\n        return _renameFile.apply(this, arguments);\n      }\n\n      return renameFile;\n    }()\n  }, {\n    key: \"moveFile\",\n    value: function () {\n      var _moveFile = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee92(galID, galFolderID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee92$(_context92) {\n          while (1) {\n            switch (_context92.prev = _context92.next) {\n              case 0:\n                data = {\n                  galID: galID,\n                  galFolderID: galFolderID,\n                  updateFileMode: \"Move\"\n                };\n                _context92.next = 3;\n                return this.callWebService(\"/controller/Gallery.asmx/updateFile\", data, \"POST\");\n\n              case 3:\n                response = _context92.sent;\n                return _context92.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context92.stop();\n            }\n          }\n        }, _callee92, this);\n      }));\n\n      function moveFile(_x206, _x207) {\n        return _moveFile.apply(this, arguments);\n      }\n\n      return moveFile;\n    }()\n  }, {\n    key: \"getWhitelist\",\n    value: function () {\n      var _getWhitelist = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee93() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee93$(_context93) {\n          while (1) {\n            switch (_context93.prev = _context93.next) {\n              case 0:\n                data = {};\n                _context93.next = 3;\n                return this.callWebService(\"/controller/Gallery.asmx/getWhitelistFileExt\", data, \"POST\");\n\n              case 3:\n                response = _context93.sent;\n                return _context93.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context93.stop();\n            }\n          }\n        }, _callee93, this);\n      }));\n\n      function getWhitelist() {\n        return _getWhitelist.apply(this, arguments);\n      }\n\n      return getWhitelist;\n    }() //#endregion\n\n    /*#region Portfolio*/\n\n  }, {\n    key: \"softDeletePortfolio\",\n    value: function () {\n      var _softDeletePortfolio = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee94(portfolioID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee94$(_context94) {\n          while (1) {\n            switch (_context94.prev = _context94.next) {\n              case 0:\n                data = {\n                  jsonStringPortfolioID: portfolioID,\n                  actionStatus: \"VOID\"\n                };\n                _context94.next = 3;\n                return this.callWebService(\"/controller/Portfolio.asmx/updatePortfolio\", data, \"POST\");\n\n              case 3:\n                response = _context94.sent;\n                return _context94.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context94.stop();\n            }\n          }\n        }, _callee94, this);\n      }));\n\n      function softDeletePortfolio(_x208) {\n        return _softDeletePortfolio.apply(this, arguments);\n      }\n\n      return softDeletePortfolio;\n    }()\n  }, {\n    key: \"getPortfolioListByStudentID\",\n    value: function () {\n      var _getPortfolioListByStudentID = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee95(str_StudentID) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee95$(_context95) {\n          while (1) {\n            switch (_context95.prev = _context95.next) {\n              case 0:\n                data = {\n                  studentID: str_StudentID\n                };\n                _context95.next = 3;\n                return this.callWebService(\"/controller/Portfolio.asmx/getPortfolioList\", data, \"POST\");\n\n              case 3:\n                return _context95.abrupt(\"return\", _context95.sent);\n\n              case 4:\n              case \"end\":\n                return _context95.stop();\n            }\n          }\n        }, _callee95, this);\n      }));\n\n      function getPortfolioListByStudentID(_x209) {\n        return _getPortfolioListByStudentID.apply(this, arguments);\n      }\n\n      return getPortfolioListByStudentID;\n    }()\n  }, {\n    key: \"getPostByPortfolioID\",\n    value: function () {\n      var _getPostByPortfolioID = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee96(str_PortfolioID) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee96$(_context96) {\n          while (1) {\n            switch (_context96.prev = _context96.next) {\n              case 0:\n                data = {\n                  portfolioID: str_PortfolioID\n                };\n                _context96.next = 3;\n                return this.callWebService(\"/controller/Portfolio.asmx/getPortfolioPostingPost\", data, \"POST\");\n\n              case 3:\n                return _context96.abrupt(\"return\", _context96.sent);\n\n              case 4:\n              case \"end\":\n                return _context96.stop();\n            }\n          }\n        }, _callee96, this);\n      }));\n\n      function getPostByPortfolioID(_x210) {\n        return _getPostByPortfolioID.apply(this, arguments);\n      }\n\n      return getPostByPortfolioID;\n    }()\n  }, {\n    key: \"getPortfolioHeaderDetails\",\n    value: function () {\n      var _getPortfolioHeaderDetails = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee97(portfolioID) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee97$(_context97) {\n          while (1) {\n            switch (_context97.prev = _context97.next) {\n              case 0:\n                data = {\n                  portfolioID: portfolioID\n                };\n                _context97.next = 3;\n                return this.callWebService(\"/controller/Portfolio.asmx/getPortfolioHeaderDetails\", data, \"POST\");\n\n              case 3:\n                return _context97.abrupt(\"return\", _context97.sent);\n\n              case 4:\n              case \"end\":\n                return _context97.stop();\n            }\n          }\n        }, _callee97, this);\n      }));\n\n      function getPortfolioHeaderDetails(_x211) {\n        return _getPortfolioHeaderDetails.apply(this, arguments);\n      }\n\n      return getPortfolioHeaderDetails;\n    }()\n  }, {\n    key: \"getStudentPostByType\",\n    value: function () {\n      var _getStudentPostByType = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee98(str_StudentID, str_PostType, numberOfPost, lastPostID) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee98$(_context98) {\n          while (1) {\n            switch (_context98.prev = _context98.next) {\n              case 0:\n                data = {\n                  studentID: str_StudentID,\n                  postType: str_PostType,\n                  numberOfPost: numberOfPost,\n                  lastPostID: lastPostID\n                };\n                _context98.next = 3;\n                return this.callWebService(\"/controller/Posting.asmx/getPostStudent\", data, \"POST\");\n\n              case 3:\n                return _context98.abrupt(\"return\", _context98.sent);\n\n              case 4:\n              case \"end\":\n                return _context98.stop();\n            }\n          }\n        }, _callee98, this);\n      }));\n\n      function getStudentPostByType(_x212, _x213, _x214, _x215) {\n        return _getStudentPostByType.apply(this, arguments);\n      }\n\n      return getStudentPostByType;\n    }()\n  }, {\n    key: \"savePortfolio\",\n    value: function () {\n      var _savePortfolio = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee99(str_PortfolioDesc, str_StudentID, PortfolioLinkPortfolioID, portfolioTitle, portfolioEnduringThemes, portfolioResearchQuestion, jsonStringPostDetails) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee99$(_context99) {\n          while (1) {\n            switch (_context99.prev = _context99.next) {\n              case 0:\n                data = {\n                  portfolioDesc: str_PortfolioDesc,\n                  studentID: str_StudentID,\n                  PortfolioLinkPortfolioID: PortfolioLinkPortfolioID,\n                  portfolioTitle: portfolioTitle,\n                  portfolioEnduringThemes: portfolioEnduringThemes,\n                  portfolioResearchQuestion: portfolioResearchQuestion,\n                  jsonStringPostDetails: jsonStringPostDetails\n                };\n                _context99.next = 3;\n                return this.callWebService(\"/controller/Portfolio.asmx/savePortfolio\", data, \"POST\");\n\n              case 3:\n                return _context99.abrupt(\"return\", _context99.sent);\n\n              case 4:\n              case \"end\":\n                return _context99.stop();\n            }\n          }\n        }, _callee99, this);\n      }));\n\n      function savePortfolio(_x216, _x217, _x218, _x219, _x220, _x221, _x222) {\n        return _savePortfolio.apply(this, arguments);\n      }\n\n      return savePortfolio;\n    }()\n  }, {\n    key: \"approvePortfolio\",\n    value: function () {\n      var _approvePortfolio = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee100(portfolioID, actionStatus, portfolioEnduringThemesComment, portfolioResearchQuestionComment, jsonStringCommentValue) {\n        var data, result;\n        return regeneratorRuntime.wrap(function _callee100$(_context100) {\n          while (1) {\n            switch (_context100.prev = _context100.next) {\n              case 0:\n                data = {\n                  portfolioID: portfolioID,\n                  actionStatus: actionStatus,\n                  portfolioEnduringThemesComment: portfolioEnduringThemesComment,\n                  portfolioResearchQuestionComment: portfolioResearchQuestionComment,\n                  jsonStringCommentValue: jsonStringCommentValue\n                };\n                _context100.next = 3;\n                return this.callWebService(\"/controller/Portfolio.asmx/approvePortfolio\", data, \"POST\");\n\n              case 3:\n                result = _context100.sent;\n                return _context100.abrupt(\"return\", result);\n\n              case 5:\n              case \"end\":\n                return _context100.stop();\n            }\n          }\n        }, _callee100, this);\n      }));\n\n      function approvePortfolio(_x223, _x224, _x225, _x226, _x227) {\n        return _approvePortfolio.apply(this, arguments);\n      }\n\n      return approvePortfolio;\n    }()\n  }, {\n    key: \"getApproverComment\",\n    value: function () {\n      var _getApproverComment = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee101(itemID) {\n        var data, result;\n        return regeneratorRuntime.wrap(function _callee101$(_context101) {\n          while (1) {\n            switch (_context101.prev = _context101.next) {\n              case 0:\n                data = {\n                  itemID: itemID\n                };\n                _context101.next = 3;\n                return this.callWebService(\"/controller/Approver.asmx/getApproverComment\", data, \"POST\");\n\n              case 3:\n                result = _context101.sent;\n                return _context101.abrupt(\"return\", result);\n\n              case 5:\n              case \"end\":\n                return _context101.stop();\n            }\n          }\n        }, _callee101, this);\n      }));\n\n      function getApproverComment(_x228) {\n        return _getApproverComment.apply(this, arguments);\n      }\n\n      return getApproverComment;\n    }()\n    /*#endregion*/\n\n    /*#region Promotion*/\n\n  }, {\n    key: \"getPromotionAcademicYear\",\n    value: function () {\n      var _getPromotionAcademicYear = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee102() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee102$(_context102) {\n          while (1) {\n            switch (_context102.prev = _context102.next) {\n              case 0:\n                data = {};\n                _context102.next = 3;\n                return this.callWebService(\"/controller/Operations.asmx/getMassPromotionsAcademicYear\", data, \"POST\");\n\n              case 3:\n                response = _context102.sent;\n                return _context102.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context102.stop();\n            }\n          }\n        }, _callee102, this);\n      }));\n\n      function getPromotionAcademicYear() {\n        return _getPromotionAcademicYear.apply(this, arguments);\n      }\n\n      return getPromotionAcademicYear;\n    }()\n  }, {\n    key: \"getPromotionLevel\",\n    value: function () {\n      var _getPromotionLevel = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee103() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee103$(_context103) {\n          while (1) {\n            switch (_context103.prev = _context103.next) {\n              case 0:\n                data = {};\n                _context103.next = 3;\n                return this.callWebService(\"/controller/Operations.asmx/getMassPromotionsLevel\", data, \"POST\");\n\n              case 3:\n                response = _context103.sent;\n                return _context103.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context103.stop();\n            }\n          }\n        }, _callee103, this);\n      }));\n\n      function getPromotionLevel() {\n        return _getPromotionLevel.apply(this, arguments);\n      }\n\n      return getPromotionLevel;\n    }()\n  }, {\n    key: \"getClassByLevelClassID\",\n    value: function () {\n      var _getClassByLevelClassID = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee104(str_LevelID, str_ClassID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee104$(_context104) {\n          while (1) {\n            switch (_context104.prev = _context104.next) {\n              case 0:\n                data = {\n                  levelID: str_LevelID,\n                  classID: str_ClassID\n                };\n                _context104.next = 3;\n                return this.callWebService(\"/controller/Operations.asmx/getMassPromotionsStudentListByClassLevel\", data, \"POST\");\n\n              case 3:\n                response = _context104.sent;\n                return _context104.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context104.stop();\n            }\n          }\n        }, _callee104, this);\n      }));\n\n      function getClassByLevelClassID(_x229, _x230) {\n        return _getClassByLevelClassID.apply(this, arguments);\n      }\n\n      return getClassByLevelClassID;\n    }()\n  }, {\n    key: \"getClassByAcademicYear\",\n    value: function () {\n      var _getClassByAcademicYear = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee105(str_AcademicYearID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee105$(_context105) {\n          while (1) {\n            switch (_context105.prev = _context105.next) {\n              case 0:\n                data = {\n                  academicYearID: str_AcademicYearID\n                };\n                _context105.next = 3;\n                return this.callWebService(\"/controller/Operations.asmx/getMassPromotionsClassLevelByAcademicYear\", data, \"POST\");\n\n              case 3:\n                response = _context105.sent;\n                return _context105.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context105.stop();\n            }\n          }\n        }, _callee105, this);\n      }));\n\n      function getClassByAcademicYear(_x231) {\n        return _getClassByAcademicYear.apply(this, arguments);\n      }\n\n      return getClassByAcademicYear;\n    }()\n  }, {\n    key: \"getNextLevel\",\n    value: function () {\n      var _getNextLevel = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee106(str_LevelID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee106$(_context106) {\n          while (1) {\n            switch (_context106.prev = _context106.next) {\n              case 0:\n                data = {\n                  levelID: str_LevelID\n                };\n                _context106.next = 3;\n                return this.callWebService(\"/controller/Operations.asmx/getMassPromotionsNextLevel\", data, \"POST\");\n\n              case 3:\n                response = _context106.sent;\n                return _context106.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context106.stop();\n            }\n          }\n        }, _callee106, this);\n      }));\n\n      function getNextLevel(_x232) {\n        return _getNextLevel.apply(this, arguments);\n      }\n\n      return getNextLevel;\n    }() // studentIDArray (student id split by comma \",\") & levelID & academicYearID & classID\n\n  }, {\n    key: \"saveStudentPromotions\",\n    value: function () {\n      var _saveStudentPromotions = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee107(arrstr_StudentID, str_AcademicYearID, str_LevelID, str_ClassID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee107$(_context107) {\n          while (1) {\n            switch (_context107.prev = _context107.next) {\n              case 0:\n                data = {\n                  studentIDArray: arrstr_StudentID,\n                  academicYearID: str_AcademicYearID,\n                  levelID: str_LevelID,\n                  classID: str_ClassID\n                };\n                _context107.next = 3;\n                return this.callWebService(\"/controller/Operations.asmx/saveMassPromotions\", data, \"POST\");\n\n              case 3:\n                response = _context107.sent;\n                return _context107.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context107.stop();\n            }\n          }\n        }, _callee107, this);\n      }));\n\n      function saveStudentPromotions(_x233, _x234, _x235, _x236) {\n        return _saveStudentPromotions.apply(this, arguments);\n      }\n\n      return saveStudentPromotions;\n    }()\n  }, {\n    key: \"getAllActiveStudentsBySchool\",\n    value: function () {\n      var _getAllActiveStudentsBySchool = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee108() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee108$(_context108) {\n          while (1) {\n            switch (_context108.prev = _context108.next) {\n              case 0:\n                data = {};\n                _context108.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getAllActiveStudentsBySchool\", data, \"POST\");\n\n              case 3:\n                response = _context108.sent;\n                return _context108.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context108.stop();\n            }\n          }\n        }, _callee108, this);\n      }));\n\n      function getAllActiveStudentsBySchool() {\n        return _getAllActiveStudentsBySchool.apply(this, arguments);\n      }\n\n      return getAllActiveStudentsBySchool;\n    }()\n    /*#endregion*/\n\n    /*#region Report*/\n\n  }, {\n    key: \"getReportListByStudentID\",\n    value: function () {\n      var _getReportListByStudentID = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee109(str_StudentID) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee109$(_context109) {\n          while (1) {\n            switch (_context109.prev = _context109.next) {\n              case 0:\n                data = {\n                  studentID: str_StudentID\n                };\n                _context109.next = 3;\n                return this.callWebService(\"/controller/Report.asmx/getReportList\", data, \"POST\");\n\n              case 3:\n                return _context109.abrupt(\"return\", _context109.sent);\n\n              case 4:\n              case \"end\":\n                return _context109.stop();\n            }\n          }\n        }, _callee109, this);\n      }));\n\n      function getReportListByStudentID(_x237) {\n        return _getReportListByStudentID.apply(this, arguments);\n      }\n\n      return getReportListByStudentID;\n    }()\n  }, {\n    key: \"saveReport\",\n    value: function () {\n      var _saveReport = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee110(str_ReportDesc, str_StudentID, arrstr_PostID, ReportLinkReportID) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee110$(_context110) {\n          while (1) {\n            switch (_context110.prev = _context110.next) {\n              case 0:\n                data = {\n                  reportDesc: str_ReportDesc,\n                  studentID: str_StudentID,\n                  jsonStringPostID: arrstr_PostID,\n                  ReportLinkReportID: ReportLinkReportID\n                };\n                _context110.next = 3;\n                return this.callWebService(\"/controller/Report.asmx/saveReport\", data, \"POST\");\n\n              case 3:\n                return _context110.abrupt(\"return\", _context110.sent);\n\n              case 4:\n              case \"end\":\n                return _context110.stop();\n            }\n          }\n        }, _callee110, this);\n      }));\n\n      function saveReport(_x238, _x239, _x240, _x241) {\n        return _saveReport.apply(this, arguments);\n      }\n\n      return saveReport;\n    }()\n  }, {\n    key: \"getPostByReportID\",\n    value: function () {\n      var _getPostByReportID = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee111(str_ReportID) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee111$(_context111) {\n          while (1) {\n            switch (_context111.prev = _context111.next) {\n              case 0:\n                data = {\n                  reportID: str_ReportID\n                };\n                _context111.next = 3;\n                return this.callWebService(\"/controller/Report.asmx/getReport\", data, \"POST\");\n\n              case 3:\n                return _context111.abrupt(\"return\", _context111.sent);\n\n              case 4:\n              case \"end\":\n                return _context111.stop();\n            }\n          }\n        }, _callee111, this);\n      }));\n\n      function getPostByReportID(_x242) {\n        return _getPostByReportID.apply(this, arguments);\n      }\n\n      return getPostByReportID;\n    }()\n  }, {\n    key: \"softDeleteReport\",\n    value: function () {\n      var _softDeleteReport = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee112(arrstr_ReportID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee112$(_context112) {\n          while (1) {\n            switch (_context112.prev = _context112.next) {\n              case 0:\n                data = {\n                  jsonStringReportID: arrstr_ReportID,\n                  actionStatus: \"VOID\"\n                };\n                _context112.next = 3;\n                return this.callWebService(\"/controller/Report.asmx/updateReport\", data, \"POST\");\n\n              case 3:\n                response = _context112.sent;\n                return _context112.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context112.stop();\n            }\n          }\n        }, _callee112, this);\n      }));\n\n      function softDeleteReport(_x243) {\n        return _softDeleteReport.apply(this, arguments);\n      }\n\n      return softDeleteReport;\n    }()\n    /*#endregion*/\n\n    /*#region Reactions*/\n\n  }, {\n    key: \"getPostReaction\",\n    value: function () {\n      var _getPostReaction = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee113(relatedPostID) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee113$(_context113) {\n          while (1) {\n            switch (_context113.prev = _context113.next) {\n              case 0:\n                data = {\n                  relatedPostID: relatedPostID\n                };\n                _context113.next = 3;\n                return this.callWebService(\"/controller/Posting.asmx/getPostReaction\", data, \"POST\");\n\n              case 3:\n                return _context113.abrupt(\"return\", _context113.sent);\n\n              case 4:\n              case \"end\":\n                return _context113.stop();\n            }\n          }\n        }, _callee113, this);\n      }));\n\n      function getPostReaction(_x244) {\n        return _getPostReaction.apply(this, arguments);\n      }\n\n      return getPostReaction;\n    }()\n  }, {\n    key: \"savePostReaction\",\n    value: function () {\n      var _savePostReaction = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee114(relatedPostID, postReaction, postType) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee114$(_context114) {\n          while (1) {\n            switch (_context114.prev = _context114.next) {\n              case 0:\n                data = {\n                  relatedPostID: relatedPostID,\n                  postReaction: postReaction,\n                  postType: postType\n                };\n                _context114.next = 3;\n                return this.callWebService(\"/controller/Posting.asmx/savePostReaction\", data, \"POST\");\n\n              case 3:\n                return _context114.abrupt(\"return\", _context114.sent);\n\n              case 4:\n              case \"end\":\n                return _context114.stop();\n            }\n          }\n        }, _callee114, this);\n      }));\n\n      function savePostReaction(_x245, _x246, _x247) {\n        return _savePostReaction.apply(this, arguments);\n      }\n\n      return savePostReaction;\n    }()\n  }, {\n    key: \"updatePostReaction\",\n    value: function () {\n      var _updatePostReaction = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee115(relatedPostID, actionMode) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee115$(_context115) {\n          while (1) {\n            switch (_context115.prev = _context115.next) {\n              case 0:\n                data = {\n                  relatedPostID: relatedPostID,\n                  actionMode: actionMode\n                };\n                _context115.next = 3;\n                return this.callWebService(\"/controller/Posting.asmx/updatePostReaction\", data, \"POST\");\n\n              case 3:\n                return _context115.abrupt(\"return\", _context115.sent);\n\n              case 4:\n              case \"end\":\n                return _context115.stop();\n            }\n          }\n        }, _callee115, this);\n      }));\n\n      function updatePostReaction(_x248, _x249) {\n        return _updatePostReaction.apply(this, arguments);\n      }\n\n      return updatePostReaction;\n    }()\n  }, {\n    key: \"getPostByPostID\",\n    value: function () {\n      var _getPostByPostID = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee116(jsonStringPostID) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee116$(_context116) {\n          while (1) {\n            switch (_context116.prev = _context116.next) {\n              case 0:\n                data = {\n                  jsonStringPostID: jsonStringPostID\n                };\n                _context116.next = 3;\n                return this.callWebService(\"/controller/Posting.asmx/getPostByPostID\", data, \"POST\");\n\n              case 3:\n                return _context116.abrupt(\"return\", _context116.sent);\n\n              case 4:\n              case \"end\":\n                return _context116.stop();\n            }\n          }\n        }, _callee116, this);\n      }));\n\n      function getPostByPostID(_x250) {\n        return _getPostByPostID.apply(this, arguments);\n      }\n\n      return getPostByPostID;\n    }()\n  }, {\n    key: \"getPostByPostIDByStatus\",\n    value: function () {\n      var _getPostByPostIDByStatus = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee117(jsonStringPostID, postStatus) {\n        var data;\n        return regeneratorRuntime.wrap(function _callee117$(_context117) {\n          while (1) {\n            switch (_context117.prev = _context117.next) {\n              case 0:\n                data = {\n                  jsonStringPostID: jsonStringPostID,\n                  postStatus: postStatus\n                };\n                _context117.next = 3;\n                return this.callWebService(\"/controller/Posting.asmx/getPostByPostID\", data, \"POST\");\n\n              case 3:\n                return _context117.abrupt(\"return\", _context117.sent);\n\n              case 4:\n              case \"end\":\n                return _context117.stop();\n            }\n          }\n        }, _callee117, this);\n      }));\n\n      function getPostByPostIDByStatus(_x251, _x252) {\n        return _getPostByPostIDByStatus.apply(this, arguments);\n      }\n\n      return getPostByPostIDByStatus;\n    }()\n    /*#endregion*/\n\n  }, {\n    key: \"getAllActiveStudentsByClass\",\n    value: function () {\n      var _getAllActiveStudentsByClass = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee118(classID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee118$(_context118) {\n          while (1) {\n            switch (_context118.prev = _context118.next) {\n              case 0:\n                data = {\n                  classID: classID\n                };\n                _context118.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getAllActiveStudentsByClassSchool\", data, \"POST\");\n\n              case 3:\n                response = _context118.sent;\n                return _context118.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context118.stop();\n            }\n          }\n        }, _callee118, this);\n      }));\n\n      function getAllActiveStudentsByClass(_x253) {\n        return _getAllActiveStudentsByClass.apply(this, arguments);\n      }\n\n      return getAllActiveStudentsByClass;\n    }()\n  }, {\n    key: \"getDailyRoutineByStudentID\",\n    value: function () {\n      var _getDailyRoutineByStudentID = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee119(studentID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee119$(_context119) {\n          while (1) {\n            switch (_context119.prev = _context119.next) {\n              case 0:\n                data = {\n                  studentID: studentID\n                };\n                _context119.next = 3;\n                return this.callWebService(\"/controller/Daily_Routine.asmx/getKgm_DailyRoutine\", data, \"POST\");\n\n              case 3:\n                response = _context119.sent;\n                return _context119.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context119.stop();\n            }\n          }\n        }, _callee119, this);\n      }));\n\n      function getDailyRoutineByStudentID(_x254) {\n        return _getDailyRoutineByStudentID.apply(this, arguments);\n      }\n\n      return getDailyRoutineByStudentID;\n    }()\n  }, {\n    key: \"updateDailyRoutine\",\n    value: function () {\n      var _updateDailyRoutine = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee120(btnUpdateObject) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee120$(_context120) {\n          while (1) {\n            switch (_context120.prev = _context120.next) {\n              case 0:\n                data = {\n                  studentID: btnUpdateObject.studentID,\n                  DrID: btnUpdateObject.drID,\n                  drRemark: btnUpdateObject.drRemark\n                };\n                _context120.next = 3;\n                return this.callWebService(\"/controller/Daily_Routine.asmx/updateDailyRoutine\", data, \"POST\");\n\n              case 3:\n                response = _context120.sent;\n                return _context120.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context120.stop();\n            }\n          }\n        }, _callee120, this);\n      }));\n\n      function updateDailyRoutine(_x255) {\n        return _updateDailyRoutine.apply(this, arguments);\n      }\n\n      return updateDailyRoutine;\n    }()\n  }, {\n    key: \"addDailyRoutine\",\n    value: function () {\n      var _addDailyRoutine = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee121(btnAddObject) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee121$(_context121) {\n          while (1) {\n            switch (_context121.prev = _context121.next) {\n              case 0:\n                data = {\n                  studentID: btnAddObject.studentID,\n                  drRemark: btnAddObject.DrRemark,\n                  drStartTime: btnAddObject.DrStartTime,\n                  drEndTime: btnAddObject.DrEndTime,\n                  drReferenceType: btnAddObject.DrReferenceType\n                };\n                _context121.next = 3;\n                return this.callWebService(\"/controller/Daily_Routine.asmx/addDailyRoutine\", data, \"POST\");\n\n              case 3:\n                response = _context121.sent;\n                return _context121.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context121.stop();\n            }\n          }\n        }, _callee121, this);\n      }));\n\n      function addDailyRoutine(_x256) {\n        return _addDailyRoutine.apply(this, arguments);\n      }\n\n      return addDailyRoutine;\n    }()\n  }, {\n    key: \"deleteDailyRoutine\",\n    value: function () {\n      var _deleteDailyRoutine = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee122(btnDelObject) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee122$(_context122) {\n          while (1) {\n            switch (_context122.prev = _context122.next) {\n              case 0:\n                data = {\n                  studentID: btnDelObject.DrStudentID,\n                  DrID: btnDelObject.drID\n                };\n                _context122.next = 3;\n                return this.callWebService(\"/controller/Daily_Routine.asmx/deleteDailyRoutine\", data, \"POST\");\n\n              case 3:\n                response = _context122.sent;\n                return _context122.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context122.stop();\n            }\n          }\n        }, _callee122, this);\n      }));\n\n      function deleteDailyRoutine(_x257) {\n        return _deleteDailyRoutine.apply(this, arguments);\n      }\n\n      return deleteDailyRoutine;\n    }()\n  }, {\n    key: \"deString\",\n    value: function () {\n      var _deString = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee123(inputString) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee123$(_context123) {\n          while (1) {\n            switch (_context123.prev = _context123.next) {\n              case 0:\n                data = {\n                  inputString: inputString\n                };\n                _context123.next = 3;\n                return this.callWebService(\"/controller/Login.asmx/deString\", data, \"POST\");\n\n              case 3:\n                response = _context123.sent;\n                return _context123.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context123.stop();\n            }\n          }\n        }, _callee123, this);\n      }));\n\n      function deString(_x258) {\n        return _deString.apply(this, arguments);\n      }\n\n      return deString;\n    }()\n  }, {\n    key: \"getStaffProfileImage\",\n    value: function () {\n      var _getStaffProfileImage = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee124() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee124$(_context124) {\n          while (1) {\n            switch (_context124.prev = _context124.next) {\n              case 0:\n                data = {};\n                _context124.next = 3;\n                return this.callWebService(\"/controller/User.asmx/getStaffProfileImage\", data, \"POST\");\n\n              case 3:\n                response = _context124.sent;\n                return _context124.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context124.stop();\n            }\n          }\n        }, _callee124, this);\n      }));\n\n      function getStaffProfileImage() {\n        return _getStaffProfileImage.apply(this, arguments);\n      }\n\n      return getStaffProfileImage;\n    }()\n  }, {\n    key: \"saveStaffProfileImage\",\n    value: function () {\n      var _saveStaffProfileImage = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee125(files) {\n        var data, key, request, response;\n        return regeneratorRuntime.wrap(function _callee125$(_context125) {\n          while (1) {\n            switch (_context125.prev = _context125.next) {\n              case 0:\n                data = new FormData();\n                data.append('token', Cookies.get('authToken'));\n                data.append('UserSchool_Session', Cookies.get('schoolSession'));\n                data.append('UserID_Session', Cookies.get('userIDSession'));\n                data.append('UserUniversity_Session', Cookies.get('userUniversitySession'));\n\n                if (files && files.length > 1) {\n                  for (key in files) {\n                    //console.log(key);\n                    if (files.hasOwnProperty(key)) {\n                      // console.log(files[key]);\n                      if (key > 0) {\n                        data.append(\"upload_\".concat(key), files[key]);\n                      } else {\n                        data.append(\"upload\", files[key]);\n                      }\n                    }\n                  }\n                } else if (files) {\n                  data.append(\"upload\", files[0]);\n                }\n\n                request = {\n                  url: \"\".concat(API_HOST, \"/controller/User.asmx/saveStaffProfileImage\"),\n                  cache: false,\n                  type: 'POST',\n                  data: data,\n                  enctype: 'multipart/form-data',\n                  processData: false,\n                  contentType: false,\n                  async: false,\n                  json: false,\n                  success: function success(response) {\n                    return response;\n                  }\n                };\n                _context125.next = 9;\n                return jQuery.ajax(request);\n\n              case 9:\n                response = _context125.sent;\n\n                if (typeof response === \"string\") {\n                  response = JSON.parse(response);\n                }\n\n                return _context125.abrupt(\"return\", response);\n\n              case 12:\n              case \"end\":\n                return _context125.stop();\n            }\n          }\n        }, _callee125);\n      }));\n\n      function saveStaffProfileImage(_x259) {\n        return _saveStaffProfileImage.apply(this, arguments);\n      }\n\n      return saveStaffProfileImage;\n    }()\n  }, {\n    key: \"resetPasswordByPassword\",\n    value: function () {\n      var _resetPasswordByPassword = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee126(userCurrentPassword, userNewPassword) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee126$(_context126) {\n          while (1) {\n            switch (_context126.prev = _context126.next) {\n              case 0:\n                data = {\n                  userCurrentPassword: userCurrentPassword,\n                  userNewPassword: userNewPassword\n                };\n                _context126.next = 3;\n                return this.callWebService(\"/controller/Login.asmx/resetPasswordByPassword\", data, \"POST\");\n\n              case 3:\n                response = _context126.sent;\n                return _context126.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context126.stop();\n            }\n          }\n        }, _callee126, this);\n      }));\n\n      function resetPasswordByPassword(_x260, _x261) {\n        return _resetPasswordByPassword.apply(this, arguments);\n      }\n\n      return resetPasswordByPassword;\n    }()\n  }, {\n    key: \"getAllActiveSchool\",\n    value: function () {\n      var _getAllActiveSchool = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee127(schoolCountry, universityCode) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee127$(_context127) {\n          while (1) {\n            switch (_context127.prev = _context127.next) {\n              case 0:\n                data = {\n                  schoolCountry: schoolCountry,\n                  universityCode: universityCode\n                };\n                _context127.next = 3;\n                return this.callWebService(\"/controller/Operations.asmx/getAllActiveSchool\", data, \"POST\");\n\n              case 3:\n                response = _context127.sent;\n                return _context127.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context127.stop();\n            }\n          }\n        }, _callee127, this);\n      }));\n\n      function getAllActiveSchool(_x262, _x263) {\n        return _getAllActiveSchool.apply(this, arguments);\n      }\n\n      return getAllActiveSchool;\n    }()\n  }, {\n    key: \"saveTransferSchool\",\n    value: function () {\n      var _saveTransferSchool = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee128(studentID, toTransferSchoolID, remark, effectiveDate) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee128$(_context128) {\n          while (1) {\n            switch (_context128.prev = _context128.next) {\n              case 0:\n                data = {\n                  studentID: studentID,\n                  toTransferSchoolID: toTransferSchoolID,\n                  remark: remark,\n                  effectiveDate: effectiveDate\n                };\n                _context128.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/saveTransferSchool\", data, \"POST\");\n\n              case 3:\n                response = _context128.sent;\n                return _context128.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context128.stop();\n            }\n          }\n        }, _callee128, this);\n      }));\n\n      function saveTransferSchool(_x264, _x265, _x266, _x267) {\n        return _saveTransferSchool.apply(this, arguments);\n      }\n\n      return saveTransferSchool;\n    }()\n  }, {\n    key: \"getPendingAcceptTransferSchoolBySchool\",\n    value: function () {\n      var _getPendingAcceptTransferSchoolBySchool = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee129() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee129$(_context129) {\n          while (1) {\n            switch (_context129.prev = _context129.next) {\n              case 0:\n                data = {};\n                _context129.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getPendingAcceptTransferSchoolBySchool\", data, \"POST\");\n\n              case 3:\n                response = _context129.sent;\n                return _context129.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context129.stop();\n            }\n          }\n        }, _callee129, this);\n      }));\n\n      function getPendingAcceptTransferSchoolBySchool() {\n        return _getPendingAcceptTransferSchoolBySchool.apply(this, arguments);\n      }\n\n      return getPendingAcceptTransferSchoolBySchool;\n    }()\n  }, {\n    key: \"saveStudentWithdraw\",\n    value: function () {\n      var _saveStudentWithdraw = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee130(obj) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee130$(_context130) {\n          while (1) {\n            switch (_context130.prev = _context130.next) {\n              case 0:\n                data = {\n                  obj: obj\n                };\n                _context130.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/saveStudentWithdraw\", data, \"POST\");\n\n              case 3:\n                response = _context130.sent;\n                return _context130.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context130.stop();\n            }\n          }\n        }, _callee130, this);\n      }));\n\n      function saveStudentWithdraw(_x268) {\n        return _saveStudentWithdraw.apply(this, arguments);\n      }\n\n      return saveStudentWithdraw;\n    }()\n  }, {\n    key: \"getClassType\",\n    value: function () {\n      var _getClassType = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee131() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee131$(_context131) {\n          while (1) {\n            switch (_context131.prev = _context131.next) {\n              case 0:\n                data = {};\n                _context131.next = 3;\n                return this.callWebService(\"/controller/Class.asmx/getClassType\", data, \"POST\");\n\n              case 3:\n                response = _context131.sent;\n                return _context131.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context131.stop();\n            }\n          }\n        }, _callee131, this);\n      }));\n\n      function getClassType() {\n        return _getClassType.apply(this, arguments);\n      }\n\n      return getClassType;\n    }()\n  }, {\n    key: \"getTeacherListBySchool\",\n    value: function () {\n      var _getTeacherListBySchool = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee132() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee132$(_context132) {\n          while (1) {\n            switch (_context132.prev = _context132.next) {\n              case 0:\n                data = {};\n                _context132.next = 3;\n                return this.callWebService(\"/controller/User.asmx/getTeacherListBySchool\", data, \"POST\");\n\n              case 3:\n                response = _context132.sent;\n                return _context132.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context132.stop();\n            }\n          }\n        }, _callee132, this);\n      }));\n\n      function getTeacherListBySchool() {\n        return _getTeacherListBySchool.apply(this, arguments);\n      }\n\n      return getTeacherListBySchool;\n    }()\n  }, {\n    key: \"saveClass\",\n    value: function () {\n      var _saveClass = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee133(levelID, semesterID, batch, className, maxStudents, classTeacher, saveType) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee133$(_context133) {\n          while (1) {\n            switch (_context133.prev = _context133.next) {\n              case 0:\n                data = {\n                  levelID: levelID,\n                  semesterID: semesterID,\n                  batch: batch,\n                  className: className,\n                  maxStudents: maxStudents,\n                  classTeacher: classTeacher,\n                  saveType: saveType\n                };\n                _context133.next = 3;\n                return this.callWebService(\"/controller/Class.asmx/saveClass\", data, \"POST\");\n\n              case 3:\n                response = _context133.sent;\n                return _context133.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context133.stop();\n            }\n          }\n        }, _callee133, this);\n      }));\n\n      function saveClass(_x269, _x270, _x271, _x272, _x273, _x274, _x275) {\n        return _saveClass.apply(this, arguments);\n      }\n\n      return saveClass;\n    }()\n  }, {\n    key: \"getClass\",\n    value: function () {\n      var _getClass = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee134(academicYear) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee134$(_context134) {\n          while (1) {\n            switch (_context134.prev = _context134.next) {\n              case 0:\n                data = {\n                  academicYear: academicYear\n                };\n                _context134.next = 3;\n                return this.callWebService(\"/controller/Course.asmx/getClass\", data, \"POST\");\n\n              case 3:\n                response = _context134.sent;\n                return _context134.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context134.stop();\n            }\n          }\n        }, _callee134, this);\n      }));\n\n      function getClass(_x276) {\n        return _getClass.apply(this, arguments);\n      }\n\n      return getClass;\n    }()\n  }, {\n    key: \"getParentClassList\",\n    value: function () {\n      var _getParentClassList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee135(academicYear, modeType) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee135$(_context135) {\n          while (1) {\n            switch (_context135.prev = _context135.next) {\n              case 0:\n                data = {\n                  academicYear: academicYear,\n                  modeType: modeType\n                };\n                _context135.next = 3;\n                return this.callWebService(\"/controller/Course.asmx/getClass\", data, \"POST\");\n\n              case 3:\n                response = _context135.sent;\n                return _context135.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context135.stop();\n            }\n          }\n        }, _callee135, this);\n      }));\n\n      function getParentClassList(_x277, _x278) {\n        return _getParentClassList.apply(this, arguments);\n      }\n\n      return getParentClassList;\n    }()\n  }, {\n    key: \"updateClass\",\n    value: function () {\n      var _updateClass = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee136(classStatus, newClassName, maxStudents, currentClassName, levelID, semesterID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee136$(_context136) {\n          while (1) {\n            switch (_context136.prev = _context136.next) {\n              case 0:\n                data = {\n                  classStatus: classStatus,\n                  newClassName: newClassName,\n                  maxStudents: maxStudents,\n                  currentClassName: currentClassName,\n                  levelID: levelID,\n                  semesterID: semesterID\n                };\n                _context136.next = 3;\n                return this.callWebService(\"/controller/Class.asmx/updateClass\", data, \"POST\");\n\n              case 3:\n                response = _context136.sent;\n                return _context136.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context136.stop();\n            }\n          }\n        }, _callee136, this);\n      }));\n\n      function updateClass(_x279, _x280, _x281, _x282, _x283, _x284) {\n        return _updateClass.apply(this, arguments);\n      }\n\n      return updateClass;\n    }()\n  }, {\n    key: \"updateClassProgramme\",\n    value: function () {\n      var _updateClassProgramme = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee137(classID, classStatus) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee137$(_context137) {\n          while (1) {\n            switch (_context137.prev = _context137.next) {\n              case 0:\n                data = {\n                  classID: classID,\n                  classStatus: classStatus\n                };\n                _context137.next = 3;\n                return this.callWebService(\"/controller/Class.asmx/updateClassProgramme\", data, \"POST\");\n\n              case 3:\n                response = _context137.sent;\n                return _context137.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context137.stop();\n            }\n          }\n        }, _callee137, this);\n      }));\n\n      function updateClassProgramme(_x285, _x286) {\n        return _updateClassProgramme.apply(this, arguments);\n      }\n\n      return updateClassProgramme;\n    }()\n  }, {\n    key: \"getActiveStudentsByLevelSchool\",\n    value: function () {\n      var _getActiveStudentsByLevelSchool = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee138(levelID, classID, semID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee138$(_context138) {\n          while (1) {\n            switch (_context138.prev = _context138.next) {\n              case 0:\n                data = {\n                  levelID: levelID,\n                  classID: classID,\n                  semID: semID\n                };\n                _context138.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getActiveStudentsByLevelSchool\", data, \"POST\");\n\n              case 3:\n                response = _context138.sent;\n                return _context138.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context138.stop();\n            }\n          }\n        }, _callee138, this);\n      }));\n\n      function getActiveStudentsByLevelSchool(_x287, _x288, _x289) {\n        return _getActiveStudentsByLevelSchool.apply(this, arguments);\n      }\n\n      return getActiveStudentsByLevelSchool;\n    }()\n  }, {\n    key: \"saveStudentGraduation\",\n    value: function () {\n      var _saveStudentGraduation = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee139(obj) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee139$(_context139) {\n          while (1) {\n            switch (_context139.prev = _context139.next) {\n              case 0:\n                data = {\n                  obj: obj\n                };\n                _context139.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/saveStudentGraduation\", data, \"POST\");\n\n              case 3:\n                response = _context139.sent;\n                return _context139.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context139.stop();\n            }\n          }\n        }, _callee139, this);\n      }));\n\n      function saveStudentGraduation(_x290) {\n        return _saveStudentGraduation.apply(this, arguments);\n      }\n\n      return saveStudentGraduation;\n    }()\n  }, {\n    key: \"saveStudentDocument\",\n    value: function () {\n      var _saveStudentDocument = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee140(files, studentID, fileDescription, uploadMode) {\n        var data, key, request, response;\n        return regeneratorRuntime.wrap(function _callee140$(_context140) {\n          while (1) {\n            switch (_context140.prev = _context140.next) {\n              case 0:\n                data = new FormData();\n                data.append('token', Cookies.get('authToken'));\n                data.append('UserSchool_Session', Cookies.get('schoolSession'));\n                data.append('UserID_Session', Cookies.get('userIDSession'));\n                data.append('UserUniversity_Session', Cookies.get('userUniversitySession'));\n\n                if (files && files.length > 1) {\n                  for (key in files) {\n                    //console.log(key);\n                    if (files.hasOwnProperty(key)) {\n                      // console.log(files[key]);\n                      if (key > 0) {\n                        data.append(\"upload_\".concat(key), files[key]);\n                      } else {\n                        data.append(\"upload\", files[key]);\n                      }\n                    }\n                  }\n                } else if (files) {\n                  data.append(\"upload\", files[0]);\n                }\n\n                data.append('studentID', studentID);\n                data.append('fileDescription', fileDescription);\n                data.append('uploadMode', uploadMode);\n                request = {\n                  url: \"\".concat(API_HOST, \"/controller/Students.asmx/saveStudentDocument\"),\n                  cache: false,\n                  type: 'POST',\n                  data: data,\n                  enctype: 'multipart/form-data',\n                  processData: false,\n                  contentType: false,\n                  async: false,\n                  json: false,\n                  success: function success(response) {\n                    return response;\n                  }\n                };\n                _context140.next = 12;\n                return jQuery.ajax(request);\n\n              case 12:\n                response = _context140.sent;\n\n                if (typeof response === \"string\") {\n                  response = JSON.parse(response);\n                }\n\n                return _context140.abrupt(\"return\", response);\n\n              case 15:\n              case \"end\":\n                return _context140.stop();\n            }\n          }\n        }, _callee140);\n      }));\n\n      function saveStudentDocument(_x291, _x292, _x293, _x294) {\n        return _saveStudentDocument.apply(this, arguments);\n      }\n\n      return saveStudentDocument;\n    }()\n  }, {\n    key: \"getStudentDocument\",\n    value: function () {\n      var _getStudentDocument = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee141(studentID, docuType) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee141$(_context141) {\n          while (1) {\n            switch (_context141.prev = _context141.next) {\n              case 0:\n                data = {\n                  studentID: studentID,\n                  docuType: docuType\n                };\n                _context141.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getStudentDocument\", data, \"POST\");\n\n              case 3:\n                response = _context141.sent;\n                return _context141.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context141.stop();\n            }\n          }\n        }, _callee141, this);\n      }));\n\n      function getStudentDocument(_x295, _x296) {\n        return _getStudentDocument.apply(this, arguments);\n      }\n\n      return getStudentDocument;\n    }()\n  }, {\n    key: \"updateStudentDocument\",\n    value: function () {\n      var _updateStudentDocument = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee142(studentFilesID, actionStatus) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee142$(_context142) {\n          while (1) {\n            switch (_context142.prev = _context142.next) {\n              case 0:\n                data = {\n                  studentFilesID: studentFilesID,\n                  actionStatus: actionStatus\n                };\n                _context142.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/updateStudentDocument\", data, \"POST\");\n\n              case 3:\n                response = _context142.sent;\n                return _context142.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context142.stop();\n            }\n          }\n        }, _callee142, this);\n      }));\n\n      function updateStudentDocument(_x297, _x298) {\n        return _updateStudentDocument.apply(this, arguments);\n      }\n\n      return updateStudentDocument;\n    }()\n  }, {\n    key: \"getSchoolInfoBySchoolID\",\n    value: function () {\n      var _getSchoolInfoBySchoolID = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee143(schoolID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee143$(_context143) {\n          while (1) {\n            switch (_context143.prev = _context143.next) {\n              case 0:\n                data = {\n                  schoolID: schoolID\n                };\n                _context143.next = 3;\n                return this.callWebService(\"/controller/User.asmx/getSchoolInfoBySchoolID\", data, \"POST\");\n\n              case 3:\n                response = _context143.sent;\n                return _context143.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context143.stop();\n            }\n          }\n        }, _callee143, this);\n      }));\n\n      function getSchoolInfoBySchoolID(_x299) {\n        return _getSchoolInfoBySchoolID.apply(this, arguments);\n      }\n\n      return getSchoolInfoBySchoolID;\n    }()\n  }, {\n    key: \"getStudentAllergies\",\n    value: function () {\n      var _getStudentAllergies = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee144(studentID, allergiesType) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee144$(_context144) {\n          while (1) {\n            switch (_context144.prev = _context144.next) {\n              case 0:\n                data = {\n                  studentID: studentID,\n                  allergiesType: allergiesType\n                };\n                _context144.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getStudentAllergies\", data, \"POST\");\n\n              case 3:\n                response = _context144.sent;\n                return _context144.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context144.stop();\n            }\n          }\n        }, _callee144, this);\n      }));\n\n      function getStudentAllergies(_x300, _x301) {\n        return _getStudentAllergies.apply(this, arguments);\n      }\n\n      return getStudentAllergies;\n    }()\n  }, {\n    key: \"getStudentPaymentList\",\n    value: function () {\n      var _getStudentPaymentList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee145(studentCourseID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee145$(_context145) {\n          while (1) {\n            switch (_context145.prev = _context145.next) {\n              case 0:\n                data = {\n                  studentCourseID: studentCourseID\n                };\n                _context145.next = 3;\n                return this.callWebService(\"/controller/Billing.asmx/getStudentPaymentList\", data, \"POST\");\n\n              case 3:\n                response = _context145.sent;\n                return _context145.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context145.stop();\n            }\n          }\n        }, _callee145, this);\n      }));\n\n      function getStudentPaymentList(_x302) {\n        return _getStudentPaymentList.apply(this, arguments);\n      }\n\n      return getStudentPaymentList;\n    }()\n  }, {\n    key: \"getItemTransDetailsList\",\n    value: function () {\n      var _getItemTransDetailsList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee146(SPDID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee146$(_context146) {\n          while (1) {\n            switch (_context146.prev = _context146.next) {\n              case 0:\n                data = {\n                  SPDID: SPDID\n                };\n                _context146.next = 3;\n                return this.callWebService(\"/controller/Billing.asmx/getItemTransDetailsList\", data, \"POST\");\n\n              case 3:\n                response = _context146.sent;\n                return _context146.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context146.stop();\n            }\n          }\n        }, _callee146, this);\n      }));\n\n      function getItemTransDetailsList(_x303) {\n        return _getItemTransDetailsList.apply(this, arguments);\n      }\n\n      return getItemTransDetailsList;\n    }()\n  }, {\n    key: \"saveEvent\",\n    value: function () {\n      var _saveEvent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee147(obj, participantObj) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee147$(_context147) {\n          while (1) {\n            switch (_context147.prev = _context147.next) {\n              case 0:\n                data = {\n                  obj: obj,\n                  participantObj: participantObj\n                };\n                _context147.next = 3;\n                return this.callWebService(\"/controller/Event.asmx/saveEvent\", data, \"POST\");\n\n              case 3:\n                response = _context147.sent;\n                return _context147.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context147.stop();\n            }\n          }\n        }, _callee147, this);\n      }));\n\n      function saveEvent(_x304, _x305) {\n        return _saveEvent.apply(this, arguments);\n      }\n\n      return saveEvent;\n    }()\n  }, {\n    key: \"getEvent\",\n    value: function () {\n      var _getEvent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee148(eventID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee148$(_context148) {\n          while (1) {\n            switch (_context148.prev = _context148.next) {\n              case 0:\n                data = {\n                  eventID: eventID\n                };\n                _context148.next = 3;\n                return this.callWebService(\"/controller/Event.asmx/getEvent\", data, \"POST\");\n\n              case 3:\n                response = _context148.sent;\n                return _context148.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context148.stop();\n            }\n          }\n        }, _callee148, this);\n      }));\n\n      function getEvent(_x306) {\n        return _getEvent.apply(this, arguments);\n      }\n\n      return getEvent;\n    }()\n  }, {\n    key: \"getEventParticipant\",\n    value: function () {\n      var _getEventParticipant = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee149(eventParticipantID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee149$(_context149) {\n          while (1) {\n            switch (_context149.prev = _context149.next) {\n              case 0:\n                data = {\n                  eventParticipantID: eventParticipantID\n                };\n                _context149.next = 3;\n                return this.callWebService(\"/controller/Event.asmx/getEventParticipant\", data, \"POST\");\n\n              case 3:\n                response = _context149.sent;\n                return _context149.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context149.stop();\n            }\n          }\n        }, _callee149, this);\n      }));\n\n      function getEventParticipant(_x307) {\n        return _getEventParticipant.apply(this, arguments);\n      }\n\n      return getEventParticipant;\n    }()\n  }, {\n    key: \"getEventParticipantByEventID\",\n    value: function () {\n      var _getEventParticipantByEventID = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee150(eventID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee150$(_context150) {\n          while (1) {\n            switch (_context150.prev = _context150.next) {\n              case 0:\n                data = {\n                  eventID: eventID\n                };\n                _context150.next = 3;\n                return this.callWebService(\"/controller/Event.asmx/getEventParticipant\", data, \"POST\");\n\n              case 3:\n                response = _context150.sent;\n                return _context150.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context150.stop();\n            }\n          }\n        }, _callee150, this);\n      }));\n\n      function getEventParticipantByEventID(_x308) {\n        return _getEventParticipantByEventID.apply(this, arguments);\n      }\n\n      return getEventParticipantByEventID;\n    }()\n  }, {\n    key: \"updateEvent\",\n    value: function () {\n      var _updateEvent = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee151(obj, participantObj) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee151$(_context151) {\n          while (1) {\n            switch (_context151.prev = _context151.next) {\n              case 0:\n                data = {\n                  obj: obj,\n                  participantObj: participantObj\n                };\n                _context151.next = 3;\n                return this.callWebService(\"/controller/Event.asmx/updateEvent\", data, \"POST\");\n\n              case 3:\n                response = _context151.sent;\n                return _context151.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context151.stop();\n            }\n          }\n        }, _callee151, this);\n      }));\n\n      function updateEvent(_x309, _x310) {\n        return _updateEvent.apply(this, arguments);\n      }\n\n      return updateEvent;\n    }()\n  }, {\n    key: \"getStudentGraduationListByClassLevel\",\n    value: function () {\n      var _getStudentGraduationListByClassLevel = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee152(str_LevelID, str_ClassID) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee152$(_context152) {\n          while (1) {\n            switch (_context152.prev = _context152.next) {\n              case 0:\n                data = {\n                  levelID: str_LevelID,\n                  classID: str_ClassID\n                };\n                _context152.next = 3;\n                return this.callWebService(\"/controller/Students.asmx/getStudentGraduationListByClassLevel\", data, \"POST\");\n\n              case 3:\n                response = _context152.sent;\n                return _context152.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context152.stop();\n            }\n          }\n        }, _callee152, this);\n      }));\n\n      function getStudentGraduationListByClassLevel(_x311, _x312) {\n        return _getStudentGraduationListByClassLevel.apply(this, arguments);\n      }\n\n      return getStudentGraduationListByClassLevel;\n    }()\n  }, {\n    key: \"getClassStudentList\",\n    value: function () {\n      var _getClassStudentList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee153(academicYearID, levelID, className) {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee153$(_context153) {\n          while (1) {\n            switch (_context153.prev = _context153.next) {\n              case 0:\n                data = {\n                  academicYearID: academicYearID,\n                  levelID: levelID,\n                  className: className\n                };\n                _context153.next = 3;\n                return this.callWebService(\"/controller/Course.asmx/getClassStudentList\", data, \"POST\");\n\n              case 3:\n                response = _context153.sent;\n                return _context153.abrupt(\"return\", response);\n\n              case 5:\n              case \"end\":\n                return _context153.stop();\n            }\n          }\n        }, _callee153, this);\n      }));\n\n      function getClassStudentList(_x313, _x314, _x315) {\n        return _getClassStudentList.apply(this, arguments);\n      }\n\n      return getClassStudentList;\n    }()\n  }, {\n    key: \"getStudentForecastByBranchMonthly\",\n    value: function () {\n      var _getStudentForecastByBranchMonthly = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee154() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee154$(_context154) {\n          while (1) {\n            switch (_context154.prev = _context154.next) {\n              case 0:\n                _context154.prev = 0;\n                data = {};\n                _context154.next = 4;\n                return this.callWebService(\"/controller/Students.asmx/getStudentForecastByBranch_Monthly\", data, \"POST\");\n\n              case 4:\n                response = _context154.sent;\n                return _context154.abrupt(\"return\", response);\n\n              case 8:\n                _context154.prev = 8;\n                _context154.t0 = _context154[\"catch\"](0);\n                console.log(_context154.t0);\n\n              case 11:\n              case \"end\":\n                return _context154.stop();\n            }\n          }\n        }, _callee154, this, [[0, 8]]);\n      }));\n\n      function getStudentForecastByBranchMonthly() {\n        return _getStudentForecastByBranchMonthly.apply(this, arguments);\n      }\n\n      return getStudentForecastByBranchMonthly;\n    }()\n  }, {\n    key: \"getStudentMovementDetailNewEnroll\",\n    value: function () {\n      var _getStudentMovementDetailNewEnroll = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee155() {\n        var data, response;\n        return regeneratorRuntime.wrap(function _callee155$(_context155) {\n          while (1) {\n            switch (_context155.prev = _context155.next) {\n              case 0:\n                _context155.prev = 0;\n                data = {};\n                _context155.next = 4;\n                return this.callWebService(\"/controller/Students.asmx/getStudentMovementDetail_NewEnroll\", data, \"POST\");\n\n              case 4:\n                response = _context155.sent;\n                return _context155.abrupt(\"return\", response);\n\n              case 8:\n                _context155.prev = 8;\n                _context155.t0 = _context155[\"catch\"](0);\n                console.log(_context155.t0);\n\n              case 11:\n              case \"end\":\n                return _context155.stop();\n            }\n          }\n        }, _callee155, this, [[0, 8]]);\n      }));\n\n      function getStudentMovementDetailNewEnroll() {\n        return _getStudentMovementDetailNewEnroll.apply(this, arguments);\n      }\n\n      return getStudentMovementDetailNewEnroll;\n    }()\n  }]);\n\n  return DataSource;\n}();\n\nexport { DataSource as default };",{"version":3,"sources":["C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\data\\datasource.js"],"names":["URLForEndpoint","NewRequest","parseResponseAndHandleErrors","parseObject","ERROR_SERVER_UNREACHABLE","axios","jQuery","moment","Cookies","API_HOST","process","env","VUE_APP_ROOT_API","GoogleGeocodeAPIKey","getMs","d","Date","getTime","setToHappen","fn","t","setTimeout","alertExpire","alert","DataSource","instance","undefined","loggedIn","isExpireAlerted","endPoint","method","queryObject","requestBody","hasContentType","url","request","headers","body","fetch","response","data","withToken","withFormData","dataType","cache","success","token","get","UserSchool_Session","UserID_Session","UserType_Session","UserUniversity_Session","UserEmail_Session","USRid_Session","UserName_Session","extendTime","expireTime","nowMs","newExtendDate","Number","console","log","newExpireDate","extendCookies","processData","contentType","ajax","files","postID","formData","FormData","append","type","enctype","async","json","userId","password","userID","userPassword","extendDate","expireDate","extendMs","expiredMs","callWebService","set","expires","e","tokenId","externalLoginToken","$","require","internalSession","resolve","reject","then","result","sessionSignout","remove","googleSignout","getScript","gapi","load","auth2","init","client_id","signOut","fbSignout","FB","appId","version","getLoginStatus","logout","all","window","location","replace","userEmail","otp","studentIDNo","studentID_Index","studentDOB","studentIDType","externalLoginType","date","format","JSON","parse","studentID","studentFirstName","studentLastName","parentName","parentView","finExpire","fin","birthCert","ic","passport","passportExpire","postcode","country","substring","toUpperCase","length","lat","lng","resultResponse","results","forEach","m","geometry","status","request2","response2","formatted_address","jsonString","jsonString2","familyID","parentID","allergiesList","key","hasOwnProperty","currentStatus","newStatus","familyId","parentLastName","parentFirstName","studentName","onlyActive","semID","subjectcourseID","customClassNotEqual","courseID","classID","studentCourseID","actionMode","academicYearID","levelID","fromDate","toDate","intakeYear","acceptTransferStudent","studentSchoolID","effectiveDate","firstName","lastName","checkMode","userType","int_NumberOfPost","str_LastPostID","postType","numberOfPost","lastPostID","postContent","tagUserID","tagClassID","tagLevelID","postLinkID","porTitle","porObservation","porAnalysisReflection","porDevelopmentGoals","repTitle","repObservation","docContent","broadContent","PostID","postId","commentPostID","fileType","galFolderID","folderName","ID","PostContent","PostStatus","PostCreatedDate","PostApproverID","actionStatus","postComment","currentFiles","UpdateContent","profolio","approverLevel","approverUserID","approverType","approverMasterID","approverMasterSpecificID","neededApproveSpecificUserID","itemID","mode","username","callAPI","customLevelNotEqual","speificSchoolID","passHowManyDaysStudentCreated","passHowManyDaysStudentTransffered","options","countryID","post","Headers","rquestBody","getApproverMaster","classValue","startRowNo","endRowNo","fileRetrieveMode","galID","i","updateFileMode","folderRename","portfolioID","jsonStringPortfolioID","str_StudentID","str_PortfolioID","str_PostType","str_PortfolioDesc","PortfolioLinkPortfolioID","portfolioTitle","portfolioEnduringThemes","portfolioResearchQuestion","jsonStringPostDetails","portfolioDesc","portfolioEnduringThemesComment","portfolioResearchQuestionComment","jsonStringCommentValue","str_LevelID","str_ClassID","str_AcademicYearID","arrstr_StudentID","studentIDArray","str_ReportDesc","arrstr_PostID","ReportLinkReportID","reportDesc","jsonStringPostID","str_ReportID","reportID","arrstr_ReportID","jsonStringReportID","relatedPostID","postReaction","postStatus","btnUpdateObject","DrID","drID","drRemark","btnAddObject","DrRemark","drStartTime","DrStartTime","drEndTime","DrEndTime","drReferenceType","DrReferenceType","btnDelObject","DrStudentID","inputString","userCurrentPassword","userNewPassword","schoolCountry","universityCode","toTransferSchoolID","remark","obj","semesterID","batch","className","maxStudents","classTeacher","saveType","academicYear","modeType","classStatus","newClassName","currentClassName","fileDescription","uploadMode","docuType","studentFilesID","schoolID","allergiesType","SPDID","participantObj","eventID","eventParticipantID"],"mappings":"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","sourcesContent":["import {URLForEndpoint, NewRequest, parseResponseAndHandleErrors, parseObject} from \"../data/requests\";\r\nimport {ERROR_SERVER_UNREACHABLE} from \"../data/datasourceConst\";\r\nimport axios from \"axios\";\r\nimport jQuery from 'jquery';\r\nimport moment from \"moment\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst API_HOST = process.env.VUE_APP_ROOT_API || \"http://local.emsv2\";\r\nlet GoogleGeocodeAPIKey = 'AIzaSyBSjzdBEO1Akg0aZfKpglWYBtdqLMHJLzM';\r\n\r\nfunction getMs() {\r\n    const d = new Date();\r\n    return d.getTime();\r\n}\r\n\r\n\r\n// let alertExpireDate = new Date(new Date().getTime() + 1 * 60 * 1000);\r\nfunction setToHappen(fn, d) {\r\n    const t = d.getTime() - (new Date()).getTime();\r\n    return setTimeout(fn, t);\r\n}\r\n\r\nfunction alertExpire() {\r\n    alert(\"almost expire\");\r\n}\r\n\r\n\r\nexport default class DataSource {\r\n    static get shared() {\r\n        if (DataSource.instance == null || DataSource.instance === undefined) {\r\n            DataSource.instance = new DataSource();\r\n        }\r\n        return DataSource.instance;\r\n    }\r\n\r\n    constructor() {\r\n        this.loggedIn = false;\r\n        this.isExpireAlerted = false;\r\n    }\r\n\r\n    async callAPI(endPoint, method = \"GET\", queryObject, requestBody, hasContentType = true) {\r\n        const url = URLForEndpoint(endPoint, queryObject);\r\n        const request = NewRequest(method, hasContentType);\r\n\r\n        if (!hasContentType) {\r\n            delete request.headers[\"Content-Type\"];\r\n            request.body = requestBody;\r\n        } else if (method !== \"GET\" && requestBody) {\r\n            request.body = JSON.stringify(requestBody);\r\n        }\r\n        let response;\r\n        try {\r\n            response = await fetch(url, request);\r\n        } catch (err) {\r\n            throw ERROR_SERVER_UNREACHABLE;\r\n        }\r\n        return await parseResponseAndHandleErrors(response);\r\n    }\r\n\r\n    // by default, withToken set to true\r\n    callWebService(endPoint, data, method, withToken = true, withFormData = false) {\r\n        const request = {\r\n            dataType: \"json\",\r\n            url: `${API_HOST}${endPoint}`,\r\n            cache: false,\r\n            success: function (response) {\r\n                return response;\r\n            }\r\n        };\r\n        if (method) {\r\n            request.method = method;\r\n        }\r\n\r\n        if (data) {\r\n            request.data = data;\r\n        }\r\n\r\n        if (withToken) {\r\n            data.token = Cookies.get('authToken');\r\n            data.UserSchool_Session = Cookies.get('schoolSession');\r\n            data.UserID_Session = Cookies.get('userIDSession');\r\n            data.UserType_Session = Cookies.get('userTypeSession');\r\n            data.UserUniversity_Session = Cookies.get('userUniversitySession');\r\n            data.UserEmail_Session = Cookies.get('userEmailSession');\r\n            data.USRid_Session = Cookies.get('usRidSession');\r\n            data.UserName_Session = Cookies.get('userNameSession');\r\n            const extendTime = Cookies.get('extendTime');\r\n            const expireTime = Cookies.get('expireTime');\r\n            const nowMs = getMs();\r\n            // const expireAlert = Cookies.get('alert');\r\n            // if (expireAlert) {\r\n            //     const date = Date.parse(expireAlert);\r\n            //     const now = new Date();\r\n            //     if (now.getTime() > date) {\r\n            //         if (!this.isExpireAlerted) {\r\n            //             // alert(\"token almost expire\");\r\n            //             this.isExpireAlerted = true;\r\n            //         }\r\n            //\r\n            //     }\r\n            // }\r\n\r\n            // console.log(new Date(nowMs), \"now\");\r\n            // console.log(new Date(Number(extendTime)), \"extendTime\");\r\n            // console.log(new Date(Number(expireTime)), \"expireTime\");\r\n\r\n\r\n            if (nowMs > extendTime && nowMs < expireTime) {\r\n                const newExtendDate = new Date(Number(extendTime) + (120 * 60 * 1000));\r\n                console.log('first extend check');\r\n                console.log(newExtendDate, \"new extend\");\r\n                console.log(newExtendDate.getTime() + \" \" + Number(expireTime));\r\n                if (newExtendDate.getTime() >= Number(expireTime)) {\r\n                    const newExpireDate = new Date(Number(expireTime) + (90 * 60 * 1000));\r\n                    this.extendCookies(newExpireDate, newExtendDate);\r\n                    // alert('extend!');\r\n                    console.log(newExpireDate, \"later\");\r\n                }\r\n            }\r\n        }\r\n\r\n        // this is just testing, remove this if savePost not working\r\n        // this might just use for upload file request only(formData), not for whole request\r\n        if (withFormData) {\r\n            request.processData = false;\r\n            request.contentType = false;\r\n        }\r\n\r\n        // get token from session\r\n        // const token = Cookies.get('authToken');\r\n\r\n        // if token is available and withToken set as true, then pass request with headers\r\n        // they not using header Authorization so disable this\r\n        // if (token && withToken === true) {\r\n        //     request.headers = {\"Authorization\": token};\r\n        // }\r\n\r\n        return jQuery.ajax(request);\r\n    }\r\n\r\n    async uploadFile(files, postID) {\r\n        console.log(postID);\r\n        const formData = new FormData();\r\n        formData.append('token', Cookies.get('authToken'));\r\n        formData.append('UserID_Session', Cookies.get('userIDSession'));\r\n\r\n        console.log(files);\r\n\r\n        formData.append(\"file\", files[0]);\r\n        formData.append(\"postID\", postID);\r\n        // console.log(formData);\r\n        // console.log(files);\r\n\r\n        const request = {\r\n            url: `${API_HOST}/controller/Upload_File.asmx/uploadFile`,\r\n            cache: false,\r\n            type: 'POST',\r\n            data: formData,\r\n            enctype: 'multipart/form-data',\r\n            processData: false,\r\n            contentType: false,\r\n            async: false,\r\n            json: false,\r\n            success: function (response) {\r\n                return response;\r\n            }\r\n        };\r\n\r\n        return jQuery.ajax(request);\r\n\r\n        // const response = await this.callWebService(\"/controller/Upload_File.asmx/uploadFile\", data, \"POST\", true, true);\r\n        // return response;\r\n    }\r\n\r\n    async login(userId, password) {\r\n        const data = {\r\n            userID: userId,\r\n            userPassword: password\r\n        };\r\n\r\n        try {\r\n            // Cookies.set('alert', alertExpireDate, {expires: expireDate});\r\n            let extendDate = new Date(new Date().getTime() + 120 * 60 * 1000);\r\n            let expireDate = new Date(new Date().getTime() + 90 * 60 * 1000);\r\n            const extendMs = extendDate.getTime();\r\n            const expiredMs = expireDate.getTime();\r\n\r\n            const response = await this.callWebService(\"/controller/Login.asmx/checkLogin\", data, \"POST\", false);\r\n            Cookies.set('authToken', response.token, {expires: expireDate}); //expire in 3 hour);\r\n            Cookies.set('schoolSession', response.UserSchool_Session, {expires: expireDate}); //expire in 3 hour);\r\n            Cookies.set('userIDSession', response.UserID_Session, {expires: expireDate}); //expire in 3 hour);\r\n            Cookies.set('userTypeSession', response.UserType_Session, {expires: expireDate}); //expire in 3 hour);\r\n            Cookies.set('userUniversitySession', response.UserUniversity_Session, {expires: expireDate}); //expire in 3 hour);\r\n            Cookies.set('usRidSession', response.USRid_Session, {expires: expireDate}); //expire in 3 hour);\r\n            Cookies.set('userEmailSession', response.UserEmail_Session, {expires: expireDate}); //expire in 3 hour);\r\n            Cookies.set('userNameSession', response.UserName_Session, {expires: expireDate}); //expire in 3 hour);\r\n            Cookies.set('expireTime', expiredMs, {expires: expireDate}); //expire in 3 hour);\r\n            Cookies.set('extendTime', extendMs, {expires: expireDate}); //expire in 3 hour);\r\n            return response;\r\n        } catch (e) {\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    extendCookies(expireDate, extendTime) {\r\n        try {\r\n            const token = Cookies.get('authToken');\r\n            const UserSchool_Session = Cookies.get('schoolSession');\r\n            const UserID_Session = Cookies.get('userIDSession');\r\n            const UserType_Session = Cookies.get('userTypeSession');\r\n            const UserUniversity_Session = Cookies.get('userUniversitySession');\r\n            const UserEmail_Session = Cookies.get('userEmailSession');\r\n            const USRid_Session = Cookies.get('usRidSession');\r\n            const UserName_Session = Cookies.get('userNameSession');\r\n            const expiredMs = expireDate.getTime();\r\n            const extendMs = extendTime.getTime();\r\n\r\n\r\n            Cookies.set('authToken', token, {expires: expireDate}); //expire in 3 hour);\r\n            Cookies.set('schoolSession', UserSchool_Session, {expires: expireDate}); //expire in 3 hour);\r\n            Cookies.set('userIDSession', UserID_Session, {expires: expireDate}); //expire in 3 hour);\r\n            Cookies.set('userTypeSession', UserType_Session, {expires: expireDate}); //expire in 3 hour);\r\n            Cookies.set('userUniversitySession', UserUniversity_Session, {expires: expireDate}); //expire in 3 hour);\r\n            Cookies.set('usRidSession', USRid_Session, {expires: expireDate}); //expire in 3 hour);\r\n            Cookies.set('userEmailSession', UserEmail_Session, {expires: expireDate}); //expire in 3 hour);\r\n            Cookies.set('userNameSession', UserName_Session, {expires: expireDate}); //expire in 3 hour);\r\n            Cookies.set('expireTime', expiredMs, {expires: expireDate}); //expire in 3 hour);\r\n            Cookies.set('extendTime', extendMs, {expires: expireDate}); //expire in 3 hour);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n\r\n    async externalLogin(userId, tokenId) {\r\n        const data = {\r\n            userID: userId,\r\n            externalLoginToken: tokenId\r\n        };\r\n\r\n        const response = await this.callWebService(\"/controller/Login.asmx/checkLogin\", data, \"POST\", false);\r\n        Cookies.set('authToken', response.token, {expires: 3 / 24}); //expire in 3 hour);\r\n        Cookies.set('schoolSession', response.UserSchool_Session, {expires: 3 / 24}); //expire in 3 hour);\r\n        Cookies.set('userIDSession', response.UserID_Session, {expires: 3 / 24}); //expire in 3 hour);\r\n        Cookies.set('userTypeSession', response.UserType_Session, {expires: 3 / 24}); //expire in 3 hour);\r\n        Cookies.set('userUniversitySession', response.UserUniversity_Session, {expires: 3 / 24}); //expire in 3 hour);\r\n        Cookies.set('usRidSession', response.USRid_Session, {expires: 3 / 24}); //expire in 3 hour);\r\n        Cookies.set('userEmailSession', response.UserEmail_Session, {expires: 3 / 24}); //expire in 3 hour);\r\n        Cookies.set('userNameSession', response.UserName_Session, {expires: 3 / 24}); //expire in 3 hour);\r\n        return response;\r\n    }\r\n\r\n    logout() {\r\n        let $ = require(\"jquery\");\r\n\r\n        let internalSession = new Promise((resolve, reject) => {\r\n            const data = {};\r\n\r\n            this.callWebService(\"/controller/Login.asmx/logOut\", data, \"POST\").then((result) => {\r\n                resolve(result == \"1\");\r\n            });\r\n        });\r\n\r\n        let sessionSignout = new Promise((resolve, reject) => {\r\n            Cookies.remove('authToken');\r\n            Cookies.remove('schoolSession');\r\n            Cookies.remove('userIDSession');\r\n            Cookies.remove('userTypeSession');\r\n            Cookies.remove('userUniversitySession');\r\n            Cookies.remove('usRidSession');\r\n            Cookies.remove('userEmailSession');\r\n            Cookies.remove('userNameSession');\r\n            resolve(true);\r\n        });\r\n\r\n        let googleSignout = new Promise((resolve, reject) => {\r\n            $.getScript('https://apis.google.com/js/platform.js', function () {\r\n                gapi.load(\"auth2\", () => {\r\n                    gapi.auth2.init({\r\n                        client_id: \"646978523324-lcudp248dvuuk0rda4q6kf2bti9qkk3b.apps.googleusercontent.com\"\r\n                    }).then((auth2) => {\r\n                        auth2.signOut();\r\n                        resolve(true);\r\n                    });\r\n                });\r\n            });\r\n        });\r\n\r\n        let fbSignout = new Promise((resolve, reject) => {\r\n            $.getScript('https://connect.facebook.net/en_US/sdk.js', function () {\r\n                FB.init({\r\n                    // appId: '255792542012990',\r\n                    appId: '1983777365262188',\r\n                    version: 'v2.7' // or v2.1, v2.2, v2.3, ...\r\n                });\r\n\r\n                FB.getLoginStatus(() => {\r\n                    FB.logout();\r\n                    resolve(true);\r\n                });\r\n            });\r\n        });\r\n\r\n        Promise.all([internalSession, sessionSignout, googleSignout, fbSignout]).then((result) => {\r\n            window.location.replace(\"/login\");\r\n        });\r\n    }\r\n\r\n    async resetEmailPassword(userEmail) {\r\n        const data = {\r\n            userEmail: userEmail\r\n        };\r\n        const response = await this.callWebService(\"/controller/Login.asmx/resetPasswordEmail\", data, \"POST\", false);\r\n        return response;\r\n    }\r\n\r\n    async resetPassword(userEmail, userPassword, otp) {\r\n        const data = {\r\n            userEmail: userEmail,\r\n            userPassword: userPassword,\r\n            otp: otp\r\n        };\r\n        const response = await this.callWebService(\"/controller/Login.asmx/resetPassword\", data, \"POST\", false);\r\n        return response;\r\n    }\r\n\r\n    async parentRegister(userEmail, userPassword, studentIDNo, studentID_Index, studentDOB, studentIDType, externalLoginType, externalLoginToken) {\r\n        const date = moment(studentDOB).format('Y-MM-DD HH:mm:ss');\r\n        console.log(date);\r\n        const data = {\r\n            userEmail: userEmail,\r\n            userPassword: userPassword,\r\n            studentID_Index: studentID_Index,\r\n            studentDOB: date,\r\n            studentIDType: studentIDType,\r\n            studentIDNo: studentIDNo,\r\n            externalLoginType: externalLoginType,\r\n            externalLoginToken: externalLoginToken\r\n        };\r\n        let response = await this.callWebService(\"/controller/Register.asmx/parentRegistration\", data, \"POST\", false);\r\n\r\n        if (typeof response === \"string\") {\r\n            response = JSON.parse(response);\r\n        }\r\n\r\n        return response;\r\n\r\n    }\r\n\r\n    async getStudent(studentID, studentID_Index, studentFirstName, studentLastName, parentName) {\r\n        const data = {\r\n            studentID: studentID,\r\n            studentID_Index: studentID_Index,\r\n            studentFirstName: studentFirstName,\r\n            studentLastName: studentLastName,\r\n            parentName: parentName,\r\n            // token: Cookies.get('authToken'),\r\n            //UserSchool_Session: Cookies.get('schoolSession'),\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getStudent\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getStudentParentView(studentID) {\r\n        const data = {\r\n            studentID: studentID,\r\n            parentView: \"YES\"\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getStudent\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async checkStudentDuplication(studentFirstName, studentLastName, studentDOB, finExpire, fin, birthCert, ic, passport, passportExpire) {\r\n        const data = {\r\n            studentFirstName: studentFirstName,\r\n            studentLastName: studentLastName,\r\n            studentDOB: studentDOB,\r\n            finExpire: finExpire,\r\n            fin: fin,\r\n            birthCert: birthCert,\r\n            ic: ic,\r\n            passport: passport,\r\n            passportExpire: passportExpire,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/checkStudentDuplication\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getStudentProfilePicture(studentID) {\r\n        const data = {\r\n            studentID: studentID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getStudentProfilePicture\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getStudentAddressGoogleAPI(postcode, country) {\r\n        let result = '';\r\n\r\n        if (country === '' || country === 'Singapore') {\r\n            country = 'Singapore';\r\n\r\n            //to take out S in front of postcode\r\n            if (postcode.substring(0, 1).toUpperCase() === 'S') {\r\n                postcode = postcode.substring(1, postcode.length);\r\n            }\r\n            //to take out S in front of postcode\r\n        }\r\n\r\n        //search by address / postcode\r\n        const request = {\r\n            url: 'https://maps.googleapis.com/maps/api/geocode/json?address=' + postcode + '+' + country + '&result_type=street_address&key=' + GoogleGeocodeAPIKey,\r\n            cache: false,\r\n            type: 'POST',\r\n            enctype: 'multipart/form-data',\r\n            processData: false,\r\n            contentType: false,\r\n            async: false,\r\n            json: false,\r\n            success: function (response) {\r\n                return response;\r\n            }\r\n        };\r\n\r\n        let response = await jQuery.ajax(request);\r\n        if (typeof response === \"string\") {\r\n            response = JSON.parse(response);\r\n        }\r\n        //search by address / postcode\r\n\r\n        //get lat lng\r\n        let lat = '';\r\n        let lng = '';\r\n\r\n        this.resultResponse = response.results;\r\n        this.resultResponse.forEach(m => {\r\n            lat = m.geometry.location.lat;\r\n            lng = m.geometry.location.lng;\r\n        });\r\n        //get lat lng\r\n\r\n        //search by lat lng\r\n        if (response.status === 'OK') {\r\n            const request2 = {\r\n                url: 'https://maps.googleapis.com/maps/api/geocode/json?latlng=' + lat + ',' + lng + '&key=' + GoogleGeocodeAPIKey,\r\n                cache: false,\r\n                type: 'POST',\r\n                enctype: 'multipart/form-data',\r\n                processData: false,\r\n                contentType: false,\r\n                async: false,\r\n                json: false,\r\n                success: function (response2) {\r\n                    return response2;\r\n                }\r\n            };\r\n\r\n            let response2 = await jQuery.ajax(request2);\r\n            if (typeof response2 === \"string\") {\r\n                response2 = JSON.parse(response2);\r\n            }\r\n\r\n            result = response2.results[0].formatted_address;\r\n\r\n            // const resultResponse2 = response2.results[0].address_components;\r\n            // resultResponse2.forEach(m => {\r\n            //     console.log(m);\r\n            // });\r\n        }\r\n        //search by lat lng\r\n\r\n        return result;\r\n    }\r\n\r\n    async saveStudent(files, jsonString, jsonString2, familyID, parentID, allergiesList) {\r\n        const data = new FormData();\r\n        data.append('token', Cookies.get('authToken'));\r\n        data.append('UserSchool_Session', Cookies.get('schoolSession'));\r\n        data.append('UserID_Session', Cookies.get('userIDSession'));\r\n        data.append('UserUniversity_Session', Cookies.get('userUniversitySession'));\r\n\r\n        if (files && files.length > 1) {\r\n            for (let key in files) {\r\n                //console.log(key);\r\n                if (files.hasOwnProperty(key)) {\r\n                    // console.log(files[key]);\r\n                    if (key > 0) {\r\n                        data.append(`upload_${key}`, files[key]);\r\n                    } else {\r\n                        data.append(\"upload\", files[key]);\r\n                    }\r\n                }\r\n            }\r\n        } else if (files) {\r\n            data.append(\"upload\", files[0]);\r\n        }\r\n\r\n        data.append(\"jsonString\", jsonString);\r\n        data.append(\"jsonString2\", jsonString2);\r\n        data.append(\"familyID\", familyID);\r\n        data.append(\"parentID\", parentID);\r\n        data.append(\"allergiesList\", allergiesList);\r\n\r\n        const request = {\r\n            url: `${API_HOST}/controller/Students.asmx/saveStudent`,\r\n            cache: false,\r\n            type: 'POST',\r\n            data: data,\r\n            enctype: 'multipart/form-data',\r\n            processData: false,\r\n            contentType: false,\r\n            async: false,\r\n            json: false,\r\n            success: function (response) {\r\n                return response;\r\n            }\r\n        };\r\n\r\n        let response = await jQuery.ajax(request);\r\n        if (typeof response === \"string\") {\r\n            response = JSON.parse(response);\r\n        }\r\n        return response;\r\n    }\r\n\r\n    async updateStudent(files, studentID, jsonString, allergiesList) {\r\n        const data = new FormData();\r\n        data.append('token', Cookies.get('authToken'));\r\n        data.append('UserID_Session', Cookies.get('userIDSession'));\r\n\r\n        if (files && files.length > 1) {\r\n            for (let key in files) {\r\n                //console.log(key);\r\n                if (files.hasOwnProperty(key)) {\r\n                    // console.log(files[key]);\r\n                    if (key > 0) {\r\n                        data.append(`upload_${key}`, files[key]);\r\n                    } else {\r\n                        data.append(\"upload\", files[key]);\r\n                    }\r\n                }\r\n            }\r\n        } else if (files) {\r\n            data.append(\"upload\", files[0]);\r\n        }\r\n\r\n        data.append(\"studentID\", studentID);\r\n        data.append(\"jsonString\", jsonString);\r\n        data.append(\"allergiesList\", allergiesList);\r\n\r\n        const request = {\r\n            url: `${API_HOST}/controller/Students.asmx/updateStudent`,\r\n            cache: false,\r\n            type: 'POST',\r\n            data: data,\r\n            enctype: 'multipart/form-data',\r\n            processData: false,\r\n            contentType: false,\r\n            async: false,\r\n            json: false,\r\n            success: function (response) {\r\n                return response;\r\n            }\r\n        };\r\n\r\n        let response = await jQuery.ajax(request);\r\n        if (typeof response === \"string\") {\r\n            response = JSON.parse(response);\r\n        }\r\n        return response;\r\n    }\r\n\r\n    async activeStudent(studentID) {\r\n        const data = {\r\n            studentID: studentID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/activeStudent\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getStudentAvailableStatusAction(currentStatus) {\r\n        const data = {\r\n            currentStatus: currentStatus,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getStudentAvailableStatusAction\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async updateStudentStatus(studentID, newStatus) {\r\n        const data = {\r\n            studentID: studentID,\r\n            newStatus: newStatus,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/updateStudentStatus\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getParentList(familyId, parentLastName, parentFirstName) {\r\n        const data = {\r\n            familyID: familyId,\r\n            parentFirstName: parentFirstName,\r\n            parentLastName: parentLastName,\r\n            // token: Cookies.get('authToken'),\r\n            // UserSchool_Session: Cookies.get('schoolSession'),\r\n        };\r\n        const response = await this.callWebService(\"/controller/Parents.asmx/getParentList\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getParent(parentID, familyID) {\r\n        const data = {\r\n            parentID: parentID,\r\n            familyID: familyID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Parents.asmx/getParent\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getRelationship(familyID, studentID, parentFirstName, parentLastName, studentName) {\r\n        const data = {\r\n            familyID: familyID,\r\n            studentID: studentID,\r\n            parentFirstName: parentFirstName,\r\n            parentLastName: parentLastName,\r\n            studentName: studentName,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Parents.asmx/getRelationship\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getRelationshipByParentID(parentID) {\r\n        const data = {\r\n            parentID: parentID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Parents.asmx/getRelationship\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getStudentSiblingReligionLanguages(parentID) {\r\n        const data = {\r\n            parentID: parentID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Parents.asmx/getStudentSiblingReligionLanguages\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async updateRelationship(familyID, studentID) {\r\n        const data = {\r\n            familyID: familyID,\r\n            studentID: studentID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Parents.asmx/updateRelationship\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getStudentLevel(studentID) {\r\n        const data = {\r\n            studentID: studentID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getStudentLevel\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getStudentLevelActiveOnly(studentID) {\r\n        const data = {\r\n            studentID: studentID,\r\n            onlyActive: 'Yes',\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getStudentLevel\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getEditClass(semID, subjectcourseID, customClassNotEqual) {\r\n        const data = {\r\n            semID: semID,\r\n            subjectcourseID: subjectcourseID,\r\n            customClassNotEqual: customClassNotEqual,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Course.asmx/getEditClass\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getStudentClass(studentID, courseID) {\r\n        const data = {\r\n            studentID: studentID,\r\n            courseID: courseID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getStudentClass\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async setClass(studentID, classID, studentCourseID) {\r\n        const data = {\r\n            studentID: studentID,\r\n            classID: classID,\r\n            studentCourseID: studentCourseID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/setClass\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async massSetClass(classID, jsonString) {\r\n        const data = {\r\n            classID: classID,\r\n            jsonString: jsonString,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/massSetClass\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async updateLevel(studentID, studentCourseID, actionMode) {\r\n        const data = {\r\n            studentID: studentID,\r\n            studentCourseID: studentCourseID,\r\n            actionMode: actionMode,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/updateLevel\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getSibling(studentID_Index, studentID) {\r\n        const data = {\r\n            studentID_Index: studentID_Index,\r\n            studentID: studentID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getSibling\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async updateParent(parentID, jsonString) {\r\n        const data = {\r\n            parentID: parentID,\r\n            jsonString: jsonString,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Parents.asmx/updateParent\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getAcademicYearDateRange(academicYearID) {\r\n        const data = {\r\n            academicYearID: academicYearID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Course.asmx/getAcademicYearDateRange\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async setLevel(studentID, levelID, fromDate, toDate, academicYearID, intakeYear) {\r\n        const data = {\r\n            studentID: studentID,\r\n            levelID: levelID,\r\n            fromDate: fromDate,\r\n            toDate: toDate,\r\n            academicYearID: academicYearID,\r\n            intakeYear: intakeYear,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/setLevel\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async setLevelForAcceptScool(studentID, levelID, fromDate, toDate, academicYearID, intakeYear, acceptTransferStudent, studentSchoolID, effectiveDate) {\r\n        const data = {\r\n            studentID: studentID,\r\n            levelID: levelID,\r\n            fromDate: fromDate,\r\n            toDate: toDate,\r\n            academicYearID: academicYearID,\r\n            intakeYear: intakeYear,\r\n            acceptTransferStudent: acceptTransferStudent,\r\n            studentSchoolID: studentSchoolID,\r\n            effectiveDate: effectiveDate\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/setLevel\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async checkParentDuplication(firstName, lastName, checkMode) {\r\n        const data = {\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            checkMode: checkMode,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Parents.asmx/checkParentDuplication\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getUserMenu() {\r\n        const data = {};\r\n\r\n        const userType = Cookies.get('userTypeSession');\r\n        if (userType !== \"Parent\") {\r\n            data.USRid_Session = Cookies.get('usRidSession');\r\n        }\r\n\r\n        const response = await this.callWebService(\"/controller/User.asmx/getUserMenu\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getUserSch() {\r\n        const data = {};\r\n\r\n        const userEmail = Cookies.get('userEmailSession');\r\n        if (userEmail !== \"\" || userEmail !== null) {\r\n            data.UserEmail_Session = Cookies.get('userEmailSession');\r\n        }\r\n\r\n        const response = await this.callWebService(\"/controller/User.asmx/getUserSch\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getAllStaffListBySchool() {\r\n        const data = {};\r\n\r\n        const response = await this.callWebService(\"/controller/User.asmx/getAllStaffListBySchool\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getAllStaffList() {\r\n        const data = {};\r\n\r\n        const response = await this.callWebService(\"/controller/User.asmx/getAllStaffList\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getStaffPost(int_NumberOfPost, str_LastPostID, postType) {\r\n        const data = {\r\n            UserID_Session: Cookies.get('userIDSession'),\r\n            numberOfPost: int_NumberOfPost,\r\n            lastPostID: str_LastPostID,\r\n            postType: postType,\r\n        };\r\n\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/getPostStaff\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getParentPost(int_NumberOfPost, str_LastPostID, postType) {\r\n        const data = {\r\n            UserID_Session: Cookies.get('userIDSession'),\r\n            numberOfPost: int_NumberOfPost,\r\n            lastPostID: str_LastPostID,\r\n            postType: postType,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/getPostParent\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getPostDropdown() {\r\n        const data = {};\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/getPostDropDown\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getStaffPostHome() {\r\n        const data = {};\r\n\r\n        data.UserID_Session = Cookies.get('userIDSession');\r\n        data.numberOfPost = 5;\r\n\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/getPostStaff\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async savePostUpdate(files, postContent, tagUserID, tagClassID, tagLevelID, postLinkID) {\r\n        const postType = \"UPDATE\";\r\n        const formData = new FormData();\r\n        formData.append('token', Cookies.get('authToken'));\r\n        formData.append('UserID_Session', Cookies.get('userIDSession'));\r\n        formData.append('UserSchool_Session', Cookies.get('schoolSession'));\r\n        formData.append(\"postLinkID\", postLinkID);\r\n\r\n        if (files && files.length > 1) {\r\n            for (let key in files) {\r\n                // console.log(key);\r\n                if (files.hasOwnProperty(key)) {\r\n                    // console.log(files[key]);\r\n                    if (key > 0) {\r\n                        formData.append(`upload_${key}`, files[key]);\r\n                    } else {\r\n                        formData.append(\"upload\", files[key]);\r\n                    }\r\n                }\r\n            }\r\n        } else if (files) {\r\n            formData.append(\"upload\", files[0]);\r\n        }\r\n\r\n        formData.append(\"updateContent\", postContent);\r\n        // formData.append(\"tagAcademicYearID\", tagAcademicYearID);\r\n        formData.append(\"postType\", postType);\r\n\r\n        if (tagUserID && tagUserID.length > 0) {\r\n            formData.append(\"tagUserID\", tagUserID);\r\n        } else if (tagLevelID) {\r\n            formData.append(\"tagLevelID\", tagLevelID);\r\n        } else if (tagClassID) {\r\n            formData.append(\"tagClassID\", tagClassID);\r\n        }\r\n\r\n        const request = {\r\n            url: `${API_HOST}/controller/Posting.asmx/savePost`,\r\n            cache: false,\r\n            type: 'POST',\r\n            data: formData,\r\n            enctype: 'multipart/form-data',\r\n            processData: false,\r\n            contentType: false,\r\n            async: false,\r\n            json: false,\r\n            success: function (response) {\r\n                return response;\r\n            }\r\n        };\r\n\r\n        let response = await jQuery.ajax(request);\r\n        if (typeof response === \"string\") {\r\n            response = JSON.parse(response);\r\n        }\r\n        return response;\r\n    }\r\n\r\n    async savePortfolioPost(files, porTitle, porObservation, porAnalysisReflection, porDevelopmentGoals, tagUserID, tagClassID, tagLevelID, postLinkID) {\r\n        const postType = \"PORTFOLIO\";\r\n        const formData = new FormData();\r\n        formData.append('token', Cookies.get('authToken'));\r\n        formData.append('UserID_Session', Cookies.get('userIDSession'));\r\n        formData.append('UserSchool_Session', Cookies.get('schoolSession'));\r\n        formData.append(\"porTitle\", porTitle);\r\n        formData.append(\"porObservation\", porObservation);\r\n        formData.append(\"porAnalysisReflection\", porAnalysisReflection);\r\n        formData.append(\"porDevelopmentGoals\", porDevelopmentGoals);\r\n        formData.append(\"postLinkID\", postLinkID);\r\n\r\n        if (files && files.length > 1) {\r\n            for (let key in files) {\r\n                // console.log(key);\r\n                if (files.hasOwnProperty(key)) {\r\n                    // console.log(files[key]);\r\n                    if (key > 0) {\r\n                        formData.append(`upload_${key}`, files[key]);\r\n                    } else {\r\n                        formData.append(\"upload\", files[key]);\r\n                    }\r\n                }\r\n            }\r\n        } else if (files) {\r\n            formData.append(\"upload\", files[0]);\r\n        }\r\n\r\n        // formData.append(\"tagAcademicYearID\", tagAcademicYearID);\r\n        formData.append(\"postType\", postType);\r\n\r\n        if (tagUserID && tagUserID.length > 0) {\r\n            formData.append(\"tagUserID\", tagUserID);\r\n        } else if (tagLevelID) {\r\n            formData.append(\"tagLevelID\", tagLevelID);\r\n        } else if (tagClassID) {\r\n            formData.append(\"tagClassID\", tagClassID);\r\n        }\r\n\r\n        const request = {\r\n            url: `${API_HOST}/controller/Posting.asmx/savePost`,\r\n            cache: false,\r\n            type: 'POST',\r\n            data: formData,\r\n            enctype: 'multipart/form-data',\r\n            processData: false,\r\n            contentType: false,\r\n            async: false,\r\n            json: false,\r\n            success: function (response) {\r\n                return response;\r\n            }\r\n        };\r\n\r\n        let response = await jQuery.ajax(request);\r\n        if (typeof response === \"string\") {\r\n            response = JSON.parse(response);\r\n        }\r\n        return response;\r\n    }\r\n\r\n    async saveReportPost(files, repTitle, repObservation, tagUserID, tagClassID, tagLevelID, postLinkID) {\r\n        const postType = \"REPORT\";\r\n        const formData = new FormData();\r\n        formData.append('token', Cookies.get('authToken'));\r\n        formData.append('UserID_Session', Cookies.get('userIDSession'));\r\n        formData.append('UserSchool_Session', Cookies.get('schoolSession'));\r\n        formData.append(\"repTitle\", repTitle);\r\n        formData.append(\"repObservation\", repObservation);\r\n        formData.append(\"postLinkID\", postLinkID);\r\n\r\n        if (files && files.length > 1) {\r\n            for (let key in files) {\r\n                // console.log(key);\r\n                if (files.hasOwnProperty(key)) {\r\n                    // console.log(files[key]);\r\n                    if (key > 0) {\r\n                        formData.append(`upload_${key}`, files[key]);\r\n                    } else {\r\n                        formData.append(\"upload\", files[key]);\r\n                    }\r\n                }\r\n            }\r\n        } else if (files) {\r\n            formData.append(\"upload\", files[0]);\r\n        }\r\n\r\n        // formData.append(\"tagAcademicYearID\", tagAcademicYearID);\r\n        formData.append(\"postType\", postType);\r\n\r\n        if (tagUserID && tagUserID.length > 0) {\r\n            formData.append(\"tagUserID\", tagUserID);\r\n        } else if (tagLevelID) {\r\n            formData.append(\"tagLevelID\", tagLevelID);\r\n        } else if (tagClassID) {\r\n            formData.append(\"tagClassID\", tagClassID);\r\n        }\r\n\r\n        const request = {\r\n            url: `${API_HOST}/controller/Posting.asmx/savePost`,\r\n            cache: false,\r\n            type: 'POST',\r\n            data: formData,\r\n            enctype: 'multipart/form-data',\r\n            processData: false,\r\n            contentType: false,\r\n            async: false,\r\n            json: false,\r\n            success: function (response) {\r\n                return response;\r\n            }\r\n        };\r\n\r\n        let response = await jQuery.ajax(request);\r\n        if (typeof response === \"string\") {\r\n            response = JSON.parse(response);\r\n        }\r\n        return response;\r\n    }\r\n\r\n    async saveDocumentPost(files, docContent, postLinkID) {\r\n        const postType = \"DOCUMENTATION\";\r\n        const formData = new FormData();\r\n        formData.append('token', Cookies.get('authToken'));\r\n        formData.append('UserID_Session', Cookies.get('userIDSession'));\r\n        formData.append('UserSchool_Session', Cookies.get('schoolSession'));\r\n        formData.append(\"docContent\", docContent);\r\n        formData.append(\"postLinkID\", postLinkID);\r\n\r\n        if (files && files.length > 1) {\r\n            for (let key in files) {\r\n                // console.log(key);\r\n                if (files.hasOwnProperty(key)) {\r\n                    // console.log(files[key]);\r\n                    if (key > 0) {\r\n                        formData.append(`upload_${key}`, files[key]);\r\n                    } else {\r\n                        formData.append(\"upload\", files[key]);\r\n                    }\r\n                }\r\n            }\r\n        } else if (files) {\r\n            formData.append(\"upload\", files[0]);\r\n        }\r\n\r\n        // formData.append(\"tagAcademicYearID\", tagAcademicYearID);\r\n        formData.append(\"postType\", postType);\r\n\r\n        if (tagUserID && tagUserID.length > 0) {\r\n            formData.append(\"tagUserID\", \"\");\r\n        } else if (tagLevelID) {\r\n            formData.append(\"tagLevelID\", \"\");\r\n        } else if (tagClassID) {\r\n            formData.append(\"tagClassID\", \"\");\r\n        }\r\n\r\n        const request = {\r\n            url: `${API_HOST}/controller/Posting.asmx/savePost`,\r\n            cache: false,\r\n            type: 'POST',\r\n            data: formData,\r\n            enctype: 'multipart/form-data',\r\n            processData: false,\r\n            contentType: false,\r\n            async: false,\r\n            json: false,\r\n            success: function (response) {\r\n                return response;\r\n            }\r\n        };\r\n\r\n        let response = await jQuery.ajax(request);\r\n        if (typeof response === \"string\") {\r\n            response = JSON.parse(response);\r\n        }\r\n        return response;\r\n    }\r\n\r\n    async saveBroadcastPost(files, broadContent, tagUserID, tagClassID, tagLevelID, postLinkID) {\r\n        const postType = \"BROADCAST\";\r\n        const formData = new FormData();\r\n        formData.append('token', Cookies.get('authToken'));\r\n        formData.append('UserID_Session', Cookies.get('userIDSession'));\r\n        formData.append('UserSchool_Session', Cookies.get('schoolSession'));\r\n        formData.append(\"broadContent\", broadContent);\r\n        formData.append(\"postLinkID\", postLinkID);\r\n\r\n        if (files && files.length > 1) {\r\n            for (let key in files) {\r\n                // console.log(key);\r\n                if (files.hasOwnProperty(key)) {\r\n                    // console.log(files[key]);\r\n                    if (key > 0) {\r\n                        formData.append(`upload_${key}`, files[key]);\r\n                    } else {\r\n                        formData.append(\"upload\", files[key]);\r\n                    }\r\n                }\r\n            }\r\n        } else if (files) {\r\n            formData.append(\"upload\", files[0]);\r\n        }\r\n\r\n        // formData.append(\"tagAcademicYearID\", tagAcademicYearID);\r\n        formData.append(\"postType\", postType);\r\n\r\n        if (tagUserID && tagUserID.length > 0) {\r\n            formData.append(\"tagUserID\", tagUserID);\r\n        } else if (tagLevelID) {\r\n            formData.append(\"tagLevelID\", tagLevelID);\r\n        } else if (tagClassID) {\r\n            formData.append(\"tagClassID\", tagClassID);\r\n        }\r\n\r\n        const request = {\r\n            url: `${API_HOST}/controller/Posting.asmx/savePost`,\r\n            cache: false,\r\n            type: 'POST',\r\n            data: formData,\r\n            enctype: 'multipart/form-data',\r\n            processData: false,\r\n            contentType: false,\r\n            async: false,\r\n            json: false,\r\n            success: function (response) {\r\n                return response;\r\n            }\r\n        };\r\n\r\n        let response = await jQuery.ajax(request);\r\n        if (typeof response === \"string\") {\r\n            response = JSON.parse(response);\r\n        }\r\n        return response;\r\n    }\r\n\r\n    async getPostFile(postID) {\r\n        const data = {\r\n            postID: postID\r\n        };\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/getPostFile\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getPostAllTaggingStudentsByPostID(postID) {\r\n        const data = {\r\n            postID: postID\r\n        };\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/getPostAllTaggingStudentsByPostID\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async saveComment(PostID, postContent) {\r\n        const data = {\r\n            postID: PostID,\r\n            postContent: postContent,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/savePostComment\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getComment(PostID) {\r\n        const data = {\r\n            postId: PostID\r\n        };\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/getPostComment\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async editComment(commentPostID, postContent, actionMode) {\r\n        const data = {\r\n            commentPostID: commentPostID,\r\n            postContent: postContent,\r\n            actionMode: actionMode\r\n        };\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/updatePostComment\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async deleteComment(commentPostID, postContent, actionMode) {\r\n        const data = {\r\n            commentPostID: commentPostID,\r\n            postContent: postContent,\r\n            actionMode: actionMode\r\n        };\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/updatePostComment\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async saveGallery(files, fileType, galFolderID, folderName) {\r\n\r\n        const formData = new FormData();\r\n        formData.append('token', Cookies.get('authToken'));\r\n        formData.append('UserID_Session', Cookies.get('userIDSession'));\r\n\r\n        if (files && files.length > 1) {\r\n            for (let key in files) {\r\n                // console.log(key);\r\n                if (files.hasOwnProperty(key)) {\r\n                    // console.log(files[key]);\r\n                    if (key > 0) {\r\n                        formData.append(`upload_${key}`, files[key]);\r\n                    } else {\r\n                        formData.append(\"upload\", files[key]);\r\n                    }\r\n                }\r\n            }\r\n        } else if (files) {\r\n            formData.append(\"upload\", files[0]);\r\n        }\r\n\r\n        formData.append(\"fileType\", fileType);\r\n        formData.append(\"galFolderID\", galFolderID);\r\n        formData.append(\"folderName\", folderName);\r\n\r\n        const request = {\r\n            url: `${API_HOST}/controller/Gallery.asmx/saveFile`,\r\n            cache: false,\r\n            type: 'POST',\r\n            data: formData,\r\n            enctype: 'multipart/form-data',\r\n            processData: false,\r\n            contentType: false,\r\n            async: false,\r\n            json: false,\r\n            success: function (response) {\r\n                return response;\r\n            }\r\n        };\r\n\r\n        let response = await jQuery.ajax(request);\r\n        if (typeof response === \"string\") {\r\n            response = JSON.parse(response);\r\n        }\r\n        return response;\r\n\r\n    }\r\n\r\n    async pendingPost(ID, PostID, PostContent, PostStatus, PostCreatedDate, PostApproverID) {\r\n        const data = {\r\n            ID: ID,\r\n            PostID: PostID,\r\n            PostContent: PostContent,\r\n            PostStatus: PostStatus,\r\n            PostCreatedDate: PostCreatedDate,\r\n            PostApproverID: PostApproverID\r\n        };\r\n        data.UserID_Session = Cookies.get('userIDSession');\r\n        const response = await this.callWebService(\"/controller/Approver.asmx/getPendingApproverPost\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async approvePost(postID, postType, actionStatus, postComment) {\r\n\r\n        const data = {\r\n            postID: postID,\r\n            postType: postType,\r\n            actionStatus: actionStatus,\r\n            postComment: postComment\r\n        };\r\n\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/approvePost\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async updatePost(currentFiles, actionStatus, postID, UpdateContent, profolio, tagUserID, tagClassID, tagLevelID) {\r\n        const formData = new FormData();\r\n        formData.append('token', Cookies.get('authToken'));\r\n        formData.append('UserID_Session', Cookies.get('userIDSession'));\r\n        console.log(currentFiles);\r\n        if (currentFiles && currentFiles.length > 1) {\r\n            for (let key in currentFiles) {\r\n                // console.log(key);\r\n                if (currentFiles.hasOwnProperty(key)) {\r\n                    // console.log(files[key]);\r\n                    if (key > 0) {\r\n                        formData.append(`upload_${key}`, currentFiles[key]);\r\n                    } else {\r\n                        formData.append(\"upload\", currentFiles[key]);\r\n                    }\r\n                }\r\n            }\r\n        } else if (currentFiles) {\r\n            formData.append(\"upload\", currentFiles[0]);\r\n        }\r\n\r\n        formData.append(\"actionStatus\", actionStatus);\r\n        formData.append(\"postID\", postID);\r\n        formData.append(\"UpdateContent\", UpdateContent);\r\n        formData.append(\"profolio\", profolio);\r\n        formData.append(\"tagUserID\", tagUserID);\r\n        formData.append(\"tagClassID\", tagClassID);\r\n        formData.append(\"tagLevelID\", tagLevelID);\r\n\r\n        const request = {\r\n            url: `${API_HOST}/controller/Posting.asmx/updatePost`,\r\n            cache: false,\r\n            type: 'POST',\r\n            data: formData,\r\n            enctype: 'multipart/form-data',\r\n            processData: false,\r\n            contentType: false,\r\n            async: false,\r\n            json: false,\r\n            success: function (response) {\r\n                return response;\r\n            }\r\n        };\r\n\r\n        let response = await jQuery.ajax(request);\r\n        if (typeof response === \"string\") {\r\n            response = JSON.parse(response);\r\n        }\r\n        return response;\r\n    }\r\n\r\n    async softDeletePost(postId, profolio) {\r\n        const data = {\r\n            postID: postId,\r\n            profolio,\r\n            actionStatus: \"Void\"\r\n        };\r\n\r\n        const response = await this.callWebService(\"/controller/Posting.asmx/updatePost\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getApproverMaster() {\r\n        const data = {};\r\n\r\n        const response = await this.callWebService(\"/controller/Approver.asmx/getApproverMaster\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async saveApproverMaster(approverLevel, approverUserID, approverType) {\r\n        const data = {\r\n            approverLevel: approverLevel,\r\n            approverUserID: approverUserID,\r\n            approverType: approverType\r\n        };\r\n\r\n        const response = await this.callWebService(\"/controller/Approver.asmx/saveApproverMaster\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async updateApproverMaster(approverMasterID, actionStatus) {\r\n        const data = {\r\n            approverMasterID: approverMasterID,\r\n            actionStatus: actionStatus,\r\n        };\r\n\r\n        const response = await this.callWebService(\"/controller/Approver.asmx/updateApproverMaster\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getApproverMasterSpecificUser() {\r\n        const data = {};\r\n\r\n        const response = await this.callWebService(\"/controller/Approver.asmx/getApproverMasterSpecificUser\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async updateApproverMasterSpecificUser(approverMasterSpecificID, actionStatus) {\r\n        const data = {\r\n            approverMasterSpecificID: approverMasterSpecificID,\r\n            actionStatus: actionStatus\r\n        };\r\n\r\n        const response = await this.callWebService(\"/controller/Approver.asmx/updateApproverMasterSpecificUser\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async saveApproverMasterSpecificUser(neededApproveSpecificUserID, approverType) {\r\n        const data = {\r\n            neededApproveSpecificUserID: neededApproveSpecificUserID,\r\n            approverType: approverType\r\n        };\r\n\r\n        const response = await this.callWebService(\"/controller/Approver.asmx/saveApproverMasterSpecificUser\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getPendingApprover() {\r\n        const data = {};\r\n\r\n        const response = await this.callWebService(\"/controller/Approver.asmx/getPendingApprover\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async checkApproveStatusByUser(itemID, mode) {\r\n        const data = {\r\n            itemID: itemID,\r\n            mode: mode\r\n        };\r\n\r\n        let result = await this.callWebService(\"/controller/Approver.asmx/checkApproveStatusByUser\", data, \"POST\");\r\n        return result;\r\n    }\r\n\r\n    async login2(userId, password) {\r\n        const data = {\r\n            username: userId,\r\n            password: password\r\n        };\r\n        const response = await this.callAPI(\"/login\", \"POST\", null, data);\r\n        Cookies.set('authToken', response.token, {expires: 3 / 24}); //expire in 3 hour);\r\n        return response;\r\n    }\r\n\r\n    async getCountryList() {\r\n        // let response;\r\n        // try {\r\n        //     response = await fetch(\"http://local.emsv2/controller/Students.asmx/getCountryList\");\r\n        // } catch (err) {\r\n        //     console.log(err);\r\n        //     throw ERROR_SERVER_UNREACHABLE;\r\n        // }\r\n        // return await parseResponseAndHandleErrors(response);\r\n\r\n        const data = {};\r\n\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getCountryList\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getLevel(customLevelNotEqual) {\r\n        const data = {\r\n            customLevelNotEqual: customLevelNotEqual,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Course.asmx/getLevel\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getLevelSpecificSchool(speificSchoolID) {\r\n        const data = {\r\n            speificSchoolID: speificSchoolID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Course.asmx/getLevel\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getStudentDropDownList(jsonString) {\r\n        const data = {\r\n            jsonString: jsonString,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getStudentDropDownList\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getStudentEnrollment() {\r\n        const data = {\r\n            UserSchool_Session: Cookies.get('schoolSession'),\r\n            passHowManyDaysStudentCreated: \"30\"\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getAllWithdrawStudentsCurrentActiveYearBySchool\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getWithdrawStudent() {\r\n        const data = {\r\n            UserSchool_Session: Cookies.get('schoolSession'),\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getAllWithdrawStudentsCurrentActiveYearBySchool\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getTransferStudent() {\r\n        const data = {\r\n            UserSchool_Session: Cookies.get('schoolSession'),\r\n            passHowManyDaysStudentTransffered: \"30\"\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getAllTransferredStudentsBySchoolDay\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getAcademicYear() {\r\n        const data = {};\r\n        const response = await this.callWebService(\"/controller/Course.asmx/getAcademicYear\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getIntakeYear() {\r\n        const data = {};\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getIntakeYear\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getUserList() {\r\n        const data = {};\r\n        const response = await this.callWebService(\"/controller/UserMagt.asmx/getUserList\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n// SAMPLE 2 using axios\r\n    async PostToGetDataWEIRD() {\r\n        const options = {\r\n            countryID: \"\",\r\n        };\r\n\r\n        let response;\r\n        try {\r\n            response = await axios.post(\"http://local.emsv2/controller/Students.asmx/getCountryList?countryID=\", options);\r\n        } catch (err) {\r\n            console.log(err);\r\n            throw ERROR_SERVER_UNREACHABLE;\r\n        }\r\n        return response.data;\r\n    }\r\n\r\n// POST SAMPLE\r\n    async createStudent() {\r\n        const headers = new Headers();\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n        const request = {\r\n            method: \"POST\",\r\n            headers: headers,\r\n        };\r\n        const requestBody = {\r\n            countryID: \"\",\r\n        };\r\n        request.body = JSON.stringify(rquestBody);\r\n\r\n        let response;\r\n        try {\r\n            response = await fetch(\"URL\", request);\r\n        } catch (err) {\r\n            console.log(err);\r\n            getApproverMaster;\r\n            throw ERROR_SERVER_UNREACHABLE;\r\n        }\r\n        return await parseResponseAndHandleErrors(response);\r\n    }\r\n\r\n    async getAttendanceClass() {\r\n        const data = {};\r\n        const response = await this.callWebService(\"/controller/Attendance.asmx/getAttendanceClass\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async LoadAttendanceList(classValue) {\r\n\r\n        const data = {\r\n            classValue: classValue,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Attendance.asmx/LoadAttendanceList\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async updateAttendanceList(jsonString) {\r\n        const data = {\r\n            jsonString: jsonString,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Attendance.asmx/updateAttendanceList\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    //#region Gallery\r\n    async getFiles(galFolderID, startRowNo, endRowNo) {\r\n        const data = {\r\n            galFolderID: galFolderID,\r\n            startRowNo: startRowNo,\r\n            endRowNo: endRowNo,\r\n            fileRetrieveMode: \"File\"\r\n        };\r\n\r\n        const response = await this.callWebService(\"/controller/Gallery.asmx/getFile\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getFolders(galFolderID) {\r\n        const data = {\r\n            galFolderID: galFolderID,\r\n            fileRetrieveMode: \"Folder\"\r\n        };\r\n\r\n        const response = await this.callWebService(\"/controller/Gallery.asmx/getFile\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async downloadFile(galID) {\r\n        const data = {\r\n            galID: galID\r\n        };\r\n\r\n        const response = await this.callWebService(\"/controller/Gallery.asmx/downloadFile\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async saveFile(files, galFolderID) {\r\n        const formData = new FormData();\r\n\r\n        formData.append('fileType', \"File\");\r\n        formData.append('galFolderID', galFolderID);\r\n        formData.append('token', Cookies.get('authToken'));\r\n        formData.append('UserID_Session', Cookies.get('userIDSession'));\r\n        formData.append('folderName', \"\");\r\n\r\n        if (files && files.length > 1) {\r\n            for (let i = 0; i < files.length; i++) {\r\n                formData.append(\"files\" + i, files[i]);\r\n                console.log(files[i]);\r\n            }\r\n        } else if (files) {\r\n            formData.append(\"files\", files[0]);\r\n        }\r\n\r\n        const request = {\r\n            url: `${API_HOST}/controller/Gallery.asmx/saveFile`,\r\n            cache: false,\r\n            type: 'POST',\r\n            data: formData,\r\n            enctype: 'multipart/form-data',\r\n            processData: false,\r\n            contentType: false,\r\n            async: false,\r\n            json: false,\r\n            success: function (response) {\r\n                return response;\r\n            }\r\n        };\r\n\r\n        let response = await jQuery.ajax(request);\r\n        if (typeof response === \"string\") {\r\n            response = JSON.parse(response);\r\n        }\r\n        return response;\r\n    }\r\n\r\n    async createFolder(galFolderID, folderName) {\r\n        const formData = new FormData();\r\n\r\n        formData.append('fileType', \"Folder\");\r\n        formData.append('galFolderID', galFolderID);\r\n        formData.append('token', Cookies.get('authToken'));\r\n        formData.append('UserID_Session', Cookies.get('userIDSession'));\r\n        formData.append('folderName', folderName);\r\n        formData.append(\"files\", null);\r\n\r\n        const request = {\r\n            url: `${API_HOST}/controller/Gallery.asmx/saveFile`,\r\n            cache: false,\r\n            type: 'POST',\r\n            data: formData,\r\n            enctype: 'multipart/form-data',\r\n            processData: false,\r\n            contentType: false,\r\n            async: false,\r\n            json: false,\r\n            success: function (response) {\r\n                return response;\r\n            }\r\n        };\r\n\r\n        let response = await jQuery.ajax(request);\r\n        if (typeof response === \"string\") {\r\n            response = JSON.parse(response);\r\n        }\r\n        return response;\r\n    }\r\n\r\n    async removeFile(galID) {\r\n        const data = {\r\n            galID: galID,\r\n            updateFileMode: \"Delete\"\r\n        };\r\n\r\n        const response = await this.callWebService(\"/controller/Gallery.asmx/updateFile\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async renameFile(galID, folderRename) {\r\n        const data = {\r\n            galID: galID,\r\n            folderRename: folderRename,\r\n            updateFileMode: \"Rename\"\r\n        };\r\n\r\n        const response = await this.callWebService(\"/controller/Gallery.asmx/updateFile\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async moveFile(galID, galFolderID) {\r\n        const data = {\r\n            galID: galID,\r\n            galFolderID: galFolderID,\r\n            updateFileMode: \"Move\"\r\n        };\r\n\r\n        const response = await this.callWebService(\"/controller/Gallery.asmx/updateFile\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getWhitelist() {\r\n        const data = {};\r\n        const response = await this.callWebService(\"/controller/Gallery.asmx/getWhitelistFileExt\", data, \"POST\");\r\n\r\n        return response;\r\n    }\r\n\r\n//#endregion\r\n\r\n    /*#region Portfolio*/\r\n    async softDeletePortfolio(portfolioID) {\r\n        const data = {\r\n            jsonStringPortfolioID: portfolioID,\r\n            actionStatus: \"VOID\"\r\n        };\r\n\r\n        const response = await this.callWebService(\"/controller/Portfolio.asmx/updatePortfolio\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getPortfolioListByStudentID(str_StudentID) {\r\n        const data = {studentID: str_StudentID};\r\n\r\n        return await this.callWebService(\"/controller/Portfolio.asmx/getPortfolioList\", data, \"POST\");\r\n    }\r\n\r\n    async getPostByPortfolioID(str_PortfolioID) {\r\n        const data = {portfolioID: str_PortfolioID};\r\n\r\n        return await this.callWebService(\"/controller/Portfolio.asmx/getPortfolioPostingPost\", data, \"POST\");\r\n    }\r\n\r\n    async getPortfolioHeaderDetails(portfolioID) {\r\n        const data = {portfolioID: portfolioID};\r\n\r\n        return await this.callWebService(\"/controller/Portfolio.asmx/getPortfolioHeaderDetails\", data, \"POST\");\r\n    }\r\n\r\n    async getStudentPostByType(str_StudentID, str_PostType, numberOfPost, lastPostID) {\r\n        const data = {\r\n            studentID: str_StudentID,\r\n            postType: str_PostType,\r\n            numberOfPost: numberOfPost,\r\n            lastPostID: lastPostID\r\n        };\r\n        return await this.callWebService(\"/controller/Posting.asmx/getPostStudent\", data, \"POST\");\r\n    }\r\n\r\n    async savePortfolio(str_PortfolioDesc, str_StudentID, PortfolioLinkPortfolioID, portfolioTitle, portfolioEnduringThemes, portfolioResearchQuestion, jsonStringPostDetails) {\r\n        const data = {\r\n            portfolioDesc: str_PortfolioDesc,\r\n            studentID: str_StudentID,\r\n            PortfolioLinkPortfolioID: PortfolioLinkPortfolioID,\r\n            portfolioTitle: portfolioTitle,\r\n            portfolioEnduringThemes: portfolioEnduringThemes,\r\n            portfolioResearchQuestion: portfolioResearchQuestion,\r\n            jsonStringPostDetails: jsonStringPostDetails\r\n        };\r\n\r\n        return await this.callWebService(\"/controller/Portfolio.asmx/savePortfolio\", data, \"POST\");\r\n    }\r\n\r\n    async approvePortfolio(portfolioID, actionStatus, portfolioEnduringThemesComment, portfolioResearchQuestionComment, jsonStringCommentValue) {\r\n        const data = {\r\n            portfolioID: portfolioID,\r\n            actionStatus: actionStatus,\r\n            portfolioEnduringThemesComment: portfolioEnduringThemesComment,\r\n            portfolioResearchQuestionComment: portfolioResearchQuestionComment,\r\n            jsonStringCommentValue: jsonStringCommentValue,\r\n        };\r\n\r\n        let result = await this.callWebService(\"/controller/Portfolio.asmx/approvePortfolio\", data, \"POST\");\r\n        return result;\r\n    }\r\n\r\n    async getApproverComment(itemID) {\r\n        const data = {\r\n            itemID: itemID,\r\n        };\r\n\r\n        let result = await this.callWebService(\"/controller/Approver.asmx/getApproverComment\", data, \"POST\");\r\n        return result;\r\n    }\r\n\r\n    /*#endregion*/\r\n\r\n    /*#region Promotion*/\r\n    async getPromotionAcademicYear() {\r\n        const data = {};\r\n\r\n        const response = await this.callWebService(\"/controller/Operations.asmx/getMassPromotionsAcademicYear\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getPromotionLevel() {\r\n        const data = {};\r\n\r\n        const response = await this.callWebService(\"/controller/Operations.asmx/getMassPromotionsLevel\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getClassByLevelClassID(str_LevelID, str_ClassID) {\r\n        const data = {levelID: str_LevelID, classID: str_ClassID};\r\n\r\n        const response = await this.callWebService(\"/controller/Operations.asmx/getMassPromotionsStudentListByClassLevel\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getClassByAcademicYear(str_AcademicYearID) {\r\n        const data = {academicYearID: str_AcademicYearID};\r\n\r\n        const response = await this.callWebService(\"/controller/Operations.asmx/getMassPromotionsClassLevelByAcademicYear\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getNextLevel(str_LevelID) {\r\n        const data = {levelID: str_LevelID};\r\n\r\n        const response = await this.callWebService(\"/controller/Operations.asmx/getMassPromotionsNextLevel\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    // studentIDArray (student id split by comma \",\") & levelID & academicYearID & classID\r\n    async saveStudentPromotions(arrstr_StudentID, str_AcademicYearID, str_LevelID, str_ClassID) {\r\n        const data = {\r\n            studentIDArray: arrstr_StudentID,\r\n            academicYearID: str_AcademicYearID,\r\n            levelID: str_LevelID,\r\n            classID: str_ClassID\r\n        };\r\n\r\n        const response = await this.callWebService(\"/controller/Operations.asmx/saveMassPromotions\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getAllActiveStudentsBySchool() {\r\n        const data = {};\r\n\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getAllActiveStudentsBySchool\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    /*#endregion*/\r\n\r\n    /*#region Report*/\r\n\r\n    async getReportListByStudentID(str_StudentID) {\r\n        const data = {studentID: str_StudentID};\r\n\r\n        return await this.callWebService(\"/controller/Report.asmx/getReportList\", data, \"POST\");\r\n    }\r\n\r\n    async saveReport(str_ReportDesc, str_StudentID, arrstr_PostID, ReportLinkReportID) {\r\n        const data = {\r\n            reportDesc: str_ReportDesc,\r\n            studentID: str_StudentID,\r\n            jsonStringPostID: arrstr_PostID,\r\n            ReportLinkReportID: ReportLinkReportID,\r\n        };\r\n\r\n        return await this.callWebService(\"/controller/Report.asmx/saveReport\", data, \"POST\");\r\n    }\r\n\r\n    async getPostByReportID(str_ReportID) {\r\n        const data = {reportID: str_ReportID};\r\n\r\n        return await this.callWebService(\"/controller/Report.asmx/getReport\", data, \"POST\");\r\n    }\r\n\r\n    async softDeleteReport(arrstr_ReportID) {\r\n        const data = {\r\n            jsonStringReportID: arrstr_ReportID,\r\n            actionStatus: \"VOID\"\r\n        };\r\n\r\n        const response = await this.callWebService(\"/controller/Report.asmx/updateReport\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    /*#endregion*/\r\n\r\n    /*#region Reactions*/\r\n    async getPostReaction(relatedPostID) {\r\n        const data = {relatedPostID: relatedPostID};\r\n\r\n        return await this.callWebService(\"/controller/Posting.asmx/getPostReaction\", data, \"POST\");\r\n    }\r\n\r\n    async savePostReaction(relatedPostID, postReaction, postType) {\r\n        const data = {\r\n            relatedPostID: relatedPostID,\r\n            postReaction: postReaction,\r\n            postType: postType,\r\n        };\r\n\r\n        return await this.callWebService(\"/controller/Posting.asmx/savePostReaction\", data, \"POST\");\r\n    }\r\n\r\n    async updatePostReaction(relatedPostID, actionMode) {\r\n        const data = {\r\n            relatedPostID: relatedPostID,\r\n            actionMode: actionMode,\r\n        };\r\n\r\n        return await this.callWebService(\"/controller/Posting.asmx/updatePostReaction\", data, \"POST\");\r\n    }\r\n\r\n    async getPostByPostID(jsonStringPostID) {\r\n        const data = {\r\n            jsonStringPostID: jsonStringPostID,\r\n        };\r\n\r\n        return await this.callWebService(\"/controller/Posting.asmx/getPostByPostID\", data, \"POST\");\r\n    }\r\n\r\n    async getPostByPostIDByStatus(jsonStringPostID, postStatus) {\r\n        const data = {\r\n            jsonStringPostID: jsonStringPostID,\r\n            postStatus: postStatus,\r\n        };\r\n\r\n        return await this.callWebService(\"/controller/Posting.asmx/getPostByPostID\", data, \"POST\");\r\n    }\r\n\r\n    /*#endregion*/\r\n\r\n    async getAllActiveStudentsByClass(classID) {\r\n        const data = {classID: classID};\r\n\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getAllActiveStudentsByClassSchool\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getDailyRoutineByStudentID(studentID) {\r\n        const data = {studentID: studentID};\r\n\r\n        const response = await this.callWebService(\"/controller/Daily_Routine.asmx/getKgm_DailyRoutine\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async updateDailyRoutine(btnUpdateObject) {\r\n        const data = {\r\n            studentID: btnUpdateObject.studentID,\r\n            DrID: btnUpdateObject.drID,\r\n            drRemark: btnUpdateObject.drRemark\r\n        };\r\n        const response = await this.callWebService(\"/controller/Daily_Routine.asmx/updateDailyRoutine\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async addDailyRoutine(btnAddObject) {\r\n        const data = {\r\n            studentID: btnAddObject.studentID,\r\n            drRemark: btnAddObject.DrRemark,\r\n            drStartTime: btnAddObject.DrStartTime,\r\n            drEndTime: btnAddObject.DrEndTime,\r\n            drReferenceType: btnAddObject.DrReferenceType\r\n        };\r\n\r\n        const response = await this.callWebService(\"/controller/Daily_Routine.asmx/addDailyRoutine\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async deleteDailyRoutine(btnDelObject) {\r\n        const data = {\r\n            studentID: btnDelObject.DrStudentID,\r\n            DrID: btnDelObject.drID\r\n        };\r\n        const response = await this.callWebService(\"/controller/Daily_Routine.asmx/deleteDailyRoutine\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async deString(inputString) {\r\n        const data = {\r\n            inputString: inputString\r\n        };\r\n        const response = await this.callWebService(\"/controller/Login.asmx/deString\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getStaffProfileImage() {\r\n        const data = {};\r\n        const response = await this.callWebService(\"/controller/User.asmx/getStaffProfileImage\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async saveStaffProfileImage(files) {\r\n        const data = new FormData();\r\n        data.append('token', Cookies.get('authToken'));\r\n        data.append('UserSchool_Session', Cookies.get('schoolSession'));\r\n        data.append('UserID_Session', Cookies.get('userIDSession'));\r\n        data.append('UserUniversity_Session', Cookies.get('userUniversitySession'));\r\n\r\n        if (files && files.length > 1) {\r\n            for (let key in files) {\r\n                //console.log(key);\r\n                if (files.hasOwnProperty(key)) {\r\n                    // console.log(files[key]);\r\n                    if (key > 0) {\r\n                        data.append(`upload_${key}`, files[key]);\r\n                    } else {\r\n                        data.append(\"upload\", files[key]);\r\n                    }\r\n                }\r\n            }\r\n        } else if (files) {\r\n            data.append(\"upload\", files[0]);\r\n        }\r\n\r\n        const request = {\r\n            url: `${API_HOST}/controller/User.asmx/saveStaffProfileImage`,\r\n            cache: false,\r\n            type: 'POST',\r\n            data: data,\r\n            enctype: 'multipart/form-data',\r\n            processData: false,\r\n            contentType: false,\r\n            async: false,\r\n            json: false,\r\n            success: function (response) {\r\n                return response;\r\n            }\r\n        };\r\n\r\n        let response = await jQuery.ajax(request);\r\n        if (typeof response === \"string\") {\r\n            response = JSON.parse(response);\r\n        }\r\n        return response;\r\n    }\r\n\r\n    async resetPasswordByPassword(userCurrentPassword, userNewPassword) {\r\n        const data = {\r\n            userCurrentPassword: userCurrentPassword,\r\n            userNewPassword: userNewPassword\r\n        };\r\n        const response = await this.callWebService(\"/controller/Login.asmx/resetPasswordByPassword\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getAllActiveSchool(schoolCountry, universityCode) {\r\n        const data = {\r\n            schoolCountry: schoolCountry,\r\n            universityCode: universityCode,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Operations.asmx/getAllActiveSchool\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async saveTransferSchool(studentID, toTransferSchoolID, remark, effectiveDate) {\r\n        const data = {\r\n            studentID: studentID,\r\n            toTransferSchoolID: toTransferSchoolID,\r\n            remark: remark,\r\n            effectiveDate: effectiveDate\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/saveTransferSchool\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getPendingAcceptTransferSchoolBySchool() {\r\n        const data = {};\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getPendingAcceptTransferSchoolBySchool\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async saveStudentWithdraw(obj) {\r\n        const data = {\r\n            obj: obj\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/saveStudentWithdraw\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getClassType() {\r\n        const data = {};\r\n        const response = await this.callWebService(\"/controller/Class.asmx/getClassType\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getTeacherListBySchool() {\r\n        const data = {};\r\n        const response = await this.callWebService(\"/controller/User.asmx/getTeacherListBySchool\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async saveClass(levelID, semesterID, batch, className, maxStudents, classTeacher, saveType) {\r\n        const data = {\r\n            levelID: levelID,\r\n            semesterID: semesterID,\r\n            batch: batch,\r\n            className: className,\r\n            maxStudents: maxStudents,\r\n            classTeacher: classTeacher,\r\n            saveType: saveType,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Class.asmx/saveClass\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getClass(academicYear) {\r\n        const data = {\r\n            academicYear: academicYear,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Course.asmx/getClass\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getParentClassList(academicYear, modeType) {\r\n        const data = {\r\n            academicYear: academicYear,\r\n            modeType: modeType,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Course.asmx/getClass\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async updateClass(classStatus, newClassName, maxStudents, currentClassName, levelID, semesterID) {\r\n        const data = {\r\n            classStatus: classStatus,\r\n            newClassName: newClassName,\r\n            maxStudents: maxStudents,\r\n            currentClassName: currentClassName,\r\n            levelID: levelID,\r\n            semesterID: semesterID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Class.asmx/updateClass\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async updateClassProgramme(classID, classStatus) {\r\n        const data = {\r\n            classID: classID,\r\n            classStatus: classStatus,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Class.asmx/updateClassProgramme\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getActiveStudentsByLevelSchool(levelID, classID, semID) {\r\n        const data = {\r\n            levelID: levelID,\r\n            classID: classID,\r\n            semID: semID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getActiveStudentsByLevelSchool\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async saveStudentGraduation(obj) {\r\n        const data = {\r\n            obj: obj\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/saveStudentGraduation\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async saveStudentDocument(files, studentID, fileDescription, uploadMode) {\r\n        const data = new FormData();\r\n        data.append('token', Cookies.get('authToken'));\r\n        data.append('UserSchool_Session', Cookies.get('schoolSession'));\r\n        data.append('UserID_Session', Cookies.get('userIDSession'));\r\n        data.append('UserUniversity_Session', Cookies.get('userUniversitySession'));\r\n\r\n        if (files && files.length > 1) {\r\n            for (let key in files) {\r\n                //console.log(key);\r\n                if (files.hasOwnProperty(key)) {\r\n                    // console.log(files[key]);\r\n                    if (key > 0) {\r\n                        data.append(`upload_${key}`, files[key]);\r\n                    } else {\r\n                        data.append(\"upload\", files[key]);\r\n                    }\r\n                }\r\n            }\r\n        } else if (files) {\r\n            data.append(\"upload\", files[0]);\r\n        }\r\n\r\n        data.append('studentID', studentID);\r\n        data.append('fileDescription', fileDescription);\r\n        data.append('uploadMode', uploadMode);\r\n\r\n        const request = {\r\n            url: `${API_HOST}/controller/Students.asmx/saveStudentDocument`,\r\n            cache: false,\r\n            type: 'POST',\r\n            data: data,\r\n            enctype: 'multipart/form-data',\r\n            processData: false,\r\n            contentType: false,\r\n            async: false,\r\n            json: false,\r\n            success: function (response) {\r\n                return response;\r\n            }\r\n        };\r\n\r\n        let response = await jQuery.ajax(request);\r\n        if (typeof response === \"string\") {\r\n            response = JSON.parse(response);\r\n        }\r\n        return response;\r\n    }\r\n\r\n    async getStudentDocument(studentID, docuType) {\r\n        const data = {\r\n            studentID: studentID,\r\n            docuType: docuType,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getStudentDocument\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async updateStudentDocument(studentFilesID, actionStatus) {\r\n        const data = {\r\n            studentFilesID: studentFilesID,\r\n            actionStatus: actionStatus,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/updateStudentDocument\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getSchoolInfoBySchoolID(schoolID) {\r\n        const data = {\r\n            schoolID: schoolID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/User.asmx/getSchoolInfoBySchoolID\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getStudentAllergies(studentID, allergiesType) {\r\n        const data = {\r\n            studentID: studentID,\r\n            allergiesType: allergiesType,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getStudentAllergies\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getStudentPaymentList(studentCourseID) {\r\n        const data = {\r\n            studentCourseID: studentCourseID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Billing.asmx/getStudentPaymentList\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getItemTransDetailsList(SPDID) {\r\n        const data = {\r\n            SPDID: SPDID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Billing.asmx/getItemTransDetailsList\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async saveEvent(obj, participantObj) {\r\n        const data = {\r\n            obj: obj,\r\n            participantObj: participantObj,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Event.asmx/saveEvent\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getEvent(eventID) {\r\n        const data = {\r\n            eventID: eventID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Event.asmx/getEvent\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getEventParticipant(eventParticipantID) {\r\n        const data = {\r\n            eventParticipantID: eventParticipantID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Event.asmx/getEventParticipant\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getEventParticipantByEventID(eventID) {\r\n        const data = {\r\n            eventID: eventID,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Event.asmx/getEventParticipant\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async updateEvent(obj, participantObj) {\r\n        const data = {\r\n            obj: obj,\r\n            participantObj: participantObj,\r\n        };\r\n        const response = await this.callWebService(\"/controller/Event.asmx/updateEvent\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getStudentGraduationListByClassLevel(str_LevelID, str_ClassID) {\r\n        const data = {levelID: str_LevelID, classID: str_ClassID};\r\n\r\n        const response = await this.callWebService(\"/controller/Students.asmx/getStudentGraduationListByClassLevel\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getClassStudentList(academicYearID, levelID, className) {\r\n        const data = {\r\n            academicYearID: academicYearID,\r\n            levelID: levelID,\r\n            className: className\r\n        };\r\n\r\n        const response = await this.callWebService(\"/controller/Course.asmx/getClassStudentList\", data, \"POST\");\r\n        return response;\r\n    }\r\n\r\n    async getStudentForecastByBranchMonthly() {\r\n        try {\r\n            const data={}\r\n            const response = await this.callWebService(\"/controller/Students.asmx/getStudentForecastByBranch_Monthly\", data, \"POST\");\r\n            return response;\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n    }\r\n\r\n    async getStudentMovementDetailNewEnroll() {\r\n        try {\r\n            const data={}\r\n            const response = await this.callWebService(\"/controller/Students.asmx/getStudentMovementDetail_NewEnroll\", data, \"POST\");\r\n            return response;\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n\r\n    }\r\n}\r\n\r\n"]}]}