{"remainingRequest":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\StudentPaymentPlan.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\StudentPaymentPlan.vue","mtime":1556536416378},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1553612671158},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1553612666995}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\jessi\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DataSource from \"../data/datasource\";\nexport default {\n  name: \"StudentPaymentPlan\",\n  data: function data() {\n    return {\n      studentPaymentListInt: [],\n      studentPaymentList: [{\n        prop: \"SPPD_PayerName\",\n        label: \"Name\"\n      }, {\n        prop: \"SPPD_Status\",\n        label: \"Invoice Status\"\n      }, {\n        prop: \"SPPD_PaymentDates\",\n        label: \"Payment Date\"\n      }, {\n        prop: \"SPPD_PaymentAmount\",\n        label: \"Amount\"\n      }, {\n        prop: \"totalIncludeGst\",\n        label: \"Incl. GST\"\n      }, {\n        prop: \"RecTotal\",\n        label: \"Paid Amount\" // }, {\n        //     prop: \"InvoiceDate\",\n        //     label: \"Inv Date\"\n        // }, {\n        //     prop: \"PaymentItemType\",\n        //     label: \"SPPD_PaymentItemType\"\n        // }, {\n        //     prop: \"Status\",\n        //     label: \"SPPD_Status\"\n\n      }],\n      itemTransDetailsInt: [],\n      itemTransDetailsList: [{\n        prop: \"DocumentDate\",\n        label: \"Date\"\n      }, {\n        prop: \"DocumentType\",\n        label: \"Transaction Type\"\n      }, {\n        prop: \"DocumentNo\",\n        label: \"Document Number\"\n      }, {\n        prop: \"DocumentStatus\",\n        label: \"Document Status\"\n      }, {\n        prop: \"TotalIncGst\",\n        label: \"Total (Incl. GST)\"\n      }, {\n        prop: \"DocumentCreatedBy\",\n        label: \"Created By\"\n      }],\n      inputPaymentDueDate: '',\n      inputReceiptDate: '',\n      paymentModeList: [],\n      multipleSelection: []\n    };\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.getStudentPaymentList();\n              this.BindPaymentModeDropdown();\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    changeSelection: function () {\n      var _changeSelection = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(val) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.multipleSelection = val;\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function changeSelection(_x) {\n        return _changeSelection.apply(this, arguments);\n      }\n\n      return changeSelection;\n    }(),\n    Test: function Test() {\n      console.log(this.multipleSelection);\n    },\n    getStudentPaymentList: function () {\n      var _getStudentPaymentList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.$vs.loading();\n                _context4.prev = 1;\n                _context4.next = 4;\n                return DataSource.shared.getStudentPaymentList('SCR2019190104');\n\n              case 4:\n                response = _context4.sent;\n\n                if (!response) {\n                  _context4.next = 16;\n                  break;\n                }\n\n                _context4.t0 = response.code;\n                _context4.next = _context4.t0 === \"2\" ? 9 : _context4.t0 === \"88\" ? 11 : _context4.t0 === \"99\" ? 13 : 15;\n                break;\n\n              case 9:\n                this.$notify.error({\n                  title: 'No Record Found',\n                  message: 'No Student Payment Record'\n                });\n                return _context4.abrupt(\"break\", 16);\n\n              case 11:\n                this.$router.push('/');\n                return _context4.abrupt(\"break\", 16);\n\n              case 13:\n                this.$notify.error({\n                  title: 'Error',\n                  message: 'Error'\n                });\n                return _context4.abrupt(\"break\", 16);\n\n              case 15:\n                this.studentPaymentListInt = response.Table;\n\n              case 16:\n                _context4.next = 21;\n                break;\n\n              case 18:\n                _context4.prev = 18;\n                _context4.t1 = _context4[\"catch\"](1);\n                this.results = _context4.t1;\n\n              case 21:\n                this.$vs.loading.close();\n\n              case 22:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[1, 18]]);\n      }));\n\n      function getStudentPaymentList() {\n        return _getStudentPaymentList.apply(this, arguments);\n      }\n\n      return getStudentPaymentList;\n    }(),\n    retrieveItemTransactionDetails: function retrieveItemTransactionDetails(row) {\n      var _this = this;\n\n      return [{\n        name: 'View Trans',\n        handler: function handler(_) {\n          _this.viewSPDID = row.PK_SPD_ID;\n          _this.viewSPPDPayerName = row.SPPD_PayerName;\n\n          _this.getItemTransDetailsList();\n        }\n      }];\n    },\n    getItemTransDetailsList: function () {\n      var _getItemTransDetailsList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                this.$vs.loading();\n                _context5.prev = 1;\n                _context5.next = 4;\n                return DataSource.shared.getItemTransDetailsList(this.viewSPDID);\n\n              case 4:\n                response = _context5.sent;\n\n                if (!response) {\n                  _context5.next = 17;\n                  break;\n                }\n\n                _context5.t0 = response.code;\n                _context5.next = _context5.t0 === \"2\" ? 9 : _context5.t0 === \"88\" ? 11 : _context5.t0 === \"99\" ? 13 : 15;\n                break;\n\n              case 9:\n                this.$notify.error({\n                  title: 'No Record Found',\n                  message: 'No Invoice Generated'\n                });\n                return _context5.abrupt(\"break\", 17);\n\n              case 11:\n                this.$router.push('/');\n                return _context5.abrupt(\"break\", 17);\n\n              case 13:\n                this.$notify.error({\n                  title: 'Error',\n                  message: 'Error'\n                });\n                return _context5.abrupt(\"break\", 17);\n\n              case 15:\n                this.itemTransDetailsInt = response.Table;\n                this.$refs.viewTransactionShowModal.show();\n\n              case 17:\n                _context5.next = 22;\n                break;\n\n              case 19:\n                _context5.prev = 19;\n                _context5.t1 = _context5[\"catch\"](1);\n                this.results = _context5.t1;\n\n              case 22:\n                this.$vs.loading.close();\n\n              case 23:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[1, 19]]);\n      }));\n\n      function getItemTransDetailsList() {\n        return _getItemTransDetailsList.apply(this, arguments);\n      }\n\n      return getItemTransDetailsList;\n    }(),\n    // todo:validation preview invoice\n    ValidationPreviewInvoice: function () {\n      var _ValidationPreviewInvoice = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6() {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                this.$v.$touch();\n\n                if (!this.$v.$error) {\n                  _context6.next = 5;\n                  break;\n                }\n\n                alert('Please select at least 1 item');\n                return _context6.abrupt(\"return\");\n\n              case 5:\n                _context6.next = 10;\n                break;\n\n              case 7:\n                _context6.prev = 7;\n                _context6.t0 = _context6[\"catch\"](0);\n                this.results = _context6.t0;\n\n              case 10:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[0, 7]]);\n      }));\n\n      function ValidationPreviewInvoice() {\n        return _ValidationPreviewInvoice.apply(this, arguments);\n      }\n\n      return ValidationPreviewInvoice;\n    }(),\n    // todo: validation generate invoice\n    ValidationGenerateInvoice: function () {\n      var _ValidationGenerateInvoice = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7() {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.prev = 0;\n                this.$v.$touch();\n\n                if (!this.$v.$error) {\n                  _context7.next = 5;\n                  break;\n                }\n\n                alert('Please select at least 1 item');\n                return _context7.abrupt(\"return\");\n\n              case 5:\n                _context7.next = 10;\n                break;\n\n              case 7:\n                _context7.prev = 7;\n                _context7.t0 = _context7[\"catch\"](0);\n                this.results = _context7.t0;\n\n              case 10:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[0, 7]]);\n      }));\n\n      function ValidationGenerateInvoice() {\n        return _ValidationGenerateInvoice.apply(this, arguments);\n      }\n\n      return ValidationGenerateInvoice;\n    }(),\n    BindPaymentModeDropdown: function () {\n      var _BindPaymentModeDropdown = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8() {\n        var _this2 = this;\n\n        var jsonString, response;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.prev = 0;\n                jsonString = '\"Pay Type\":\"Pay Type\"';\n                jsonString = \"{\" + jsonString + \"}\";\n                _context8.next = 5;\n                return DataSource.shared.getStudentDropDownList(jsonString);\n\n              case 5:\n                response = _context8.sent;\n\n                if (response) {\n                  if (response.code === '88') {\n                    window.location.replace('/');\n                  } else {\n                    this.paymentModeListResponse = response.Table;\n                    this.paymentModeListResponse.forEach(function (m) {\n                      if (m.OGPname.trim() === 'Pay Type') {\n                        _this2.paymentModeList.push(m);\n                      }\n                    });\n                  }\n                }\n\n                _context8.next = 12;\n                break;\n\n              case 9:\n                _context8.prev = 9;\n                _context8.t0 = _context8[\"catch\"](0);\n                this.results = _context8.t0;\n\n              case 12:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[0, 9]]);\n      }));\n\n      function BindPaymentModeDropdown() {\n        return _BindPaymentModeDropdown.apply(this, arguments);\n      }\n\n      return BindPaymentModeDropdown;\n    }()\n  }\n};",{"version":3,"sources":["StudentPaymentPlan.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div id=\"studentpaymentplan\">\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class= \"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                    <h5 class=\"text-left\">Student Payment List</h5>\r\n                    <div v-if=\"studentPaymentListInt.length>0\" class=\"datatable_group\">\r\n                        <data-tables :data=\"studentPaymentListInt\" @selection-change=\"changeSelection\">\r\n                            <el-table-column v-for=\"studentPaymentItem in studentPaymentList\" :prop=\"studentPaymentItem.prop\"\r\n                                             :label=\"studentPaymentItem.label\" :key=\"studentPaymentItem.prop\"\r\n                                             sortable=\"custom\">\r\n                            </el-table-column>\r\n                            <el-table-column label=\"Action\" min-width=\"100px\">\r\n                                <template slot-scope=\"scope\">\r\n                                    <el-button v-for=\"itemDetails in retrieveItemTransactionDetails(scope.row)\"\r\n                                               :key=\"itemDetails.name\" type=\"primary\"\r\n                                               @click=\"itemDetails.handler\">\r\n                                        {{itemDetails.name}}\r\n                                    </el-button>\r\n                                </template>\r\n                            </el-table-column>\r\n                            <el-table-column type=\"selection\" width=\"55\" :reserve-selection=\"true\">\r\n                            </el-table-column>\r\n                        </data-tables>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class= \"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                    <h5 class=\"text-left\">Batch Payment</h5>\r\n                    <div class=\"row form-group__wrapper\">\r\n                        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                            <h5 class=\"text-left\">INVOICING</h5>\r\n                        </div>\r\n                        <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                            <label>Payment Due Date</label>\r\n                            <div class=\"date\">\r\n                                <el-date-picker v-model=\"inputPaymentDueDate\" format=\"dd/MM/yyyy\"\r\n                                                value-format=\"dd/MM/yyyy\" type=\"date\"\r\n                                                placeholder=\"Pick a day\"></el-date-picker>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                            <label>Letterhead (Hong Kong only):</label>\r\n                            <label>\r\n                                <input type=\"checkbox\" class=\"form-control\" ref=\"cbPrintMonthlyBreakdown\">\r\n                                Print monthly breakdown\r\n                                <span>\r\n                                    <span>\r\n                                        <svg class=\"checkmark\" viewBox=\"0 0 24 24\"><path class=\"checkmark-path\"\r\n                                                                                         fill=\"none\" stroke=\"white\"\r\n                                                                                         d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"></path></svg>\r\n                                    </span>\r\n                                </span>\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"buttonArea\">\r\n                            <div class=\"text-center mg-b-pro-edt custom-pro-edt-ds\">\r\n                                <button v-on:click=\"ValidationPreviewInvoice\" type=\"button\"\r\n                                        class=\"btn btn-primary waves-effect waves-light m-r-10\">Preview Invoice\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <!--<div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">-->\r\n                            <!--<div >-->\r\n                        <div class=\"buttonArea\">\r\n                            <div class=\"text-center mg-b-pro-edt custom-pro-edt-ds\">\r\n                                <button v-on:click=\"ValidationGenerateInvoice\" type=\"button\"\r\n                                        class=\"btn btn-primary waves-effect waves-light m-r-10\">Generate Invoice\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                       <div class=\"row form-group__wrapper\"></div>\r\n\r\n                        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 \">\r\n                            <h5 class=\"text-left\">RECEIPTS</h5>\r\n                        </div>\r\n                        <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                            <label>Payment Mode</label>\r\n                            <select v-model=\"ddlPaymentMode\"\r\n                                    class=\"form-control pro-edt-select form-control-primary\" >\r\n                                <option v-for=\"item in paymentModeList\" v-bind:value=\"item.OPTvalue.trim()\">{{\r\n                                    item.OPTvalue.trim() }}\r\n                                </option>\r\n                            </select>\r\n                            <!--<div class=\"requiredFieldsMsg\" v-if=\"$v.ddlPaymentMode.$error\">Payment Mode-->\r\n                                <!--Require-->\r\n                            <!--</div>-->\r\n                        </div>\r\n                        <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                            <label>Cheque/DD No & Bank Name</label>\r\n                            <input type=\"text\" class=\"form-control\" v-model=\"inputChequeNoBankName\">\r\n                        </div>\r\n                        <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                            <label>Receipt Date</label>\r\n                            <div class=\"date\">\r\n                                <el-date-picker v-model=\"inputReceiptDate\" format=\"dd/MM/yyyy\"\r\n                                                value-format=\"dd/MM/yyyy\" type=\"date\"\r\n                                                placeholder=\"Pick a day\"></el-date-picker>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                            <label>Remarks</label>\r\n                            <input type=\"text\" class=\"form-control\" v-model=\"inputRemarks\">\r\n                        </div>\r\n                        <div class=\"col-lg-3 col-md-3 col-sm-3 col-xs-12\">\r\n                            <label>\r\n                                <input type=\"checkbox\" class=\"form-control\" ref=\"cbUnderpayment\">\r\n                                Underpayment\r\n                                <span>\r\n                                    <span>\r\n                                        <svg class=\"checkmark\" viewBox=\"0 0 24 24\"><path class=\"checkmark-path\"\r\n                                                                                         fill=\"none\" stroke=\"white\"\r\n                                                                                         d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"></path></svg>\r\n                                    </span>\r\n                                </span>\r\n                            </label>\r\n                            <label>\r\n                                <input type=\"checkbox\" class=\"form-control\" ref=\"cbRemainder\">\r\n                                Remainder\r\n                                <span>\r\n                                    <span>\r\n                                        <svg class=\"checkmark\" viewBox=\"0 0 24 24\"><path class=\"checkmark-path\"\r\n                                                                                         fill=\"none\" stroke=\"white\"\r\n                                                                                         d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"></path></svg>\r\n                                    </span>\r\n                                </span>\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"col-lg-3 col-md-3 col-sm-3 col-xs-12\">\r\n                            <label>\r\n                                <input type=\"checkbox\" class=\"form-control\" ref=\"cbSubsequent Underpayment\">\r\n                                Subsequent Underpayment\r\n                                <span>\r\n                                    <span>\r\n                                        <svg class=\"checkmark\" viewBox=\"0 0 24 24\"><path class=\"checkmark-path\"\r\n                                                                                         fill=\"none\" stroke=\"white\"\r\n                                                                                         d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"></path></svg>\r\n                                    </span>\r\n                                </span>\r\n                            </label>\r\n                            <label>\r\n                                <input type=\"checkbox\" class=\"form-control\" ref=\"cbOverpayment\">\r\n                                Overpayment\r\n                                <span>\r\n                                    <span>\r\n                                        <svg class=\"checkmark\" viewBox=\"0 0 24 24\"><path class=\"checkmark-path\"\r\n                                                                                         fill=\"none\" stroke=\"white\"\r\n                                                                                         d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"></path></svg>\r\n                                    </span>\r\n                                </span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <b-modal id=\"viewTransactionModal\" size=\"lg\" title=\"All Transactions for Student Payment Item\" ok-only ok-variant=\"secondary\" ok-title=\"Cancel\" ref=\"viewTransactionShowModal\">\r\n            <div class=\"row\">\r\n                <div class= \"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                    <div v-if=\"itemTransDetailsInt.length>0\">\r\n                        <data-tables :data=\"itemTransDetailsInt\"  >\r\n                            <el-table-column v-for=\"itemTransDetailsListItem in itemTransDetailsList\" :prop=\"itemTransDetailsListItem.prop\"\r\n                                             :label=\"itemTransDetailsListItem.label\" :key=\"itemTransDetailsListItem.prop\"\r\n                                             sortable=\"custom\">\r\n                            </el-table-column>\r\n                        </data-tables>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </b-modal>\r\n\r\n        <button v-on:click=\"Test()\">Test</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import DataSource from \"../data/datasource\";\r\n\r\n    export default {\r\n        name: \"StudentPaymentPlan\",\r\n\r\n        data() {\r\n            return {\r\n                studentPaymentListInt: [],\r\n                studentPaymentList: [{\r\n                    prop: \"SPPD_PayerName\",\r\n                    label: \"Name\"\r\n                }, {\r\n                    prop: \"SPPD_Status\",\r\n                    label: \"Invoice Status\"\r\n                }, {\r\n                    prop: \"SPPD_PaymentDates\",\r\n                    label: \"Payment Date\"\r\n                }, {\r\n                    prop: \"SPPD_PaymentAmount\",\r\n                    label: \"Amount\"\r\n                }, {\r\n                    prop: \"totalIncludeGst\",\r\n                    label: \"Incl. GST\"\r\n                }, {\r\n                    prop: \"RecTotal\",\r\n                    label: \"Paid Amount\"\r\n                // }, {\r\n                //     prop: \"InvoiceDate\",\r\n                //     label: \"Inv Date\"\r\n                // }, {\r\n                //     prop: \"PaymentItemType\",\r\n                //     label: \"SPPD_PaymentItemType\"\r\n                // }, {\r\n                //     prop: \"Status\",\r\n                //     label: \"SPPD_Status\"\r\n                }],\r\n\r\n                itemTransDetailsInt: [],\r\n                itemTransDetailsList: [{\r\n                    prop: \"DocumentDate\",\r\n                    label: \"Date\"\r\n                }, {\r\n                    prop: \"DocumentType\",\r\n                    label: \"Transaction Type\"\r\n                }, {\r\n                    prop: \"DocumentNo\",\r\n                    label: \"Document Number\"\r\n                }, {\r\n                    prop: \"DocumentStatus\",\r\n                    label: \"Document Status\"\r\n                }, {\r\n                    prop: \"TotalIncGst\",\r\n                    label: \"Total (Incl. GST)\"\r\n                }, {\r\n                    prop: \"DocumentCreatedBy\",\r\n                    label: \"Created By\"\r\n                }],\r\n\r\n                inputPaymentDueDate: '',\r\n                inputReceiptDate: '',\r\n                paymentModeList:[],\r\n                multipleSelection:[],\r\n            };\r\n        },\r\n\r\n        async created() {\r\n            this.getStudentPaymentList();\r\n            this.BindPaymentModeDropdown();\r\n        },\r\n\r\n        async mounted() {\r\n\r\n        },\r\n\r\n        methods: {\r\n            async changeSelection(val) {\r\n                this.multipleSelection = val;\r\n            },\r\n\r\n            Test()\r\n            {\r\n                console.log(this.multipleSelection);\r\n            },\r\n\r\n            async getStudentPaymentList() {\r\n                this.$vs.loading();\r\n                try {\r\n                    const response = await DataSource.shared.getStudentPaymentList('SCR2019190104');\r\n                    if (response) {\r\n                        switch (response.code) {\r\n                            case \"2\":\r\n                                this.$notify.error({\r\n                                    title: 'No Record Found',\r\n                                    message: 'No Student Payment Record'\r\n                                });\r\n                                break;\r\n                            case \"88\":\r\n                                this.$router.push('/');\r\n                                break;\r\n                            case \"99\":\r\n                                this.$notify.error({\r\n                                    title: 'Error',\r\n                                    message: 'Error'\r\n                                });\r\n                                break;\r\n\r\n                            default:\r\n                                this.studentPaymentListInt = response.Table;\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n                this.$vs.loading.close();\r\n            },\r\n\r\n            retrieveItemTransactionDetails(row) {\r\n                return [{\r\n                    name: 'View Trans',\r\n                    handler: _ => {\r\n                        this.viewSPDID =  row.PK_SPD_ID;\r\n                        this.viewSPPDPayerName =  row.SPPD_PayerName;\r\n                        this.getItemTransDetailsList();\r\n                    }\r\n                }];\r\n            },\r\n\r\n            async getItemTransDetailsList(){\r\n                this.$vs.loading();\r\n                try {\r\n                    const response = await DataSource.shared.getItemTransDetailsList(this.viewSPDID);\r\n                    if (response) {\r\n                        switch (response.code) {\r\n                            case \"2\":\r\n                                this.$notify.error({\r\n                                    title: 'No Record Found',\r\n                                    message: 'No Invoice Generated'\r\n                                });\r\n                                break;\r\n                            case \"88\":\r\n                                this.$router.push('/');\r\n                                break;\r\n                            case \"99\":\r\n                                this.$notify.error({\r\n                                    title: 'Error',\r\n                                    message: 'Error'\r\n                                });\r\n                                break;\r\n\r\n                            default:\r\n                                this.itemTransDetailsInt = response.Table;\r\n                                this.$refs.viewTransactionShowModal.show();\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n                this.$vs.loading.close();\r\n            },\r\n\r\n            // todo:validation preview invoice\r\n            async ValidationPreviewInvoice() {\r\n                try {\r\n                    this.$v.$touch();\r\n\r\n                    if (this.$v.$error) {\r\n                        alert('Please select at least 1 item');\r\n                        return;\r\n                    }\r\n                    // todo: create function for preview invoice\r\n                    // this.PreviewInvoice();\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            // todo: validation generate invoice\r\n            async ValidationGenerateInvoice() {\r\n                try {\r\n                    this.$v.$touch();\r\n\r\n                    if (this.$v.$error) {\r\n                        alert('Please select at least 1 item');\r\n                        return;\r\n                    }\r\n                    // todo: create function for generate invoice\r\n                    // this.GenerateInvoice();\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n\r\n            async BindPaymentModeDropdown()\r\n            {\r\n                try {\r\n                    let jsonString = '\"Pay Type\":\"Pay Type\"';\r\n                    jsonString = \"{\" + jsonString + \"}\";\r\n\r\n                    const response = await DataSource.shared.getStudentDropDownList(jsonString);\r\n                    if (response) {\r\n                        if (response.code === '88') {\r\n                            window.location.replace('/');\r\n                        }\r\n                        else {\r\n\r\n                            this.paymentModeListResponse = response.Table;\r\n                            this.paymentModeListResponse.forEach(m => {\r\n                                if (m.OGPname.trim() === 'Pay Type') {\r\n                                    this.paymentModeList.push(m);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n        },\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .el-date-editor {\r\n        width: 100% !important;\r\n    }\r\n\r\n    .buttonArea {\r\n        margin: 20px 0 0 0;\r\n    }\r\n\r\n    .btn-primary {\r\n        display: inline;\r\n    }\r\n\r\n    .buttonArea .btn-primary {\r\n        margin: 0 0 0 20px;\r\n    }\r\n</style>"],"sourceRoot":"src/pages"}]}