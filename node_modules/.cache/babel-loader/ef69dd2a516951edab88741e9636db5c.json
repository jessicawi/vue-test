{"remainingRequest":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\StudentEditLevel.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\StudentEditLevel.vue","mtime":1550255386258},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1553612671158},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1553612666995}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\jessi\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DataSource from \"../data/datasource\";\nexport default {\n  name: \"StudentEditLevel\",\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.lblStudentID = this.$route.query.id;\n              _context.next = 3;\n              return this.BindStudentInfo();\n\n            case 3:\n              _context.next = 5;\n              return this.BindAcademicYear();\n\n            case 5:\n              _context.next = 7;\n              return this.BindStudentIntakeYear();\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.GetStudentLevelList();\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  data: function data() {\n    var _this = this;\n\n    return {\n      levelList: [],\n      academicYearList: [],\n      studentIntakeYearList: [],\n      lblStudentID: '',\n      lblStudentName: '',\n      lblStudentStatus: '',\n      list: [],\n      studentLevelList: [{\n        prop: \"CRS_Course_Name\",\n        label: \"Level\"\n      }, {\n        prop: \"SCH_Short_Name\",\n        label: \"School Name\"\n      }, {\n        prop: \"SMT_Code\",\n        label: \"Academic Year Code\"\n      }, {\n        prop: \"SCRS_From_Date_convert\",\n        label: \"Level Start Date\"\n      }, {\n        prop: \"SCRS_To_Date_convert\",\n        label: \"Level End Date\"\n      }, {\n        prop: \"SCRS_Status\",\n        label: \"Status\"\n      }],\n      actionCol: {\n        label: 'Class',\n        props: {\n          align: 'center'\n        },\n        buttons: [{\n          props: {\n            type: 'primary',\n            icon: 'el-icon-edit'\n          },\n          handler: function handler(row) {\n            window.location.replace('/student-edit-class?courseid=' + row.PK_Student_Course_ID + '&id=' + _this.lblStudentID + '&semid=' + row.PK_Semester_ID + '&subjectcourseid=' + row.SCRS_FK_Course_ID);\n          },\n          label: 'Class'\n        }]\n      },\n      selectedRow: null\n    };\n  },\n  methods: {\n    backToPrevious: function backToPrevious() {\n      window.location.replace(\"/student-list?mode=Course\");\n    },\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.selectedRow = val;\n    },\n    BindStudentInfo: function () {\n      var _BindStudentInfo = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        var _this2 = this;\n\n        var response;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return DataSource.shared.getStudent(this.lblStudentID, '', '', '', '');\n\n              case 3:\n                response = _context3.sent;\n\n                if (response) {\n                  this.studentInfoResponse = response.Table;\n                  this.studentInfoResponse.forEach(function (m) {\n                    _this2.lblStudentName = m.Full_Name + ' ' + m.Last_name;\n                    _this2.lblStudentStatus = m.Status;\n                  });\n                }\n\n                _context3.next = 10;\n                break;\n\n              case 7:\n                _context3.prev = 7;\n                _context3.t0 = _context3[\"catch\"](0);\n                this.results = _context3.t0;\n\n              case 10:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 7]]);\n      }));\n\n      function BindStudentInfo() {\n        return _BindStudentInfo.apply(this, arguments);\n      }\n\n      return BindStudentInfo;\n    }(),\n    BindStudentLevel: function () {\n      var _BindStudentLevel = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(customLevelNotEqual) {\n        var _this3 = this;\n\n        var response;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return DataSource.shared.getLevel(customLevelNotEqual);\n\n              case 3:\n                response = _context4.sent;\n\n                if (response) {\n                  this.levelListResponse = response.Table;\n                  this.levelListResponse.forEach(function (m) {\n                    _this3.levelList.push(m);\n                  });\n                }\n\n                _context4.next = 10;\n                break;\n\n              case 7:\n                _context4.prev = 7;\n                _context4.t0 = _context4[\"catch\"](0);\n                this.results = _context4.t0;\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 7]]);\n      }));\n\n      function BindStudentLevel(_x) {\n        return _BindStudentLevel.apply(this, arguments);\n      }\n\n      return BindStudentLevel;\n    }(),\n    BindAcademicYear: function () {\n      var _BindAcademicYear = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5() {\n        var _this4 = this;\n\n        var response;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                _context5.next = 3;\n                return DataSource.shared.getAcademicYear();\n\n              case 3:\n                response = _context5.sent;\n\n                if (response) {\n                  this.academicYearListResponse = response.Table;\n                  this.academicYearListResponse.forEach(function (m) {\n                    _this4.academicYearList.push(m);\n                  });\n                }\n\n                _context5.next = 10;\n                break;\n\n              case 7:\n                _context5.prev = 7;\n                _context5.t0 = _context5[\"catch\"](0);\n                this.results = _context5.t0;\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 7]]);\n      }));\n\n      function BindAcademicYear() {\n        return _BindAcademicYear.apply(this, arguments);\n      }\n\n      return BindAcademicYear;\n    }(),\n    BindStudentIntakeYear: function () {\n      var _BindStudentIntakeYear = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6() {\n        var _this5 = this;\n\n        var response;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.prev = 0;\n                _context6.next = 3;\n                return DataSource.shared.getIntakeYear();\n\n              case 3:\n                response = _context6.sent;\n\n                if (response) {\n                  this.studentIntakeYearListResponse = response.Table;\n                  this.studentIntakeYearListResponse.forEach(function (m) {\n                    _this5.studentIntakeYearList.push(m);\n                  });\n                }\n\n                _context6.next = 10;\n                break;\n\n              case 7:\n                _context6.prev = 7;\n                _context6.t0 = _context6[\"catch\"](0);\n                this.results = _context6.t0;\n\n              case 10:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[0, 7]]);\n      }));\n\n      function BindStudentIntakeYear() {\n        return _BindStudentIntakeYear.apply(this, arguments);\n      }\n\n      return BindStudentIntakeYear;\n    }(),\n    GetStudentLevelList: function () {\n      var _GetStudentLevelList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7() {\n        var response, customLevelNotEqual;\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                this.$vs.loading();\n                _context7.prev = 1;\n                _context7.next = 4;\n                return DataSource.shared.getStudentLevel(this.lblStudentID);\n\n              case 4:\n                response = _context7.sent;\n\n                if (response) {\n                  if (response.code == 2) {\n                    alert('No record found');\n                  } else if (response.code == 99) {\n                    alert('Please try again later');\n                  } else {\n                    this.list = response.Table; //filter the added level to BindStudentLevel\n\n                    customLevelNotEqual = '';\n                    this.GetStudentLevelListResponse = response.Table;\n                    this.GetStudentLevelListResponse.forEach(function (m) {\n                      if (customLevelNotEqual == '') {\n                        customLevelNotEqual = m.PK_Course_ID;\n                      } else {\n                        customLevelNotEqual = customLevelNotEqual + \",\" + m.PK_Course_ID;\n                      }\n                    });\n                    this.BindStudentLevel(customLevelNotEqual); //filter the added level to BindStudentLevel\n                  }\n                }\n\n                _context7.next = 11;\n                break;\n\n              case 8:\n                _context7.prev = 8;\n                _context7.t0 = _context7[\"catch\"](1);\n                this.results = _context7.t0;\n\n              case 11:\n                this.$vs.loading.close();\n\n              case 12:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[1, 8]]);\n      }));\n\n      function GetStudentLevelList() {\n        return _GetStudentLevelList.apply(this, arguments);\n      }\n\n      return GetStudentLevelList;\n    }(),\n    studentLevelListActivate: function studentLevelListActivate(row) {\n      var _this6 = this;\n\n      return [{\n        name: 'Activate',\n        handler: function handler(_) {\n          _this6.updateLevel(row.PK_Student_Course_ID, \"Activate\");\n        }\n      }];\n    },\n    studentLevelListDeactivate: function studentLevelListDeactivate(row) {\n      var _this7 = this;\n\n      return [{\n        name: 'Deactivate',\n        handler: function handler(_) {\n          _this7.updateLevel(row.PK_Student_Course_ID, \"Deactivate\");\n        }\n      }];\n    },\n    updateLevel: function () {\n      var _updateLevel = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee8(courseID, mode) {\n        var response;\n        return regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                _context8.prev = 0;\n                _context8.next = 3;\n                return DataSource.shared.updateLevel(this.lblStudentID, courseID, mode);\n\n              case 3:\n                response = _context8.sent;\n\n                if (response) {\n                  if (response.code == 1) {\n                    alert('Edit Successfully!');\n                    window.location.replace('/student-edit-level?id=' + this.lblStudentID);\n                  } else if (response.code == 2) {\n                    alert('Cannot have multiple active level');\n                  } else {\n                    alert('Error! Please try again later.');\n                  }\n                }\n\n                _context8.next = 10;\n                break;\n\n              case 7:\n                _context8.prev = 7;\n                _context8.t0 = _context8[\"catch\"](0);\n                this.results = _context8.t0;\n\n              case 10:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[0, 7]]);\n      }));\n\n      function updateLevel(_x2, _x3) {\n        return _updateLevel.apply(this, arguments);\n      }\n\n      return updateLevel;\n    }(),\n    AddLevel: function () {\n      var _AddLevel = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee9() {\n        var getAcaYearRes, academicYearFromDate, academicYearToDate, getSetLvlRes;\n        return regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                _context9.prev = 0;\n\n                if (!(this.lblStudentID != \"\" && this.$refs.ddlStudentSelectLevel.value != \"\" && this.$refs.ddlStudentFirstAcademicYear.value != \"\" && this.$refs.ddlStudentIntakeYear.value != \"\")) {\n                  _context9.next = 18;\n                  break;\n                }\n\n                _context9.next = 4;\n                return DataSource.shared.getAcademicYearDateRange(this.$refs.ddlStudentFirstAcademicYear.value);\n\n              case 4:\n                getAcaYearRes = _context9.sent;\n\n                if (!getAcaYearRes) {\n                  _context9.next = 16;\n                  break;\n                }\n\n                if (!(getAcaYearRes.code == \"99\")) {\n                  _context9.next = 10;\n                  break;\n                }\n\n                alert('Get Academic Year Error - Please try again later');\n                _context9.next = 16;\n                break;\n\n              case 10:\n                this.getAcaYearResTemp = getAcaYearRes.Table;\n                this.getAcaYearResTemp.forEach(function (m) {\n                  academicYearFromDate = m.SMT_From;\n                  academicYearToDate = m.SMT_To;\n                });\n                _context9.next = 14;\n                return DataSource.shared.setLevel(this.lblStudentID, this.$refs.ddlStudentSelectLevel.value, academicYearFromDate, academicYearToDate, this.$refs.ddlStudentFirstAcademicYear.value, this.$refs.ddlStudentIntakeYear.value);\n\n              case 14:\n                getSetLvlRes = _context9.sent;\n\n                if (getSetLvlRes) {\n                  if (getSetLvlRes.code == \"1\") {\n                    alert('Records Successfully Saved');\n                    window.location.replace('/student-edit-level?id=' + this.lblStudentID);\n                  } else if (getSetLvlRes.code == \"2\") {\n                    alert('cannot have multiple active level');\n                  } else {\n                    alert('Save Student Level Error - Please try again later');\n                  }\n                }\n\n              case 16:\n                _context9.next = 19;\n                break;\n\n              case 18:\n                alert('Please fill in all the information');\n\n              case 19:\n                _context9.next = 24;\n                break;\n\n              case 21:\n                _context9.prev = 21;\n                _context9.t0 = _context9[\"catch\"](0);\n                this.results = _context9.t0;\n\n              case 24:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this, [[0, 21]]);\n      }));\n\n      function AddLevel() {\n        return _AddLevel.apply(this, arguments);\n      }\n\n      return AddLevel;\n    }()\n  }\n};",{"version":3,"sources":["StudentEditLevel.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div id=\"student-edit-level\" >\r\n        <div class=\"datatable-edit__header\">\r\n            <div class=\"container\">\r\n                <h3>Student Level</h3>\r\n                <a href=\"StudentList.vue\">Student List</a> > Student Level\r\n            </div>\r\n        </div>\r\n        <div class=\"mt-3 container\">\r\n        <label style=\"display:none !important;\">{{lblStudentID}}</label>\r\n        <div class=\"form-wrap\">\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                    <label class=\"withoutInput\">Student Name: {{lblStudentName}}</label>\r\n                </div>\r\n\r\n                <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                    <label class=\"withoutInput\">Student Status: {{lblStudentStatus}}</label>\r\n                </div>\r\n\r\n                <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                    <label>Select Level</label>\r\n                    <select ref=\"ddlStudentSelectLevel\" class=\"form-control pro-edt-select form-control-primary\">\r\n                        <option v-for=\"item in levelList\" v-bind:value=\"item.PK_Course_ID.trim()\">{{\r\n                            item.CRS_Course_Name.trim() }}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                    <label>First Academic Year</label>\r\n                    <select ref=\"ddlStudentFirstAcademicYear\"\r\n                            class=\"form-control pro-edt-select form-control-primary\">\r\n                        <option v-for=\"item in academicYearList\" v-bind:value=\"item.PK_Semester_ID.trim()\">{{\r\n                            item.SMT_Code.trim() }}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                    <label>Intake Year</label>\r\n                    <select ref=\"ddlStudentIntakeYear\" class=\"form-control pro-edt-select form-control-primary\">\r\n                        <option v-for=\"item in studentIntakeYearList\" v-bind:value=\"item.PK_PAI_ID.trim()\">{{\r\n                            item.PAI_Intake_No.trim() }}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 buttonArea\">\r\n                    <button class=\"btn btn-primary waves-effect waves-light m-r-10\" v-on:click=\"AddLevel\">Add\r\n                        Level\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            <div v-if=\"list.length>0\">\r\n                <data-tables :data=\"list\" :actionCol=\"actionCol\" @selection-change=\"handleSelectionChange\">\r\n                    <el-table-column v-for=\"studentLevelListInfo in studentLevelList\"\r\n                                     :prop=\"studentLevelListInfo.prop\" :label=\"studentLevelListInfo.label\"\r\n                                     :key=\"studentLevelListInfo.prop\"\r\n                                     sortable=\"custom\">\r\n                    </el-table-column>\r\n\r\n                    <el-table-column label=\"Activate\" min-width=\"100px\">\r\n                        <template slot-scope=\"scope\">\r\n                            <el-button v-for=\"studentLevelListActivateButton in studentLevelListActivate(scope.row)\"\r\n                                       :key=\"studentLevelListActivateButton.name\" type=\"primary\"\r\n                                       @click=\"studentLevelListActivateButton.handler\">\r\n                                {{studentLevelListActivateButton.name}}\r\n                            </el-button>\r\n                        </template>\r\n                    </el-table-column>\r\n\r\n                    <el-table-column label=\"Deactivate\" min-width=\"100px\">\r\n                        <template slot-scope=\"scope\">\r\n                            <el-button\r\n                                    v-for=\"studentLevelListDeactivateButton in studentLevelListDeactivate(scope.row)\"\r\n                                    :key=\"studentLevelListDeactivateButton.name\" type=\"primary\"\r\n                                    @click=\"studentLevelListDeactivateButton.handler\">\r\n                                {{studentLevelListDeactivateButton.name}}\r\n                            </el-button>\r\n                        </template>\r\n                    </el-table-column>\r\n\r\n                </data-tables>\r\n            </div>\r\n        </div>\r\n            <div class=\"pt-2\">\r\n                <button v-on:click=\"backToPrevious\" type=\"button\"\r\n                        class=\"btn btn-primary waves-effect waves-light m-r-10 mr-auto \">Cancel\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import DataSource from \"../data/datasource\";\r\n\r\n    export default {\r\n        name: \"StudentEditLevel\",\r\n        async created() {\r\n            this.lblStudentID = this.$route.query.id;\r\n            await this.BindStudentInfo();\r\n            //await this.BindStudentLevel();\r\n            await this.BindAcademicYear();\r\n            await this.BindStudentIntakeYear();\r\n        },\r\n        async mounted() {\r\n            await this.GetStudentLevelList();\r\n        },\r\n        data() {\r\n            return {\r\n                levelList: [],\r\n                academicYearList: [],\r\n                studentIntakeYearList: [],\r\n\r\n                lblStudentID: '',\r\n                lblStudentName: '',\r\n                lblStudentStatus: '',\r\n\r\n                list: [],\r\n                studentLevelList: [{\r\n                    prop: \"CRS_Course_Name\",\r\n                    label: \"Level\",\r\n                }, {\r\n                    prop: \"SCH_Short_Name\",\r\n                    label: \"School Name\"\r\n                }, {\r\n                    prop: \"SMT_Code\",\r\n                    label: \"Academic Year Code\"\r\n                }, {\r\n                    prop: \"SCRS_From_Date_convert\",\r\n                    label: \"Level Start Date\"\r\n                }, {\r\n                    prop: \"SCRS_To_Date_convert\",\r\n                    label: \"Level End Date\"\r\n                }, {\r\n                    prop: \"SCRS_Status\",\r\n                    label: \"Status\"\r\n                }],\r\n                actionCol: {\r\n                    label: 'Class',\r\n                    props: {\r\n                        align: 'center',\r\n                    },\r\n                    buttons: [{\r\n                        props: {\r\n                            type: 'primary',\r\n                            icon: 'el-icon-edit'\r\n                        },\r\n                        handler: row => {\r\n                            window.location.replace('/student-edit-class?courseid=' + row.PK_Student_Course_ID + '&id=' + this.lblStudentID + '&semid=' + row.PK_Semester_ID + '&subjectcourseid=' + row.SCRS_FK_Course_ID);\r\n                        },\r\n                        label: 'Class'\r\n                    }]\r\n                },\r\n                selectedRow: null,\r\n            };\r\n        },\r\n        methods: {\r\n            backToPrevious(){\r\n                window.location.replace(\"/student-list?mode=Course\");\r\n            },\r\n            handleSelectionChange(val) {\r\n                this.selectedRow = val;\r\n            },\r\n            async BindStudentInfo() {\r\n                try {\r\n                    const response = await DataSource.shared.getStudent(this.lblStudentID, '', '', '', '');\r\n                    if (response) {\r\n                        this.studentInfoResponse = response.Table;\r\n                        this.studentInfoResponse.forEach(m => {\r\n                            this.lblStudentName = m.Full_Name + ' ' + m.Last_name;\r\n                            this.lblStudentStatus = m.Status;\r\n                        });\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async BindStudentLevel(customLevelNotEqual) {\r\n                try {\r\n                    const response = await DataSource.shared.getLevel(customLevelNotEqual);\r\n                    if (response) {\r\n                        this.levelListResponse = response.Table;\r\n                        this.levelListResponse.forEach(m => {\r\n                            this.levelList.push(m);\r\n                        });\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async BindAcademicYear() {\r\n                try {\r\n                    const response = await DataSource.shared.getAcademicYear();\r\n                    if (response) {\r\n                        this.academicYearListResponse = response.Table;\r\n                        this.academicYearListResponse.forEach(m => {\r\n                            this.academicYearList.push(m);\r\n                        });\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async BindStudentIntakeYear() {\r\n                try {\r\n                    const response = await DataSource.shared.getIntakeYear();\r\n                    if (response) {\r\n                        this.studentIntakeYearListResponse = response.Table;\r\n                        this.studentIntakeYearListResponse.forEach(m => {\r\n                            this.studentIntakeYearList.push(m);\r\n                        });\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async GetStudentLevelList() {\r\n                this.$vs.loading();\r\n                try {\r\n                    const response = await DataSource.shared.getStudentLevel(this.lblStudentID);\r\n                    if (response) {\r\n                        if (response.code == 2) {\r\n                            alert('No record found');\r\n                        } else if (response.code == 99) {\r\n                            alert('Please try again later');\r\n                        } else {\r\n                            this.list = response.Table;\r\n\r\n                            //filter the added level to BindStudentLevel\r\n                            let customLevelNotEqual = '';\r\n                            this.GetStudentLevelListResponse = response.Table;\r\n                            this.GetStudentLevelListResponse.forEach(m => {\r\n                                if (customLevelNotEqual == '') {\r\n                                    customLevelNotEqual = m.PK_Course_ID;\r\n                                } else {\r\n                                    customLevelNotEqual = customLevelNotEqual + \",\" + m.PK_Course_ID;\r\n                                }\r\n                            });\r\n\r\n                            this.BindStudentLevel(customLevelNotEqual);\r\n                            //filter the added level to BindStudentLevel\r\n\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n                this.$vs.loading.close();\r\n            },\r\n            studentLevelListActivate(row) {\r\n                return [{\r\n                    name: 'Activate',\r\n                    handler: _ => {\r\n                        this.updateLevel(row.PK_Student_Course_ID, \"Activate\");\r\n                    }\r\n                }];\r\n            },\r\n            studentLevelListDeactivate(row) {\r\n                return [{\r\n                    name: 'Deactivate',\r\n                    handler: _ => {\r\n                        this.updateLevel(row.PK_Student_Course_ID, \"Deactivate\");\r\n                    }\r\n                }];\r\n            },\r\n            async updateLevel(courseID, mode) {\r\n                try {\r\n                    const response = await DataSource.shared.updateLevel(this.lblStudentID, courseID, mode);\r\n                    if (response) {\r\n                        if (response.code == 1) {\r\n                            alert('Edit Successfully!');\r\n                            window.location.replace('/student-edit-level?id=' + this.lblStudentID);\r\n                        } else if (response.code == 2) {\r\n                            alert('Cannot have multiple active level');\r\n                        } else {\r\n                            alert('Error! Please try again later.');\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async AddLevel() {\r\n                try {\r\n                    if (this.lblStudentID != \"\" && this.$refs.ddlStudentSelectLevel.value != \"\" && this.$refs.ddlStudentFirstAcademicYear.value != \"\" && this.$refs.ddlStudentIntakeYear.value != \"\") {\r\n                        const getAcaYearRes = await DataSource.shared.getAcademicYearDateRange(this.$refs.ddlStudentFirstAcademicYear.value);\r\n\r\n                        if (getAcaYearRes) {\r\n                            if (getAcaYearRes.code == \"99\") {\r\n                                alert('Get Academic Year Error - Please try again later');\r\n                            } else {\r\n                                let academicYearFromDate, academicYearToDate;\r\n\r\n                                this.getAcaYearResTemp = getAcaYearRes.Table;\r\n                                this.getAcaYearResTemp.forEach(m => {\r\n                                    academicYearFromDate = m.SMT_From;\r\n                                    academicYearToDate = m.SMT_To;\r\n                                });\r\n\r\n                                const getSetLvlRes = await DataSource.shared.setLevel(this.lblStudentID, this.$refs.ddlStudentSelectLevel.value, academicYearFromDate, academicYearToDate, this.$refs.ddlStudentFirstAcademicYear.value, this.$refs.ddlStudentIntakeYear.value);\r\n\r\n                                if (getSetLvlRes) {\r\n                                    if (getSetLvlRes.code == \"1\") {\r\n                                        alert('Records Successfully Saved');\r\n                                        window.location.replace('/student-edit-level?id=' + this.lblStudentID);\r\n                                    } else if (getSetLvlRes.code == \"2\") {\r\n                                        alert('cannot have multiple active level');\r\n                                    } else {\r\n                                        alert('Save Student Level Error - Please try again later');\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    } else {\r\n                        alert('Please fill in all the information');\r\n                    }\r\n\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n        },\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n    .buttonArea button {\r\n        display: inline;\r\n    }\r\n</style>"],"sourceRoot":"src/pages"}]}