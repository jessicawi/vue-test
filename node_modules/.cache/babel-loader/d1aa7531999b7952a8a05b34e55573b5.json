{"remainingRequest":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\StaffPost.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\StaffPost.vue","mtime":1555608750300},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1553612671158},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1553612666995}],"contextDependencies":[],"result":["import _defineProperty from \"C:\\\\Users\\\\jessi\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport _parseInt from \"C:\\\\Users\\\\jessi\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-int\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\jessi\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _JSON$stringify from \"C:\\\\Users\\\\jessi\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DataSource from \"../data/datasource\";\nimport { required, minLength } from 'vuelidate/lib/validators';\nimport isImage from \"is-image\";\nimport PostComponent from \"../components/postCompnent\";\nimport BroadcastList from \"../components/BroadcastListCompnent\";\nimport VueTagsInput from '@johmun/vue-tags-input';\nimport portfolio from \"../components/Post_Portfolio_Component\";\nimport updates from \"../components/Post_Updates_Component.vue\";\nimport broadcast from \"../components/Post_Broadcast_Component.vue\";\nimport $ from 'jquery';\nimport Cookies from \"js-cookie\"; // import RichTextEditor from \"../components/RichTextEditor/RichTextEditor\";\n\nexport default _defineProperty({\n  name: 'staffPost',\n  components: {\n    PostComponent: PostComponent,\n    VueTagsInput: VueTagsInput,\n    // At,\n    BroadcastList: BroadcastList\n  },\n  data: function data() {\n    return {\n      modalTitle: null,\n      files: [],\n      systemmsgError: false,\n      isModalOpen: false,\n      token: null,\n      userType: \"\",\n      list: [],\n      error: \"\",\n      staffPostResults: \"\",\n      results: \"\",\n      postContent: \"\",\n      addPostContent: \"\",\n      tagAcademicYearID: \"\",\n      profolio: \"No\",\n      tagClassID: \"\",\n      tagLevelID: \"\",\n      // files: [],\n      content: '',\n      selectedFile: null,\n      success: \"\",\n      isLoading: true,\n      saveResponse: \"\",\n      PostItemPath: \"\",\n      tagResponseText: \"123\",\n      academicYearTable: [],\n      classesTable: [],\n      levelsTable: [],\n      studentTable: [],\n      PostID: \"\",\n      commentPostContent: \"\",\n      commentPostID: \"\",\n      actionMode: \"\",\n      readonly: true,\n      checkidcomment: \"\",\n      showDeleteModal: false,\n      query: '',\n      tag: '',\n      tags: [],\n      isParent: \"\",\n      obj_SelectedComponent: false,\n      int_NumberOfPost: 3,\n      arrobj_BroadcastPost: [],\n      intervalCheckNew: {},\n      bool_ShowRefresh: false\n    };\n  },\n  filters: {\n    stringify: function stringify(value) {\n      return _JSON$stringify(value, null, 2);\n    }\n  },\n  computed: {\n    items: function items() {\n      var _this = this;\n\n      return this.studentTable.filter(function (i) {\n        return i.text.toLowerCase().indexOf(_this.tag.toLowerCase()) !== -1;\n      });\n    }\n  },\n\n  /*async mounted() {\n      this.loadPosts();\n  },*/\n  mounted: function mounted() {\n    var _this2 = this;\n\n    var self = this;\n    this.loadPosts();\n    this.loadBroadcast();\n    /*#region Scroll Loader Functions*/\n\n    $(window).scroll(self.debounce(function () {\n      if (self.getScrollPercent() >= 50) {\n        _this2.isParent = Cookies.get('userTypeSession');\n        var obj_LastPost = !_this2.isNull(_this2.list) ? _this2.list[_this2.list.length - 1] : \"\";\n        var promise_GetPosts = _this2.isParent === \"Parent\" ? DataSource.shared.getParentPost(_this2.int_NumberOfPost, obj_LastPost.PostID) : DataSource.shared.getStaffPost(_this2.int_NumberOfPost, obj_LastPost.PostID);\n        promise_GetPosts.then(function (response) {\n          if (response.Table) {\n            _this2.list.push.apply(_this2.list, response.Table);\n          }\n        });\n        /*if (this.isParent === \"Parent\") {\n            DataSource.shared.getParentPost(this.int_NumberOfPost, str_LastPostID).then((response) => {\n                if (response.Table) {\n                    for (let item of response.Table) {\n                        this.list.push.apply(this.list, response.Table);\n                         DataSource.shared.getPostFile(item.PostID).then((fileRes) => {\n                            if (fileRes.Table) {\n                                item.postFiles = fileRes.Table;\n                            }\n                            item.commentPostID = item.PostID;\n                        }).then(() => {\n                            DataSource.shared.getComment(item.PostID).then((getCommentResponse) => {\n                                if (getCommentResponse.Table) {\n                                    item.commentItems = getCommentResponse.Table;\n                                    item.collapsed = true;\n                                }\n                            });\n                        });\n                    }\n                }\n            });\n        } else {\n            DataSource.shared.getStaffPost(this.int_NumberOfPost, str_LastPostID).then((response) => {\n                if (response.Table) {\n                    this.list.push.apply(this.list, response.Table);\n                     for (let item of response.Table) {\n                        DataSource.shared.getPostFile(item.PostID).then((fileRes) => {\n                            if (fileRes.Table) {\n                                item.postFiles = fileRes.Table;\n                            }\n                            item.commentPostID = item.PostID;\n                        }).then(() => {\n                            DataSource.shared.getComment(item.PostID).then((getCommentResponse) => {\n                                if (getCommentResponse.Table) {\n                                    item.commentItems = getCommentResponse.Table;\n                                    item.collapsed = true;\n                                }\n                            });\n                        });\n                    }\n                }\n            });\n        }*/\n      }\n    }, 250));\n    /*#endregion*/\n  },\n  methods: {\n    initIntervalCheckNew: function initIntervalCheckNew() {\n      var _this3 = this;\n\n      if (!this.bool_ShowRefresh) this.intervalCheckNew = setInterval(function () {\n        _this3.CheckNew();\n      }, 300000);\n    },\n    CheckNew: function CheckNew() {\n      var _this4 = this;\n\n      this.isParent = Cookies.get('userTypeSession');\n      var promise_GetPosts = this.isParent === \"Parent\" ? DataSource.shared.getParentPost(1, null, null) : DataSource.shared.getStaffPost(1, null, null);\n      promise_GetPosts.then(function (response) {\n        if (response.Table && new Date(response.Table[0].PostCreatedDate) > new Date(_this4.list[0].PostCreatedDate)) {\n          _this4.bool_ShowRefresh = true;\n          clearInterval(_this4.intervalCheckNew);\n        }\n      });\n    },\n    showMoreBroadcastModal: function showMoreBroadcastModal() {\n      this.$refs.modal_ShowMoreBroadcast.show();\n    },\n    isNull: function isNull(obj) {\n      return obj === null || obj === undefined || obj === \"undefined\" || obj.length === 0 || obj === \"\";\n    },\n\n    /*#region Scroll Loader Functions*/\n    getScrollPercent: function getScrollPercent() {\n      //Credits to Phil Ricketts @ stackoverflow\n      var height = document.documentElement,\n          body = document.body,\n          scrollTop = 'scrollTop',\n          scrollHeight = 'scrollHeight';\n      return (height[scrollTop] || body[scrollTop]) / ((height[scrollHeight] || body[scrollHeight]) - height.clientHeight) * 100;\n    },\n    isScrollable: function isScrollable() {\n      return $(document).height() > $(window).height();\n    },\n    debounce: function debounce(func, wait, immediate) {\n      // Returns a function, that, as long as it continues to be invoked, will not\n      // be triggered. The function will be called after it stops being called for\n      // N milliseconds. If `immediate` is passed, trigger the function on the\n      // leading edge, instead of the trailing.\n      var timeout, result;\n      var self = this;\n\n      var later = function later(context, args) {\n        timeout = null;\n        if (args) result = func.apply(context, args);\n      };\n\n      var debounced = self.restArguments(function (args) {\n        if (timeout) clearTimeout(timeout);\n\n        if (immediate) {\n          var callNow = !timeout;\n          timeout = setTimeout(later, wait);\n          if (callNow) result = func.apply(this, args);\n        } else {\n          timeout = self.delay(later, wait, this, args);\n        }\n\n        return result;\n      });\n\n      debounced.cancel = function () {\n        clearTimeout(timeout);\n        timeout = null;\n      };\n\n      return debounced;\n    },\n    delay: function delay(func, wait) {\n      // Lodash Delay\n\n      /**\n       * Invokes `func` after `wait` milliseconds. Any additional arguments are\n       * provided to `func` when it's invoked.\n       *\n       * @since 0.1.0\n       * @category Function\n       * @param {Function} func The function to delay.\n       * @param {number} wait The number of milliseconds to delay invocation.\n       * @param {...*} [args] The arguments to invoke `func` with.\n       * @returns {number} Returns the timer id.\n       * @example\n       *\n       * delay(text => console.log(text), 1000, 'later')\n       * // => Logs 'later' after one second.\n       */\n      if (typeof func != 'function') {\n        throw new TypeError('Expected a function');\n      }\n\n      for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        args[_key - 2] = arguments[_key];\n      }\n\n      return setTimeout.apply(void 0, [func, +wait || 0].concat(args));\n    },\n    restArguments: function restArguments(func, startIndex) {\n      // Some functions take a variable number of arguments, or a few expected\n      // arguments at the beginning and then a variable number of values to operate\n      // on. This helper accumulates all remaining arguments past the function?s\n      // argument length (or an explicit `startIndex`), into an array that becomes\n      // the last argument. Similar to ES6?s \"rest parameter\".\n      startIndex = startIndex == null ? func.length - 1 : +startIndex;\n      return function () {\n        var length = Math.max(arguments.length - startIndex, 0),\n            rest = Array(length),\n            index = 0;\n\n        for (; index < length; index++) {\n          rest[index] = arguments[index + startIndex];\n        }\n\n        switch (startIndex) {\n          case 0:\n            return func.call(this, rest);\n\n          case 1:\n            return func.call(this, arguments[0], rest);\n\n          case 2:\n            return func.call(this, arguments[0], arguments[1], rest);\n        }\n\n        var args = Array(startIndex + 1);\n\n        for (index = 0; index < startIndex; index++) {\n          args[index] = arguments[index];\n        }\n\n        args[startIndex] = rest;\n        return func.apply(this, args);\n      };\n    },\n\n    /*#endregion*/\n    loadPosts: function loadPosts() {\n      var _this5 = this;\n\n      // this.showSession()\n      // user menu\n      $(\"html, body\").animate({\n        scrollTop: 0\n      }, \"fast\");\n      this.bool_ShowRefresh = false;\n      this.initIntervalCheckNew();\n      this.isParent = Cookies.get('userTypeSession');\n      this.list = [];\n      var promise_GetPosts = this.isParent === \"Parent\" ? DataSource.shared.getParentPost(this.int_NumberOfPost) : DataSource.shared.getStaffPost(this.int_NumberOfPost);\n      promise_GetPosts.then(function (response) {\n        if (response.Table) _this5.list.push.apply(_this5.list, response.Table);\n        _this5.isLoading = false;\n      });\n      /*#region Past revision*/\n\n      /*for (let item of response.Table) {\n      DataSource.shared.getPostFile(item.PostID).then((fileRes) => {\n          if (fileRes.Table) {\n              item.postFiles = fileRes.Table;\n          }\n          item.commentPostID = item.PostID;\n      }).then(() => {\n          DataSource.shared.getComment(item.PostID).then((getCommentResponse) => {\n              if (getCommentResponse.Table) {\n                  item.commentItems = getCommentResponse.Table;\n                  item.collapsed = true;\n              }\n          });\n      });\n      }\n      this.list = response.Table;\n      }*/\n      // if (this.isParent === \"Parent\") {\n      //     DataSource.shared.getParentPost(this.int_NumberOfPost).then((response) => {\n      //         this.list = [];\n      //         if (response.Table) {\n      //             for (let item of response.Table) {\n      //                 this.list.push.apply(this.list, response.Table);\n      //\n      //                 DataSource.shared.getPostFile(item.PostID).then((fileRes) => {\n      //                     if (fileRes.Table) {\n      //                         item.postFiles = fileRes.Table;\n      //                     }\n      //                     item.commentPostID = item.PostID;\n      //                 }).then(() => {\n      //                     DataSource.shared.getComment(item.PostID).then((getCommentResponse) => {\n      //                         if (getCommentResponse.Table) {\n      //                             item.commentItems = getCommentResponse.Table;\n      //                             item.collapsed = true;\n      //                         }\n      //                     });\n      //                 });\n      //             }\n      //         }\n      //     });\n      // } else {\n      //\n      // }\n      // if (isParent === \"Parent\") {\n      //     let response = await DataSource.shared.getParentPost(this.int_NumberOfPost, \"\");\n      //     if (response.Table) {\n      //         for (let item of response.Table) {\n      //             const fileRes = await DataSource.shared.getPostFile(item.PostID);\n      //             const getCommentResponse = await DataSource.shared.getComment(item.PostID);\n      //             if (getCommentResponse.Table) {\n      //                 item.commentItems = getCommentResponse.Table;\n      //                 item.collapsed = true;\n      //             }\n      //             if (fileRes.Table) {\n      //                 item.postFiles = fileRes.Table;\n      //             }\n      //             item.commentPostID = item.PostID;\n      //         }\n      //         this.list = response.Table;\n      //     }\n      // } else {\n      //     let response = await DataSource.shared.getStaffPost(this.int_NumberOfPost, \"\");\n      //     if (response.Table) {\n      //         for (let item of response.Table) {\n      //             const fileRes = await DataSource.shared.getPostFile(item.PostID);\n      //             const getCommentResponse = await DataSource.shared.getComment(item.PostID);\n      //             if (getCommentResponse.Table) {\n      //                 item.commentItems = getCommentResponse.Table;\n      //                 item.collapsed = true;\n      //             }\n      //             if (fileRes.Table) {\n      //                 item.postFiles = fileRes.Table;\n      //             }\n      //             item.commentPostID = item.PostID;\n      //         }\n      //         this.list = response.Table;\n      //     }\n      // }\n      // try {\n      //     let tagResponse = await DataSource.shared.getPostDropdown();\n      //\n      //     if (tagResponse.AcademicYearTable && tagResponse.AcademicYearTable.Table) {\n      //         let uniqueYears = [];\n      //         tagResponse.AcademicYearTable.Table.forEach(object => {\n      //             const isExist = uniqueYears.find(year => year.SMT_Code === object.SMT_Code);\n      //             if (!isExist) {\n      //                 uniqueYears.push(object);\n      //             }\n      //         });\n      //         this.academicYearTable = uniqueYears;\n      //     }\n      //     if (tagResponse.ClassesTable && tagResponse.ClassesTable.Table) {\n      //         let uniqueClass = [];\n      //         tagResponse.ClassesTable.Table.forEach(object => {\n      //             const isExist = uniqueClass.find(year => year.PK_Class_ID === object.PK_Class_ID);\n      //             if (!isExist) {\n      //                 uniqueClass.push(object);\n      //             }\n      //         });\n      //         this.classesTable = uniqueClass;\n      //     }\n      //     if (tagResponse.LevelsTable && tagResponse.LevelsTable.Table) {\n      //\n      //         let uniqueLevel = [];\n      //         tagResponse.LevelsTable.Table.forEach(object => {\n      //             const isExist = uniqueLevel.find(level => level.SC_FK_CourseID === object.SC_FK_CourseID);\n      //             if (!isExist) {\n      //                 uniqueLevel.push(object);\n      //             }\n      //         });\n      //\n      //         this.levelsTable = uniqueLevel;\n      //     }\n      //     if (tagResponse.StudentTable && tagResponse.StudentTable.Table) {\n      //         let uniqueStudent = [];\n      //         tagResponse.StudentTable.Table.forEach(object => {\n      //             const isExist = uniqueStudent.find(student => student.Student_ID === object.Student_ID);\n      //             if (!isExist) {\n      //                 const selectedValue = {\n      //                     Student_ID: object.Student_ID,\n      //                     text: object.Full_Name,\n      //                     Sex: object.Sex,\n      //                     // email: object.email,\n      //                     Status: object.Status\n      //                 };\n      //                 uniqueStudent.push(selectedValue);\n      //             }\n      //         });\n      //         // this.studentTable = tagResponse.StudentTable.Table;\n      //         this.studentTable = uniqueStudent;\n      //     }\n      //\n      //     this.userType = Cookies.get('userTypeSession');\n      //\n      // } catch (e) {\n      //     console.log(e, '  errrr');\n      // }\n      // this.isLoading = false;\n\n      /*#endregion*/\n    },\n    loadBroadcast: function loadBroadcast() {\n      var _this6 = this;\n\n      this.isParent = Cookies.get('userTypeSession');\n      this.arrobj_BroadcastPost = [];\n      var promise_GetPosts = this.isParent === \"Parent\" ? DataSource.shared.getParentPost(10, null, \"BROADCAST\") : DataSource.shared.getStaffPost(10, null, \"BROADCAST\");\n      promise_GetPosts.then(function (response) {\n        if (response.Table) _this6.arrobj_BroadcastPost.push.apply(_this6.arrobj_BroadcastPost, response.Table);\n      });\n    },\n    hideComponentModal: function hideComponentModal() {\n      this.obj_SelectedComponent = false;\n      this.isModalOpen = false;\n      this.modalTitle = null;\n    },\n    displayResult: function displayResult(value) {\n      //TODO: Show Message\n      if (value == \"TRUE\") {\n        this.hideComponentModal();\n      } // this.success = \"Successfully posted\";\n      // else\n      // this.success = \"Something went wrong. Please inform the adminstrator\";\n\n    },\n    showUpdates: function showUpdates() {\n      this.modalTitle = \"Post\";\n      this.obj_SelectedComponent = updates;\n      this.isModalOpen = true;\n    },\n    showPortfolio: function showPortfolio() {\n      this.modalTitle = \"Portfolio\";\n      this.obj_SelectedComponent = portfolio;\n      this.isModalOpen = true;\n    },\n    showBroadcast: function showBroadcast() {\n      this.modalTitle = \"Broadcast\";\n      this.obj_SelectedComponent = broadcast;\n      this.isModalOpen = true;\n    },\n    inputChange: function inputChange(input) {\n      this.postContent = input;\n    },\n    showModal: function showModal() {\n      this.isModalOpen = true;\n    },\n    hideModal: function hideModal() {\n      this.isModalOpen = false;\n    },\n    onFileChanged: function onFileChanged(event) {\n      this.selectedFile = event.target.files;\n      this.getImagePreviews();\n    },\n    onUpload: function () {\n      var _onUpload = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function onUpload() {\n        return _onUpload.apply(this, arguments);\n      }\n\n      return onUpload;\n    }(),\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var studentsIds, saveResponse;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.$v.$touch();\n                this.error = \"\"; //this.results = \"<< Requesting.. >>\";\n\n                _context2.prev = 2;\n                studentsIds = this.tags.map(function (d) {\n                  return d.Student_ID;\n                });\n                _context2.next = 6;\n                return DataSource.shared.savePostUpdate(this.selectedFile, this.addPostContent, studentsIds, this.tagClassID, this.tagLevelID);\n\n              case 6:\n                saveResponse = _context2.sent;\n\n                if (!saveResponse) {\n                  _context2.next = 27;\n                  break;\n                }\n\n                _context2.t0 = saveResponse.code;\n                _context2.next = _context2.t0 === \"1\" ? 11 : _context2.t0 === \"88\" ? 21 : _context2.t0 === \"99\" ? 24 : 27;\n                break;\n\n              case 11:\n                this.isModalOpen = false; // reset all input filed to blank\n\n                this.selectedFile = null;\n                this.$refs.fileupload.value = \"\";\n                this.addPostContent = \"\";\n                this.tagAcademicYearID = null;\n                this.tagLevelID = null;\n                this.tagClassID = null;\n                this.results = \"Post Submitted\";\n                this.success = 'Post Submitted, activity will be active in a while';\n                return _context2.abrupt(\"break\", 27);\n\n              case 21:\n                this.results = \"Please Login to submit post\";\n                this.systemmsgError = true;\n                return _context2.abrupt(\"break\", 27);\n\n              case 24:\n                this.results = \"Please fill in content\";\n                this.systemmsgError = true;\n                return _context2.abrupt(\"break\", 27);\n\n              case 27:\n                _context2.next = 33;\n                break;\n\n              case 29:\n                _context2.prev = 29;\n                _context2.t1 = _context2[\"catch\"](2);\n                console.log(_context2.t1);\n                this.error = _context2.t1;\n\n              case 33:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[2, 29]]);\n      }));\n\n      function onSubmit() {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }(),\n    commentitemSubmit: function () {\n      var _commentitemSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3(postId, comment) {\n        var commentResponse;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.error = \"\"; //this.results = \"<< Requesting.. >>\";\n\n                _context3.prev = 1;\n                this.commentPostID = postId;\n                _context3.next = 5;\n                return DataSource.shared.saveComment(this.commentPostID, comment);\n\n              case 5:\n                commentResponse = _context3.sent;\n\n                if (!commentResponse) {\n                  _context3.next = 20;\n                  break;\n                }\n\n                _context3.t0 = commentResponse.code;\n                _context3.next = _context3.t0 === \"1\" ? 10 : _context3.t0 === \"88\" ? 14 : _context3.t0 === \"99\" ? 17 : 20;\n                break;\n\n              case 10:\n                // reset all input filed to blank\n                this.commentPostID = null;\n                this.commentPostContent = \"\"; //    const newComment = await DataSource.shared.getComment(commentPostID);\n\n                this.list.find(function (item) {\n                  if (item.PostID === commentPostID) {\n                    item.commentItems = newComment.Table;\n                    return item;\n                  }\n                }); // this.$forceUpdate();\n                // this.results = `Post Submitted`;\n                // this.success = 'Post Submitted, activity will be active in a while';\n\n                return _context3.abrupt(\"break\", 20);\n\n              case 14:\n                this.results = \"Please Login to submit post\";\n                this.systemmsgError = true;\n                return _context3.abrupt(\"break\", 20);\n\n              case 17:\n                this.results = \"Please fill in content\";\n                this.systemmsgError = true;\n                return _context3.abrupt(\"break\", 20);\n\n              case 20:\n                _context3.next = 26;\n                break;\n\n              case 22:\n                _context3.prev = 22;\n                _context3.t1 = _context3[\"catch\"](1);\n                console.log(_context3.t1);\n                this.error = _context3.t1;\n\n              case 26:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[1, 22]]);\n      }));\n\n      function commentitemSubmit(_x, _x2) {\n        return _commentitemSubmit.apply(this, arguments);\n      }\n\n      return commentitemSubmit;\n    }(),\n    commentEdit: function () {\n      var _commentEdit = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4(PoCmID, PoCmContent) {\n        var commentResponse;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.error = \"\";\n                _context4.prev = 1;\n                this.actionMode = \"Edit\";\n                _context4.next = 5;\n                return DataSource.shared.editComment(PoCmID, PoCmContent, this.actionMode);\n\n              case 5:\n                commentResponse = _context4.sent;\n\n                if (!commentResponse) {\n                  _context4.next = 21;\n                  break;\n                }\n\n                _context4.t0 = commentResponse.code;\n                _context4.next = _context4.t0 === \"1\" ? 10 : _context4.t0 === \"88\" ? 15 : _context4.t0 === \"99\" ? 18 : 21;\n                break;\n\n              case 10:\n                // reset all input filed to blank\n                this.commentPostID = null;\n                this.commentPostContent = \"\";\n                this.readonly = true; // const newComment = await DataSource.shared.getComment(PoCmID);\n\n                this.list.find(function (item) {\n                  if (item.PostID === PoCmID) {\n                    item.commentItems = newComment.Table;\n                    return item;\n                  }\n                });\n                return _context4.abrupt(\"break\", 21);\n\n              case 15:\n                this.results = \"Please Login to submit post\";\n                this.systemmsgError = true;\n                return _context4.abrupt(\"break\", 21);\n\n              case 18:\n                this.results = \"Please fill in content\";\n                this.systemmsgError = true;\n                return _context4.abrupt(\"break\", 21);\n\n              case 21:\n                _context4.next = 27;\n                break;\n\n              case 23:\n                _context4.prev = 23;\n                _context4.t1 = _context4[\"catch\"](1);\n                console.log(_context4.t1);\n                this.error = _context4.t1;\n\n              case 27:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[1, 23]]);\n      }));\n\n      function commentEdit(_x3, _x4) {\n        return _commentEdit.apply(this, arguments);\n      }\n\n      return commentEdit;\n    }(),\n    okClick: function () {\n      var _okClick = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5() {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      function okClick() {\n        return _okClick.apply(this, arguments);\n      }\n\n      return okClick;\n    }(),\n    commentDelete: function () {\n      var _commentDelete = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee6(PoCmID, PoCmContent, postId) {\n        var deleteCommentResponse;\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                this.error = \"\";\n                _context6.prev = 1;\n                this.actionMode = \"Delete\";\n                _context6.next = 5;\n                return DataSource.shared.deleteComment(PoCmID, PoCmContent, this.actionMode);\n\n              case 5:\n                deleteCommentResponse = _context6.sent;\n\n                if (!deleteCommentResponse) {\n                  _context6.next = 20;\n                  break;\n                }\n\n                _context6.t0 = deleteCommentResponse.code;\n                _context6.next = _context6.t0 === \"1\" ? 10 : _context6.t0 === \"88\" ? 14 : _context6.t0 === \"99\" ? 17 : 20;\n                break;\n\n              case 10:\n                // reset all input filed to blank\n                this.commentPostID = null;\n                this.commentPostContent = \"\"; //     const newComment = await DataSource.shared.getComment(PoCmID);\n\n                this.list.find(function (item) {\n                  if (item.PostID === postId) {\n                    item.commentItems = item.commentItems.filter(function (comment) {\n                      return comment.PoCmID !== PoCmID;\n                    });\n                    return item;\n                  }\n                }); //  this.$forceUpdate();\n\n                return _context6.abrupt(\"break\", 20);\n\n              case 14:\n                this.results = \"Please Login to submit post\";\n                this.systemmsgError = true;\n                return _context6.abrupt(\"break\", 20);\n\n              case 17:\n                this.results = \"Please fill in content\";\n                this.systemmsgError = true;\n                return _context6.abrupt(\"break\", 20);\n\n              case 20:\n                _context6.next = 26;\n                break;\n\n              case 22:\n                _context6.prev = 22;\n                _context6.t1 = _context6[\"catch\"](1);\n                console.log(_context6.t1);\n                this.error = _context6.t1;\n\n              case 26:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[1, 22]]);\n      }));\n\n      function commentDelete(_x5, _x6, _x7) {\n        return _commentDelete.apply(this, arguments);\n      }\n\n      return commentDelete;\n    }(),\n    disableReadonly: function () {\n      var _disableReadonly = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee7(PoCmID) {\n        return regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                this.error = \"\";\n\n                try {\n                  this.readonly = false;\n                  this.checkidcomment = PoCmID;\n                } catch (e) {\n                  console.log(e);\n                  this.error = e;\n                }\n\n              case 2:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function disableReadonly(_x8) {\n        return _disableReadonly.apply(this, arguments);\n      }\n\n      return disableReadonly;\n    }(),\n    getImagePreviews: function getImagePreviews() {\n      var _this7 = this;\n\n      var _loop = function _loop(i) {\n        /*\n          Ensure the file is an image file\n        */\n        if (/\\.(jpe?g|png|gif)$/i.test(_this7.selectedFile[i].name)) {\n          /*\n            Create a new FileReader object\n          */\n          var reader = new FileReader();\n          /*\n            Add an event listener for when the file has been loaded\n            to update the src on the file preview.\n          */\n\n          reader.addEventListener(\"load\", function () {\n            this.$refs['image' + _parseInt(i)][0].src = reader.result;\n          }.bind(_this7), false);\n          /*\n            Read the data for the file in through the reader. When it has\n            been loaded, we listen to the event propagated and set the image\n            src to what was loaded from the reader.\n          */\n\n          reader.readAsDataURL(_this7.selectedFile[i]);\n        }\n      };\n\n      /*\n        Iterate over all of the files and generate an image preview for each one.\n      */\n      for (var i = 0; i < this.selectedFile.length; i++) {\n        _loop(i);\n      }\n    },\n    clearPreview: function clearPreview() {\n      this.selectedFile = null;\n    }\n  },\n  validations: {\n    updateContent: {\n      required: required // minLength: minLength(4)\n\n    }\n  }\n}, \"computed\", {\n  filteredBroadcastPost: function filteredBroadcastPost() {\n    return this.arrobj_BroadcastPost.slice(0, 3);\n  }\n});",{"version":3,"sources":["StaffPost.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div id=\"staff-post\" class=\"container\">\r\n        <div class=\"profile-student\" v-if=\"isParent === 'Parent' \">\r\n            <div class=\"profile-student__wrapper\">\r\n                <img src=\"../assets/boy.png\">\r\n                <span class=\"studentName\"><strong>Alexander</strong><br/>Student Name</span>\r\n                <span class=\"teacherName\"><strong>Alice</strong><br/>Teacher Name</span>\r\n                <span class=\"\"><strong>SG-016-16-0038</strong><br/>Student ID</span>\r\n                <span class=\"\"><strong>Year 2018: 01/01/2018 - 31/12/2018</strong><br/>Academic Year</span>\r\n                <span class=\"\"><strong>Class One</strong><br/>Class</span>\r\n            </div>\r\n        </div>\r\n        <div class=\"whitespace-30\"></div>\r\n        <div class=\"row\">\r\n            <!--<b>result:</b> {{staffPostResults}}-->\r\n            <vs-col vs-justify=\"center\" vs-w=\"4\" class=\"right-sideBar\">\r\n                <div class=\"dashboard-logo mt-4 mb-3\"><img src=\"../assets/kagami-long.png\"/></div>\r\n                <div class=\"sideBarSection__wrapper\">\r\n                    <div class=\"sideBarSection__item\">\r\n                        <div class=\"subtitle\">\r\n                            <h6>Communities</h6>\r\n                        </div>\r\n                        <div class=\"desc flex\">\r\n                            <ul>\r\n                                <li><span class=\"sideBarSection__img\"><img src=\"../assets/boy.png\"></span> N2 Inquirers\r\n                                    Class\r\n                                </li>\r\n                                <li><span class=\"sideBarSection__img\"><img src=\"../assets/boy.png\"></span> K2 Explorers\r\n                                    Class\r\n                                </li>\r\n                                <li><span class=\"sideBarSection__img\"><img src=\"../assets/boy.png\"></span> PSA Group\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"sideBarSection__item\">\r\n                        <div class=\"subtitle\">\r\n                            <h6>Upcoming Events</h6>\r\n                        </div>\r\n                        <div class=\"desc\">\r\n                            <ul>\r\n                                <li>22 DEC Christmas Party</li>\r\n                                <li>24 DEC Half Day Closure</li>\r\n                                <li>25 DEC Full Day Closure</li>\r\n                                <li>30 DEC Celebration of learning</li>\r\n                                <li>31 DEC Full Day Closure</li>\r\n                                <li>01 JAN Full Day Closure</li>\r\n                                <li>07 JAN Start of Term 1</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </vs-col>\r\n            <div class=\"col-md-8 mt-4 pb-4\">\r\n                <div class=\"notification\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-9\">\r\n                            <h4 class=\"text-left mb-3\">Broadcast</h4>\r\n                        </div>\r\n                        <div class=\"col-md-3\">\r\n                            <button @click=\"showMoreBroadcastModal\" class=\"btn btn-link\">Show More <i\r\n                                    class=\"fa fa-ellipsis-h\" aria-hidden=\"true\"></i></button>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-4\" v-for=\"obj_BroadcastPost of filteredBroadcastPost\"\r\n                             :key=\"obj_BroadcastPost.id\">\r\n                            <div class=\"notification__item\">\r\n                                <div class=\"desc\">\r\n                                    <span>{{obj_BroadcastPost.PostContent}}</span>\r\n                                </div>\r\n                                <div class=\"notification-item__footer\">\r\n                                    <div class=\"notification__footer-item\">\r\n                                        {{obj_BroadcastPost.CONname}}<br/>\r\n                                        {{obj_BroadcastPost.PostCreatedBy}}\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"notification-item__footer\">\r\n                                    <div class=\"notification__footer-item\">\r\n                                        <button class=\"btn text-center\">Mark as read</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!--<div class=\"notification\">\r\n                    <h4 class=\"text-left mb-3\">Important Notification</h4>\r\n                    <div class=\"row\">\r\n                        <div class=\" col-md-4\">\r\n                            <div class=\"notification__item\">\r\n                                <div class=\"subtitle\">\r\n                                    <h6>Parent Teacher Conference 2018</h6>\r\n                                </div>\r\n                                <div class=\"desc\">\r\n                                    <span>Please sign up for a slot for the Parent Teachers Conference by 30 Nov 2018.</span>\r\n                                </div>\r\n                                <div class=\"notification-item__footer \">\r\n                                    <div class=\"notification__footer-item\">\r\n                                        Ms Lisa<br/>\r\n                                        23 February at 19:36\r\n                                    </div>\r\n                                    <div class=\"notification__footer-item\">\r\n                                        <button class=\"btn text-center\">Mark as read</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div class=\" col-md-4\">\r\n                            <div class=\"notification__item\">\r\n                                <div class=\"subtitle\">\r\n                                    <h6>Parent Teacher Conference 2018</h6>\r\n                                </div>\r\n                                <div class=\"desc\">\r\n                                    <span>Please sign up for a slot for the Parent Teachers Conference by 30 Nov 2018.</span>\r\n                                </div>\r\n                                <div class=\"notification-item__footer \">\r\n                                    <div class=\"notification__footer-item\">\r\n                                        Ms Lisa<br/>\r\n                                        23 February at 19:36\r\n                                    </div>\r\n                                    <div class=\"notification__footer-item\">\r\n                                        <button class=\"btn text-center\">Mark as read</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\" col-md-4\">\r\n                            <div class=\"notification__item\">\r\n                                <div class=\"subtitle\">\r\n                                    <h6>Parent Teacher Conference 2018</h6>\r\n                                </div>\r\n                                <div class=\"desc\">\r\n                                    <span>Please sign up for a slot for the Parent Teachers Conference by 30 Nov 2018.</span>\r\n                                </div>\r\n                                <div class=\"notification-item__footer \">\r\n                                    <div class=\"notification__footer-item\">\r\n                                        Ms Lisa<br/>\r\n                                        23 February at 19:36\r\n                                    </div>\r\n                                    <div class=\"notification__footer-item\">\r\n                                        <button class=\"btn text-center\">Mark as read</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>-->\r\n\r\n                <div class=\"feed-header\">\r\n                    <h4 class=\"text-left\">Activity</h4>\r\n                    <div class=\"addPost\" :class=\"{'d-none' :userType==='Teacher'}\">\r\n                        <b-btn v-b-modal.modal1 @click=\"showBroadcast\"><i class=\"fa fa-bullhorn\" aria-hidden=\"true\"></i>\r\n                            <span>Broadcast</span></b-btn>\r\n                    </div>\r\n                    <div class=\"addPost\" :class=\"{'d-none' :userType==='Teacher'}\">\r\n                        <b-btn v-b-modal.modal1 @click=\"showUpdates\"><i class=\"fa fa-newspaper-o\"\r\n                                                                        aria-hidden=\"true\"></i> <span>Updates</span>\r\n                        </b-btn>\r\n                    </div>\r\n                    <div class=\"addPost\" :class=\"{'d-none' :userType==='Teacher'}\">\r\n                        <b-btn v-b-modal.modal1 @click=\"showPortfolio\"><i class=\"fa fa-book\" aria-hidden=\"true\"></i>\r\n                            <span>Portfolio</span></b-btn>\r\n                    </div>\r\n                </div>\r\n                <div class=\"success\">{{success}}</div>\r\n                <div v-if=\"isLoading\">Loading...</div>\r\n\r\n                <div class=\"\" v-for=\"object of list\"\r\n                     :key=\"`${object.PostID}${object.commentItems ? object.commentItems.length : ''}`\">\r\n                    <PostComponent\r\n                            :parent-post=\"object\"\r\n                            @commentitemSubmit=\"commentitemSubmit\"\r\n                            @commentEdit=\"commentEdit\"\r\n                            @commentDelete=\"commentDelete\"\r\n                            :commentPostContent=\"commentPostContent\"\r\n                            :PostID=\"commentPostID\"\r\n                            @loadPosts=\"loadPosts\"\r\n                    />\r\n                    <hr/>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        <b-modal id=\"modal_ShowMoreBroadcast\" ref=\"modal_ShowMoreBroadcast\" size=\"lg\" hide-footer title=\"Broadcast\">\r\n            <button class=\"btn btn-primary\" @click=\"showBroadcast\"><i class=\"el-icon-bell\"></i> Create Broadcast\r\n            </button>\r\n            <div class=\"\" v-for=\"object of arrobj_BroadcastPost\" :key=\"object.id\">\r\n                <BroadcastList :parent-post=\"object\" :hideComment=\"true\" :hideSubmenu=\"true\"/>\r\n                <!--<hr/>-->\r\n            </div>\r\n        </b-modal>\r\n        <b-modal id=\"modal1\" size=\"lg\" hide-footer :title=\"modalTitle ? modalTitle : 'Post'\" v-model=\"isModalOpen\"\r\n                 @hidden=\"hideComponentModal\">\r\n            <el-button-group class=\"mb-4 modal-quicklink\">\r\n                <el-button type=\"primary\" @click=\"showBroadcast\" :class=\"{'active':modalTitle === 'Broadcast'}\"><i\r\n                        class=\"fa fa-bullhorn\" aria-hidden=\"true\"></i> <span> Broadcast</span></el-button>\r\n                <el-button type=\"primary\" @click=\"showUpdates\" :class=\"{'active':modalTitle === 'Post'}\"><i\r\n                        class=\"fa fa-newspaper-o\" aria-hidden=\"true\"></i> <span> Updates</span></el-button>\r\n                <el-button type=\"primary\" @click=\"showPortfolio\" :class=\"{'active':modalTitle === 'Portfolio'}\"><i\r\n                        class=\"fa fa-book\" aria-hidden=\"true\"></i> <span> Portfolio</span></el-button>\r\n            </el-button-group>\r\n            <component\r\n                    @result=\"displayResult\"\r\n                    :is=\"obj_SelectedComponent\"\r\n                    @loadPosts=\"loadPosts\"\r\n            ></component>\r\n        </b-modal>\r\n        <button @click=\"loadPosts\" v-if=\"bool_ShowRefresh\" class=\"btn btn-secondary\"\r\n                style=\"position: fixed; right: 20px; bottom: 20px\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i>\r\n        </button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import DataSource from \"../data/datasource\";\r\n    import {required, minLength} from 'vuelidate/lib/validators';\r\n    import isImage from \"is-image\";\r\n    import PostComponent from \"../components/postCompnent\";\r\n    import BroadcastList from \"../components/BroadcastListCompnent\";\r\n    import VueTagsInput from '@johmun/vue-tags-input';\r\n    import portfolio from \"../components/Post_Portfolio_Component\";\r\n    import updates from \"../components/Post_Updates_Component.vue\";\r\n    import broadcast from \"../components/Post_Broadcast_Component.vue\";\r\n    import $ from 'jquery';\r\n    import Cookies from \"js-cookie\";\r\n\r\n\r\n    // import RichTextEditor from \"../components/RichTextEditor/RichTextEditor\";\r\n\r\n    export default {\r\n        name: 'staffPost',\r\n        components: {\r\n            PostComponent,\r\n            VueTagsInput,\r\n            // At,\r\n            BroadcastList\r\n        },\r\n        data() {\r\n            return {\r\n                modalTitle: null,\r\n                files: [],\r\n                systemmsgError: false,\r\n                isModalOpen: false,\r\n                token: null,\r\n                userType: \"\",\r\n                list: [],\r\n                error: \"\",\r\n                staffPostResults: \"\",\r\n                results: \"\",\r\n                postContent: \"\",\r\n                addPostContent: \"\",\r\n                tagAcademicYearID: \"\",\r\n                profolio: \"No\",\r\n                tagClassID: \"\",\r\n                tagLevelID: \"\",\r\n                // files: [],\r\n                content: '',\r\n                selectedFile: null,\r\n                success: \"\",\r\n                isLoading: true,\r\n                saveResponse: \"\",\r\n                PostItemPath: \"\",\r\n                tagResponseText: \"123\",\r\n                academicYearTable: [],\r\n                classesTable: [],\r\n                levelsTable: [],\r\n                studentTable: [],\r\n\r\n                PostID: \"\",\r\n                commentPostContent: \"\",\r\n                commentPostID: \"\",\r\n                actionMode: \"\",\r\n                readonly: true,\r\n                checkidcomment: \"\",\r\n                showDeleteModal: false,\r\n                query: '',\r\n                tag: '',\r\n                tags: [],\r\n                isParent: \"\",\r\n\r\n                obj_SelectedComponent: false,\r\n                int_NumberOfPost: 3,\r\n\r\n                arrobj_BroadcastPost: [],\r\n                intervalCheckNew: {},\r\n                bool_ShowRefresh: false,\r\n            };\r\n        },\r\n        filters: {\r\n            stringify(value) {\r\n                return JSON.stringify(value, null, 2);\r\n            }\r\n        },\r\n        computed: {\r\n            items() {\r\n                return this.studentTable.filter(i => {\r\n                    return i.text.toLowerCase().indexOf(this.tag.toLowerCase()) !== -1;\r\n                });\r\n            },\r\n        },\r\n        /*async mounted() {\r\n            this.loadPosts();\r\n        },*/\r\n        mounted() {\r\n            const self = this;\r\n            this.loadPosts();\r\n            this.loadBroadcast();\r\n            /*#region Scroll Loader Functions*/\r\n            $(window).scroll(self.debounce(() => {\r\n                    if (self.getScrollPercent() >= 50) {\r\n                        this.isParent = Cookies.get('userTypeSession');\r\n                        let obj_LastPost = !this.isNull(this.list) ? this.list[this.list.length - 1] : \"\";\r\n                        let promise_GetPosts = this.isParent === \"Parent\" ? DataSource.shared.getParentPost(this.int_NumberOfPost, obj_LastPost.PostID) : DataSource.shared.getStaffPost(this.int_NumberOfPost, obj_LastPost.PostID);\r\n\r\n\r\n                        promise_GetPosts.then((response) => {\r\n                            if (response.Table) {\r\n                                this.list.push.apply(this.list, response.Table);\r\n                            }\r\n                        });\r\n\r\n                        /*if (this.isParent === \"Parent\") {\r\n                            DataSource.shared.getParentPost(this.int_NumberOfPost, str_LastPostID).then((response) => {\r\n                                if (response.Table) {\r\n                                    for (let item of response.Table) {\r\n                                        this.list.push.apply(this.list, response.Table);\r\n\r\n                                        DataSource.shared.getPostFile(item.PostID).then((fileRes) => {\r\n                                            if (fileRes.Table) {\r\n                                                item.postFiles = fileRes.Table;\r\n                                            }\r\n                                            item.commentPostID = item.PostID;\r\n                                        }).then(() => {\r\n                                            DataSource.shared.getComment(item.PostID).then((getCommentResponse) => {\r\n                                                if (getCommentResponse.Table) {\r\n                                                    item.commentItems = getCommentResponse.Table;\r\n                                                    item.collapsed = true;\r\n                                                }\r\n                                            });\r\n                                        });\r\n                                    }\r\n                                }\r\n                            });\r\n                        } else {\r\n                            DataSource.shared.getStaffPost(this.int_NumberOfPost, str_LastPostID).then((response) => {\r\n                                if (response.Table) {\r\n                                    this.list.push.apply(this.list, response.Table);\r\n\r\n                                    for (let item of response.Table) {\r\n                                        DataSource.shared.getPostFile(item.PostID).then((fileRes) => {\r\n                                            if (fileRes.Table) {\r\n                                                item.postFiles = fileRes.Table;\r\n                                            }\r\n                                            item.commentPostID = item.PostID;\r\n                                        }).then(() => {\r\n                                            DataSource.shared.getComment(item.PostID).then((getCommentResponse) => {\r\n                                                if (getCommentResponse.Table) {\r\n                                                    item.commentItems = getCommentResponse.Table;\r\n                                                    item.collapsed = true;\r\n                                                }\r\n                                            });\r\n                                        });\r\n                                    }\r\n                                }\r\n                            });\r\n                        }*/\r\n                    }\r\n                }, 250\r\n            ));\r\n            /*#endregion*/\r\n        },\r\n        methods: {\r\n            initIntervalCheckNew() {\r\n                if (!this.bool_ShowRefresh)\r\n                    this.intervalCheckNew = setInterval(() => {\r\n                        this.CheckNew();\r\n                    }, 300000);\r\n            },\r\n\r\n            CheckNew() {\r\n                this.isParent = Cookies.get('userTypeSession');\r\n\r\n                let promise_GetPosts = this.isParent === \"Parent\" ?\r\n                    DataSource.shared.getParentPost(1, null, null)\r\n                    : DataSource.shared.getStaffPost(1, null, null);\r\n\r\n                promise_GetPosts.then((response) => {\r\n                    if (response.Table && (new Date(response.Table[0].PostCreatedDate)) > (new Date(this.list[0].PostCreatedDate))) {\r\n                        this.bool_ShowRefresh = true;\r\n                        clearInterval(this.intervalCheckNew);\r\n                    }\r\n                });\r\n            },\r\n\r\n            showMoreBroadcastModal() {\r\n                this.$refs.modal_ShowMoreBroadcast.show();\r\n            },\r\n\r\n            isNull(obj) {\r\n                return (obj === null || obj === undefined || obj === \"undefined\" || obj.length === 0 || obj === \"\");\r\n            }\r\n            ,\r\n            /*#region Scroll Loader Functions*/\r\n            getScrollPercent() {\r\n                //Credits to Phil Ricketts @ stackoverflow\r\n                let height = document.documentElement,\r\n                    body = document.body,\r\n                    scrollTop = 'scrollTop',\r\n                    scrollHeight = 'scrollHeight';\r\n\r\n                return (height[scrollTop] || body[scrollTop]) / ((height[scrollHeight] || body[scrollHeight]) - height.clientHeight) * 100;\r\n            }\r\n            ,\r\n            isScrollable() {\r\n                return $(document).height() > $(window).height();\r\n            }\r\n            ,\r\n            debounce(func, wait, immediate) {\r\n                // Returns a function, that, as long as it continues to be invoked, will not\r\n                // be triggered. The function will be called after it stops being called for\r\n                // N milliseconds. If `immediate` is passed, trigger the function on the\r\n                // leading edge, instead of the trailing.\r\n                let timeout, result;\r\n                let self = this;\r\n\r\n                let later = function (context, args) {\r\n                    timeout = null;\r\n                    if (args) result = func.apply(context, args);\r\n                };\r\n\r\n                let debounced = self.restArguments(function (args) {\r\n                    if (timeout) clearTimeout(timeout);\r\n                    if (immediate) {\r\n                        let callNow = !timeout;\r\n                        timeout = setTimeout(later, wait);\r\n                        if (callNow) result = func.apply(this, args);\r\n                    } else {\r\n                        timeout = self.delay(later, wait, this, args);\r\n                    }\r\n\r\n                    return result;\r\n                });\r\n\r\n                debounced.cancel = function () {\r\n                    clearTimeout(timeout);\r\n                    timeout = null;\r\n                };\r\n\r\n                return debounced;\r\n            }\r\n            ,\r\n            delay(func, wait, ...args) {\r\n                // Lodash Delay\r\n                /**\r\n                 * Invokes `func` after `wait` milliseconds. Any additional arguments are\r\n                 * provided to `func` when it's invoked.\r\n                 *\r\n                 * @since 0.1.0\r\n                 * @category Function\r\n                 * @param {Function} func The function to delay.\r\n                 * @param {number} wait The number of milliseconds to delay invocation.\r\n                 * @param {...*} [args] The arguments to invoke `func` with.\r\n                 * @returns {number} Returns the timer id.\r\n                 * @example\r\n                 *\r\n                 * delay(text => console.log(text), 1000, 'later')\r\n                 * // => Logs 'later' after one second.\r\n                 */\r\n                if (typeof func != 'function') {\r\n                    throw new TypeError('Expected a function');\r\n                }\r\n                return setTimeout(func, +wait || 0, ...args);\r\n            }\r\n            ,\r\n            restArguments(func, startIndex) {\r\n                // Some functions take a variable number of arguments, or a few expected\r\n                // arguments at the beginning and then a variable number of values to operate\r\n                // on. This helper accumulates all remaining arguments past the function?s\r\n                // argument length (or an explicit `startIndex`), into an array that becomes\r\n                // the last argument. Similar to ES6?s \"rest parameter\".\r\n                startIndex = startIndex == null ? func.length - 1 : +startIndex;\r\n                return function () {\r\n                    let length = Math.max(arguments.length - startIndex, 0),\r\n                        rest = Array(length),\r\n                        index = 0;\r\n                    for (; index < length; index++) {\r\n                        rest[index] = arguments[index + startIndex];\r\n                    }\r\n                    switch (startIndex) {\r\n                        case 0:\r\n                            return func.call(this, rest);\r\n                        case 1:\r\n                            return func.call(this, arguments[0], rest);\r\n                        case 2:\r\n                            return func.call(this, arguments[0], arguments[1], rest);\r\n                    }\r\n                    let args = Array(startIndex + 1);\r\n                    for (index = 0; index < startIndex; index++) {\r\n                        args[index] = arguments[index];\r\n                    }\r\n                    args[startIndex] = rest;\r\n                    return func.apply(this, args);\r\n                };\r\n            }\r\n            ,\r\n            /*#endregion*/\r\n            loadPosts() {\r\n                // this.showSession()\r\n                // user menu\r\n                $(\"html, body\").animate({scrollTop: 0}, \"fast\");\r\n                this.bool_ShowRefresh = false;\r\n                this.initIntervalCheckNew();\r\n                this.isParent = Cookies.get('userTypeSession');\r\n                this.list = [];\r\n                let promise_GetPosts = this.isParent === \"Parent\" ?\r\n                    DataSource.shared.getParentPost(this.int_NumberOfPost)\r\n                    : DataSource.shared.getStaffPost(this.int_NumberOfPost);\r\n\r\n                promise_GetPosts.then((response) => {\r\n                    if (response.Table)\r\n                        this.list.push.apply(this.list, response.Table);\r\n\r\n                    this.isLoading = false;\r\n                });\r\n\r\n\r\n                /*#region Past revision*/\r\n                /*for (let item of response.Table) {\r\n                DataSource.shared.getPostFile(item.PostID).then((fileRes) => {\r\n                    if (fileRes.Table) {\r\n                        item.postFiles = fileRes.Table;\r\n                    }\r\n                    item.commentPostID = item.PostID;\r\n                }).then(() => {\r\n                    DataSource.shared.getComment(item.PostID).then((getCommentResponse) => {\r\n                        if (getCommentResponse.Table) {\r\n                            item.commentItems = getCommentResponse.Table;\r\n                            item.collapsed = true;\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n\r\n            this.list = response.Table;\r\n        }*/\r\n\r\n                // if (this.isParent === \"Parent\") {\r\n                //     DataSource.shared.getParentPost(this.int_NumberOfPost).then((response) => {\r\n                //         this.list = [];\r\n                //         if (response.Table) {\r\n                //             for (let item of response.Table) {\r\n                //                 this.list.push.apply(this.list, response.Table);\r\n                //\r\n                //                 DataSource.shared.getPostFile(item.PostID).then((fileRes) => {\r\n                //                     if (fileRes.Table) {\r\n                //                         item.postFiles = fileRes.Table;\r\n                //                     }\r\n                //                     item.commentPostID = item.PostID;\r\n                //                 }).then(() => {\r\n                //                     DataSource.shared.getComment(item.PostID).then((getCommentResponse) => {\r\n                //                         if (getCommentResponse.Table) {\r\n                //                             item.commentItems = getCommentResponse.Table;\r\n                //                             item.collapsed = true;\r\n                //                         }\r\n                //                     });\r\n                //                 });\r\n                //             }\r\n                //         }\r\n                //     });\r\n                // } else {\r\n                //\r\n                // }\r\n\r\n                // if (isParent === \"Parent\") {\r\n                //     let response = await DataSource.shared.getParentPost(this.int_NumberOfPost, \"\");\r\n                //     if (response.Table) {\r\n                //         for (let item of response.Table) {\r\n                //             const fileRes = await DataSource.shared.getPostFile(item.PostID);\r\n                //             const getCommentResponse = await DataSource.shared.getComment(item.PostID);\r\n                //             if (getCommentResponse.Table) {\r\n                //                 item.commentItems = getCommentResponse.Table;\r\n                //                 item.collapsed = true;\r\n                //             }\r\n                //             if (fileRes.Table) {\r\n                //                 item.postFiles = fileRes.Table;\r\n                //             }\r\n                //             item.commentPostID = item.PostID;\r\n                //         }\r\n                //         this.list = response.Table;\r\n                //     }\r\n                // } else {\r\n                //     let response = await DataSource.shared.getStaffPost(this.int_NumberOfPost, \"\");\r\n                //     if (response.Table) {\r\n                //         for (let item of response.Table) {\r\n                //             const fileRes = await DataSource.shared.getPostFile(item.PostID);\r\n                //             const getCommentResponse = await DataSource.shared.getComment(item.PostID);\r\n                //             if (getCommentResponse.Table) {\r\n                //                 item.commentItems = getCommentResponse.Table;\r\n                //                 item.collapsed = true;\r\n                //             }\r\n                //             if (fileRes.Table) {\r\n                //                 item.postFiles = fileRes.Table;\r\n                //             }\r\n                //             item.commentPostID = item.PostID;\r\n                //         }\r\n                //         this.list = response.Table;\r\n                //     }\r\n                // }\r\n\r\n\r\n                // try {\r\n                //     let tagResponse = await DataSource.shared.getPostDropdown();\r\n                //\r\n                //     if (tagResponse.AcademicYearTable && tagResponse.AcademicYearTable.Table) {\r\n                //         let uniqueYears = [];\r\n                //         tagResponse.AcademicYearTable.Table.forEach(object => {\r\n                //             const isExist = uniqueYears.find(year => year.SMT_Code === object.SMT_Code);\r\n                //             if (!isExist) {\r\n                //                 uniqueYears.push(object);\r\n                //             }\r\n                //         });\r\n                //         this.academicYearTable = uniqueYears;\r\n                //     }\r\n                //     if (tagResponse.ClassesTable && tagResponse.ClassesTable.Table) {\r\n                //         let uniqueClass = [];\r\n                //         tagResponse.ClassesTable.Table.forEach(object => {\r\n                //             const isExist = uniqueClass.find(year => year.PK_Class_ID === object.PK_Class_ID);\r\n                //             if (!isExist) {\r\n                //                 uniqueClass.push(object);\r\n                //             }\r\n                //         });\r\n                //         this.classesTable = uniqueClass;\r\n                //     }\r\n                //     if (tagResponse.LevelsTable && tagResponse.LevelsTable.Table) {\r\n                //\r\n                //         let uniqueLevel = [];\r\n                //         tagResponse.LevelsTable.Table.forEach(object => {\r\n                //             const isExist = uniqueLevel.find(level => level.SC_FK_CourseID === object.SC_FK_CourseID);\r\n                //             if (!isExist) {\r\n                //                 uniqueLevel.push(object);\r\n                //             }\r\n                //         });\r\n                //\r\n                //         this.levelsTable = uniqueLevel;\r\n                //     }\r\n                //     if (tagResponse.StudentTable && tagResponse.StudentTable.Table) {\r\n                //         let uniqueStudent = [];\r\n                //         tagResponse.StudentTable.Table.forEach(object => {\r\n                //             const isExist = uniqueStudent.find(student => student.Student_ID === object.Student_ID);\r\n                //             if (!isExist) {\r\n                //                 const selectedValue = {\r\n                //                     Student_ID: object.Student_ID,\r\n                //                     text: object.Full_Name,\r\n                //                     Sex: object.Sex,\r\n                //                     // email: object.email,\r\n                //                     Status: object.Status\r\n                //                 };\r\n                //                 uniqueStudent.push(selectedValue);\r\n                //             }\r\n                //         });\r\n                //         // this.studentTable = tagResponse.StudentTable.Table;\r\n                //         this.studentTable = uniqueStudent;\r\n                //     }\r\n                //\r\n                //     this.userType = Cookies.get('userTypeSession');\r\n                //\r\n                // } catch (e) {\r\n                //     console.log(e, '  errrr');\r\n                // }\r\n                // this.isLoading = false;\r\n                /*#endregion*/\r\n            }\r\n            ,\r\n\r\n            loadBroadcast() {\r\n                this.isParent = Cookies.get('userTypeSession');\r\n                this.arrobj_BroadcastPost = [];\r\n\r\n                let promise_GetPosts = this.isParent === \"Parent\" ?\r\n                    DataSource.shared.getParentPost(10, null, \"BROADCAST\")\r\n                    : DataSource.shared.getStaffPost(10, null, \"BROADCAST\");\r\n\r\n                promise_GetPosts.then((response) => {\r\n                    if (response.Table)\r\n                        this.arrobj_BroadcastPost.push.apply(this.arrobj_BroadcastPost, response.Table);\r\n                });\r\n            },\r\n            hideComponentModal() {\r\n                this.obj_SelectedComponent = false;\r\n                this.isModalOpen = false;\r\n                this.modalTitle = null;\r\n            }\r\n            ,\r\n            displayResult(value) {\r\n                //TODO: Show Message\r\n                if (value == \"TRUE\") {\r\n                    this.hideComponentModal();\r\n                }\r\n                // this.success = \"Successfully posted\";\r\n                // else\r\n                // this.success = \"Something went wrong. Please inform the adminstrator\";\r\n\r\n\r\n            }\r\n            ,\r\n            showUpdates() {\r\n                this.modalTitle = \"Post\";\r\n                this.obj_SelectedComponent = updates;\r\n                this.isModalOpen = true;\r\n            }\r\n            ,\r\n            showPortfolio() {\r\n                this.modalTitle = \"Portfolio\";\r\n                this.obj_SelectedComponent = portfolio;\r\n                this.isModalOpen = true;\r\n            }\r\n            ,\r\n            showBroadcast() {\r\n                this.modalTitle = \"Broadcast\";\r\n                this.obj_SelectedComponent = broadcast;\r\n                this.isModalOpen = true;\r\n            },\r\n            inputChange(input) {\r\n                this.postContent = input;\r\n            }\r\n            ,\r\n            showModal() {\r\n                this.isModalOpen = true;\r\n            }\r\n            ,\r\n            hideModal() {\r\n                this.isModalOpen = false;\r\n            }\r\n            ,\r\n            onFileChanged(event) {\r\n                this.selectedFile = event.target.files;\r\n                this.getImagePreviews();\r\n            }\r\n            ,\r\n            async onUpload() {\r\n                // const formData = new FormData();\r\n                // formData.append('myFile', this.selectedFile, this.selectedFile.name);\r\n                // this.formData = formData;\r\n                // await DataSource.shared.uploadFile(this.selectedFile);\r\n            }\r\n            ,\r\n            async onSubmit() {\r\n                this.$v.$touch();\r\n                this.error = \"\";\r\n                //this.results = \"<< Requesting.. >>\";\r\n                try {\r\n                    const studentsIds = this.tags.map(d => d.Student_ID);\r\n                    const saveResponse = await DataSource.shared.savePostUpdate(this.selectedFile, this.addPostContent, studentsIds, this.tagClassID, this.tagLevelID);\r\n\r\n                    if (saveResponse) {\r\n                        switch (saveResponse.code) {\r\n                            case \"1\":\r\n                                this.isModalOpen = false;\r\n                                // reset all input filed to blank\r\n                                this.selectedFile = null;\r\n                                this.$refs.fileupload.value = \"\";\r\n                                this.addPostContent = \"\";\r\n                                this.tagAcademicYearID = null;\r\n\r\n                                this.tagLevelID = null;\r\n                                this.tagClassID = null;\r\n                                this.results = `Post Submitted`;\r\n                                this.success = 'Post Submitted, activity will be active in a while';\r\n                                break;\r\n                            case \"88\":\r\n                                this.results = `Please Login to submit post`;\r\n                                this.systemmsgError = true;\r\n                                break;\r\n                            case \"99\":\r\n                                this.results = `Please fill in content`;\r\n                                this.systemmsgError = true;\r\n                                break;\r\n                            // default:\r\n                            //     alert(\"Please try again later\");\r\n                            //     this.results = JSON.stringify(response);\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    console.log(e);\r\n                    this.error = e;\r\n                }\r\n\r\n            }\r\n            ,\r\n            async commentitemSubmit(postId, comment) {\r\n                this.error = \"\";\r\n                //this.results = \"<< Requesting.. >>\";\r\n                try {\r\n\r\n                    this.commentPostID = postId;\r\n                    const commentResponse = await DataSource.shared.saveComment(this.commentPostID, comment);\r\n\r\n\r\n                    if (commentResponse) {\r\n                        switch (commentResponse.code) {\r\n                            case \"1\":\r\n                                // reset all input filed to blank\r\n                                this.commentPostID = null;\r\n                                this.commentPostContent = \"\";\r\n\r\n                            //    const newComment = await DataSource.shared.getComment(commentPostID);\r\n\r\n                                this.list.find(item => {\r\n\r\n\r\n                                    if (item.PostID === commentPostID) {\r\n                                        item.commentItems = newComment.Table;\r\n                                        return item;\r\n                                    }\r\n\r\n                                });\r\n\r\n                               // this.$forceUpdate();\r\n\r\n\r\n                                // this.results = `Post Submitted`;\r\n                                // this.success = 'Post Submitted, activity will be active in a while';\r\n                                break;\r\n                            case \"88\":\r\n                                this.results = `Please Login to submit post`;\r\n                                this.systemmsgError = true;\r\n                                break;\r\n                            case \"99\":\r\n                                this.results = `Please fill in content`;\r\n                                this.systemmsgError = true;\r\n                                break;\r\n                            // default:\r\n                            //     alert(\"Please try again later\");\r\n                            //     this.results = JSON.stringify(response);\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    console.log(e);\r\n                    this.error = e;\r\n                }\r\n            }\r\n            ,\r\n            async commentEdit(PoCmID, PoCmContent) {\r\n                this.error = \"\";\r\n                try {\r\n                    this.actionMode = \"Edit\";\r\n                    const commentResponse = await DataSource.shared.editComment(PoCmID, PoCmContent, this.actionMode);\r\n                    if (commentResponse) {\r\n                        switch (commentResponse.code) {\r\n                            case \"1\":\r\n                                // reset all input filed to blank\r\n                                this.commentPostID = null;\r\n                                this.commentPostContent = \"\";\r\n                                this.readonly = true;\r\n\r\n                               // const newComment = await DataSource.shared.getComment(PoCmID);\r\n                                this.list.find(item => {\r\n\r\n                                    if (item.PostID === PoCmID) {\r\n                                        item.commentItems = newComment.Table;\r\n                                        return item;\r\n                                    }\r\n\r\n                                });\r\n                                break;\r\n                            case \"88\":\r\n                                this.results = `Please Login to submit post`;\r\n                                this.systemmsgError = true;\r\n                                break;\r\n                            case \"99\":\r\n                                this.results = `Please fill in content`;\r\n                                this.systemmsgError = true;\r\n                                break;\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    console.log(e);\r\n                    this.error = e;\r\n                }\r\n            }\r\n            ,\r\n            async okClick() {\r\n\r\n            }\r\n            ,\r\n            async commentDelete(PoCmID, PoCmContent, postId) {\r\n                this.error = \"\";\r\n                try {\r\n                    this.actionMode = \"Delete\";\r\n                    const deleteCommentResponse = await DataSource.shared.deleteComment(PoCmID, PoCmContent, this.actionMode);\r\n                    if (deleteCommentResponse) {\r\n                        switch (deleteCommentResponse.code) {\r\n                            case \"1\":\r\n                                // reset all input filed to blank\r\n                                this.commentPostID = null;\r\n                                this.commentPostContent = \"\";\r\n\r\n                           //     const newComment = await DataSource.shared.getComment(PoCmID);\r\n\r\n                                this.list.find(item => {\r\n\r\n                                    if (item.PostID === postId) {\r\n                                        item.commentItems = item.commentItems.filter(comment => comment.PoCmID !== PoCmID);\r\n                                        return item;\r\n                                    }\r\n\r\n                                });\r\n                              //  this.$forceUpdate();\r\n                                break;\r\n                            case \"88\":\r\n                                this.results = `Please Login to submit post`;\r\n                                this.systemmsgError = true;\r\n                                break;\r\n                            case \"99\":\r\n                                this.results = `Please fill in content`;\r\n                                this.systemmsgError = true;\r\n                                break;\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    console.log(e);\r\n                    this.error = e;\r\n                }\r\n            }\r\n            ,\r\n            async disableReadonly(PoCmID) {\r\n                this.error = \"\";\r\n                try {\r\n                    this.readonly = false;\r\n                    this.checkidcomment = PoCmID;\r\n                } catch (e) {\r\n                    console.log(e);\r\n                    this.error = e;\r\n                }\r\n            }\r\n            ,\r\n            getImagePreviews() {\r\n                /*\r\n                  Iterate over all of the files and generate an image preview for each one.\r\n                */\r\n                for (let i = 0; i < this.selectedFile.length; i++) {\r\n                    /*\r\n                      Ensure the file is an image file\r\n                    */\r\n                    if (/\\.(jpe?g|png|gif)$/i.test(this.selectedFile[i].name)) {\r\n                        /*\r\n                          Create a new FileReader object\r\n                        */\r\n                        let reader = new FileReader();\r\n\r\n                        /*\r\n                          Add an event listener for when the file has been loaded\r\n                          to update the src on the file preview.\r\n                        */\r\n                        reader.addEventListener(\"load\", function () {\r\n                            this.$refs['image' + parseInt(i)][0].src = reader.result;\r\n                        }.bind(this), false);\r\n\r\n                        /*\r\n                          Read the data for the file in through the reader. When it has\r\n                          been loaded, we listen to the event propagated and set the image\r\n                          src to what was loaded from the reader.\r\n                        */\r\n                        reader.readAsDataURL(this.selectedFile[i]);\r\n                    }\r\n                }\r\n            }\r\n            ,\r\n            clearPreview() {\r\n                this.selectedFile = null;\r\n            }\r\n            ,\r\n        }\r\n        ,\r\n        validations: {\r\n            updateContent: {\r\n                required\r\n                // minLength: minLength(4)\r\n            }\r\n        }\r\n        ,\r\n        computed: {\r\n            filteredBroadcastPost: function () {\r\n                return this.arrobj_BroadcastPost.slice(0, 3);\r\n            },\r\n        },\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n    .overflow-x-scroll {\r\n        overflow-x: hidden;\r\n    }\r\n</style>\r\n\r\n<style>\r\n    .vue-tags-input {\r\n        max-width: 100% !important;\r\n    }\r\n\r\n    .ti-input {\r\n        border: 0px !important;\r\n        background: whitesmoke;\r\n        border-radius: 4px;\r\n        padding: 0px !important;\r\n    }\r\n\r\n    input.ti-new-tag-input {\r\n        background: transparent;\r\n        font-size: 1rem;\r\n    }\r\n\r\n    li.ti-new-tag-input-wrapper {\r\n        padding: 10px !important;\r\n        margin: 0px !important;\r\n    }\r\n\r\n    .tags-input {\r\n        margin-top: 15px;\r\n    }\r\n\r\n    .ti-input {\r\n        min-height: 46px;\r\n    }\r\n\r\n    li.ti-tag {\r\n        background-color: #E6E6E6;\r\n        color: #000;\r\n        border-radius: 12px;\r\n        padding: 4px 8px;\r\n    }\r\n\r\n    .ti-tag input {\r\n        color: #000;\r\n    }\r\n\r\n    .ti-tag-left {\r\n        margin-right: 2px;\r\n        width: 24px;\r\n    }\r\n\r\n    .my-item, .my-tag-left {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n\r\n    .my-item i {\r\n        margin-right: 5px;\r\n    }\r\n\r\n    .ti-deletion-mark {\r\n        background-color: $ error;\r\n    }\r\n\r\n    #modal1 .modal-lg {\r\n        /*max-width: 95% !important;*/\r\n    }\r\n</style>"],"sourceRoot":"src/pages"}]}