{"remainingRequest":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\ResetEmail.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\ResetEmail.vue","mtime":1553877294145},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1553612671158},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1553612666995}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\jessi\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DataSource from \"../data/datasource\";\nimport { required, email } from 'vuelidate/lib/validators';\nexport default {\n  name: 'ResetEmail',\n  data: function data() {\n    return {\n      results: \"\",\n      isLoading: false,\n      userEmail: \"\",\n      redirecting: \"\"\n    };\n  },\n  validations: {\n    userEmail: {\n      required: required,\n      email: email\n    }\n  },\n  methods: {\n    onSubmit: function () {\n      var _onSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                this.isLoading = true;\n                _context.next = 4;\n                return DataSource.shared.resetEmailPassword(this.userEmail);\n\n              case 4:\n                response = _context.sent;\n                this.isLoading = false;\n\n                if (!response) {\n                  _context.next = 18;\n                  break;\n                }\n\n                _context.t0 = response.code;\n                _context.next = _context.t0 === \"1\" ? 10 : _context.t0 === \"2\" ? 14 : _context.t0 === \"99\" ? 16 : 18;\n                break;\n\n              case 10:\n                this.results = \" A link to reset your password has been sent to \".concat(this.userEmail, \", redirecting to reset password session..\");\n                setTimeout(this.otpFillLink, 3000); // 3 hours\n\n                this.redirecting = true; //this.results = `Invalid User Name - sample 1:${JSON.stringify(response)}`;\n\n                return _context.abrupt(\"break\", 18);\n\n              case 14:\n                this.results = \"Email not found\"; //this.results = `Invalid User Name - sample 1:${JSON.stringify(response)}`;\n\n                return _context.abrupt(\"break\", 18);\n\n              case 16:\n                this.results = \"Email is required\"; //this.results = `Please fill in all field - sample 3: code: ${response.code}`;\n\n                return _context.abrupt(\"break\", 18);\n\n              case 18:\n                _context.next = 24;\n                break;\n\n              case 20:\n                _context.prev = 20;\n                _context.t1 = _context[\"catch\"](0);\n                this.results = _context.t1;\n                this.isLoading = false;\n\n              case 24:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 20]]);\n      }));\n\n      function onSubmit() {\n        return _onSubmit.apply(this, arguments);\n      }\n\n      return onSubmit;\n    }(),\n    otpFillLink: function otpFillLink() {\n      window.location.replace(\"/reset-password\");\n    }\n  }\n};",{"version":3,"sources":["ResetEmail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4DA,OAAA,UAAA,MAAA,oBAAA;AACA,SAAA,QAAA,EAAA,KAAA,QAAA,0BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,YADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,SAAA,EAAA,KAFA;AAGA,MAAA,SAAA,EAAA,EAHA;AAIA,MAAA,WAAA,EAAA;AAJA,KAAA;AAMA,GATA;AAUA,EAAA,WAAA,EAAA;AACA,IAAA,SAAA,EAAA;AACA,MAAA,QAAA,EAAA,QADA;AAEA,MAAA,KAAA,EAAA;AAFA;AADA,GAVA;AAgBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,qBAAA,SAAA,GAAA,IAAA;AAJA;AAAA,uBAKA,UAAA,CAAA,MAAA,CAAA,kBAAA,CAAA,KAAA,SAAA,CALA;;AAAA;AAKA,gBAAA,QALA;AAMA,qBAAA,SAAA,GAAA,KAAA;;AANA,qBAOA,QAPA;AAAA;AAAA;AAAA;;AAAA,8BAQA,QAAA,CAAA,IARA;AAAA,gDASA,GATA,wBAeA,GAfA,wBAmBA,IAnBA;AAAA;;AAAA;AAUA,qBAAA,OAAA,6DAAA,KAAA,SAAA;AACA,gBAAA,UAAA,CAAA,KAAA,WAAA,EAAA,IAAA,CAAA,CAXA,CAWA;;AACA,qBAAA,WAAA,GAAA,IAAA,CAZA,CAaA;;AAbA;;AAAA;AAgBA,qBAAA,OAAA,qBAhBA,CAiBA;;AAjBA;;AAAA;AAoBA,qBAAA,OAAA,uBApBA,CAqBA;;AArBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA0BA,qBAAA,OAAA;AACA,qBAAA,SAAA,GAAA,KAAA;;AA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA8BA,IAAA,WA9BA,yBA8BA;AACA,MAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,iBAAA;AACA;AAhCA;AAhBA,CAAA","sourcesContent":["<template>\r\n    <div id=\"resetPassword\" class=\"content\">\r\n        <div class=\"backstretch\">\r\n            <img src=\"../assets/bg.jpg\"/>\r\n        </div>\r\n        <!--<div class=\"pb-5\">-->\r\n        <!--<h2>Login Test</h2>-->\r\n        <!--<p class=\"lead\">Fill in the form and submit to get the response from the server.</p>-->\r\n        <!--</div>-->\r\n\r\n        <div class=\"row login-box\">\r\n            <div class=\"resetlink-wrap\">\r\n                <div class=\"col-md-12 mb-6 login-form col-sm-12\">\r\n                    <div class=\"login-header mb-5 row\">\r\n                        <div class=\"col-md-10\">\r\n                            <h4 class=\"mb-3 text-muted\">Reset Password</h4><br/>\r\n                            <span>Enter the email address associated with your account, <br/>and weâ€™ll email you a link to reset your password.</span>\r\n                        </div>\r\n                        <div class=\"col-md-2 pl-0 pr-0\">\r\n                            <img src=\"../assets/kagami.jpg\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"reset-content\">\r\n                        <form class=\"needs-validation\" novalidate @submit.prevent=\"onSubmit\">\r\n\r\n                            <div class=\"mb-3 form-group\" :class=\"{ 'form-group--error': $v.userEmail.$error }\">\r\n                                <input type=\"email\" class=\"form-control\" id=\"userEmail\" v-model=\"userEmail\"\r\n                                       placeholder=\"Email Address\"\r\n                                       v-model.trim=\"$v.userEmail.$model\">\r\n                            </div>\r\n                            <div class=\"error\" v-if=\"!$v.userEmail.required\">Email is required</div>\r\n                            <div class=\"error\" v-if=\"!$v.userEmail.email\">Enter a valid email</div>\r\n                            <tree-view :data=\"$v.userEmail\"\r\n                                       :options=\"{rootObjectKey: '$v.userEmail', maxDepth: 2}\"></tree-view>\r\n\r\n                            <div class=\"system-msg\"><p>{{results}}</p></div>\r\n                            <div class=\"row d-flex mt-3 mb-5\">\r\n                                <div class=\"col-md-12\">\r\n                                    <button class=\"btn btn-primary btn-lg btn-block login-btn\" type=\"submit\" v-show=\"isLoading===false\" :class=\"{ 'd-none': redirecting===true }\">\r\n                                        Send Reset Link\r\n                                    </button>\r\n                                    <div class=\"loading\" v-if=\"isLoading===true\">\r\n                                        <div class=\"load-3\">\r\n                                            <div class=\"line\"></div>\r\n                                            <div class=\"line\"></div>\r\n                                            <div class=\"line\"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import DataSource from \"../data/datasource\";\r\n    import {required, email} from 'vuelidate/lib/validators';\r\n\r\n    export default {\r\n        name: 'ResetEmail',\r\n        data() {\r\n            return {\r\n                results: \"\",\r\n                isLoading: false,\r\n                userEmail: \"\",\r\n                redirecting: \"\"\r\n            };\r\n        },\r\n        validations: {\r\n            userEmail: {\r\n                required,\r\n                email\r\n            }\r\n        },\r\n        methods: {\r\n            async onSubmit() {\r\n                //this.results = \"<< Requesting.. >>\";\r\n                try {\r\n                    this.isLoading = true;\r\n                    const response = await DataSource.shared.resetEmailPassword(this.userEmail);\r\n                    this.isLoading = false;\r\n                    if (response) {\r\n                        switch (response.code) {\r\n                            case \"1\":\r\n                                this.results = ` A link to reset your password has been sent to ${this.userEmail}, redirecting to reset password session..`;\r\n                                setTimeout(this.otpFillLink, 3000); // 3 hours\r\n                                this.redirecting = true;\r\n                                //this.results = `Invalid User Name - sample 1:${JSON.stringify(response)}`;\r\n                                break;\r\n                            case \"2\":\r\n                                this.results = `Email not found`;\r\n                                //this.results = `Invalid User Name - sample 1:${JSON.stringify(response)}`;\r\n                                break;\r\n                            case \"99\":\r\n                                this.results = `Email is required`;\r\n                                //this.results = `Please fill in all field - sample 3: code: ${response.code}`;\r\n                                break;\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                    this.isLoading = false;\r\n                }\r\n            },\r\n            otpFillLink() {\r\n                window.location.replace(\"/reset-password\");\r\n            },\r\n        }\r\n\r\n\r\n    };\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n    .topbar {\r\n        display: none;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n</style>\r\n\r\n<style>\r\n    .resetEmail header {\r\n        display: none;\r\n    }\r\n</style>\r\n"],"sourceRoot":"src/pages"}]}