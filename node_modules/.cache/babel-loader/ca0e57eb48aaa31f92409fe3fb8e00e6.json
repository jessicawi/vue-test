{"remainingRequest":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\helper\\utily.js","dependencies":[{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\helper\\utily.js","mtime":1550763224005},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1553612671158}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nexport var removeElementFromArray = function removeElementFromArray(array, element) {\n  var index = array.indexOf(element);\n\n  if (index !== -1) {\n    array.splice(index, 1);\n  }\n};\nexport var countDuplicates = function countDuplicates(array) {\n  var counts = {};\n  array.forEach(function (x) {\n    counts[x] = (counts[x] || 0) + 1;\n  });\n  return counts;\n};",{"version":3,"sources":["C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\helper\\utily.js"],"names":["removeElementFromArray","array","element","index","indexOf","splice","countDuplicates","counts","forEach","x"],"mappings":";AAAA,OAAO,IAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,KAAD,EAAQC,OAAR,EAAoB;AACtD,MAAMC,KAAK,GAAGF,KAAK,CAACG,OAAN,CAAcF,OAAd,CAAd;;AAEA,MAAIC,KAAK,KAAK,CAAC,CAAf,EAAkB;AACdF,IAAAA,KAAK,CAACI,MAAN,CAAaF,KAAb,EAAoB,CAApB;AACH;AACJ,CANM;AAQP,OAAO,IAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACL,KAAD,EAAW;AACtC,MAAMM,MAAM,GAAG,EAAf;AACAN,EAAAA,KAAK,CAACO,OAAN,CAAc,UAAUC,CAAV,EAAa;AACvBF,IAAAA,MAAM,CAACE,CAAD,CAAN,GAAY,CAACF,MAAM,CAACE,CAAD,CAAN,IAAa,CAAd,IAAmB,CAA/B;AACH,GAFD;AAGA,SAAOF,MAAP;AACH,CANM","sourcesContent":["export const removeElementFromArray = (array, element) => {\r\n    const index = array.indexOf(element);\r\n\r\n    if (index !== -1) {\r\n        array.splice(index, 1);\r\n    }\r\n};\r\n\r\nexport const countDuplicates = (array) => {\r\n    const counts = {};\r\n    array.forEach(function (x) {\r\n        counts[x] = (counts[x] || 0) + 1;\r\n    });\r\n    return counts;\r\n};"]}]}