{"remainingRequest":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\PendingApprover.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\PendingApprover.vue","mtime":1555253101142},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1553612671158},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1553612666995}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\jessi\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DataSource from \"../data/datasource\";\nexport default {\n  name: \"PendingApprover\",\n  data: function data() {\n    var _this = this;\n\n    return {\n      list: [],\n      pendingApproverList: [{\n        prop: \"ApproverPendingType\",\n        label: \"Type\"\n      }, {\n        prop: \"ApproverPendingContent\",\n        label: \"Title\"\n      }, {\n        prop: \"ApproverPendingConName\",\n        label: \"Requester\"\n      }],\n      actionCol: {\n        label: 'Action',\n        props: {\n          align: 'center'\n        },\n        buttons: [{\n          props: {\n            type: 'primary',\n            icon: 'el-icon-edit',\n            round: true\n          },\n          handler: function handler(row) {\n            if (row.ApproverPendingType === \"Portfolio\") {\n              _this.$router.push({\n                name: 'Portfolio Preview',\n                params: {\n                  portfolioID: row.ApproverItemID,\n                  mode: 'APPROVER'\n                }\n              });\n            } else if (row.ApproverPendingType.includes(\"Posting - \")) {\n              _this.$router.push({\n                name: 'Post Approve',\n                params: {\n                  postID: row.ApproverItemID,\n                  postType: row.ApproverPendingType\n                }\n              });\n            } else {\n              alert('Error! Please try again later');\n            }\n          },\n          label: 'Action'\n        }]\n      },\n      selectedRow: []\n    };\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.getPendingApproverList();\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  methods: {\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.selectedRow = val;\n    },\n    getPendingApproverList: function () {\n      var _getPendingApproverList = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return DataSource.shared.getPendingApprover();\n\n              case 3:\n                response = _context2.sent;\n\n                if (response) {\n                  this.list = response.Table;\n                }\n\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](0);\n                this.results = _context2.t0;\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 7]]);\n      }));\n\n      function getPendingApproverList() {\n        return _getPendingApproverList.apply(this, arguments);\n      }\n\n      return getPendingApproverList;\n    }()\n  }\n};",{"version":3,"sources":["PendingApprover.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,OAAA,UAAA,MAAA,oBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,iBADA;AAEA,EAAA,IAFA,kBAEA;AAAA;;AACA,WAAA;AACA,MAAA,IAAA,EAAA,EADA;AAEA,MAAA,mBAAA,EAAA,CAAA;AACA,QAAA,IAAA,EAAA,qBADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAAA,EAGA;AACA,QAAA,IAAA,EAAA,wBADA;AAEA,QAAA,KAAA,EAAA;AAFA,OAHA,EAMA;AACA,QAAA,IAAA,EAAA,wBADA;AAEA,QAAA,KAAA,EAAA;AAFA,OANA,CAFA;AAYA,MAAA,SAAA,EAAA;AACA,QAAA,KAAA,EAAA,QADA;AAEA,QAAA,KAAA,EAAA;AACA,UAAA,KAAA,EAAA;AADA,SAFA;AAKA,QAAA,OAAA,EAAA,CAAA;AACA,UAAA,KAAA,EAAA;AACA,YAAA,IAAA,EAAA,SADA;AAEA,YAAA,IAAA,EAAA,cAFA;AAGA,YAAA,KAAA,EAAA;AAHA,WADA;AAMA,UAAA,OAAA,EAAA,iBAAA,GAAA,EAAA;AACA,gBAAA,GAAA,CAAA,mBAAA,KAAA,WAAA,EAAA;AACA,cAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,gBAAA,IAAA,EAAA,mBADA;AAEA,gBAAA,MAAA,EAAA;AACA,kBAAA,WAAA,EAAA,GAAA,CAAA,cADA;AAEA,kBAAA,IAAA,EAAA;AAFA;AAFA,eAAA;AAOA,aARA,MAQA,IAAA,GAAA,CAAA,mBAAA,CAAA,QAAA,CAAA,YAAA,CAAA,EAAA;AACA,cAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,gBAAA,IAAA,EAAA,cADA;AAEA,gBAAA,MAAA,EAAA;AACA,kBAAA,MAAA,EAAA,GAAA,CAAA,cADA;AAEA,kBAAA,QAAA,EAAA,GAAA,CAAA;AAFA;AAFA,eAAA;AAOA,aARA,MAQA;AACA,cAAA,KAAA,CAAA,+BAAA,CAAA;AACA;AACA,WA1BA;AA2BA,UAAA,KAAA,EAAA;AA3BA,SAAA;AALA,OAZA;AA+CA,MAAA,WAAA,EAAA;AA/CA,KAAA;AAiDA,GApDA;AAqDA,EAAA,OArDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsDA,mBAAA,sBAAA;;AAtDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAwDA,EAAA,OAAA,EAAA;AACA,IAAA,qBADA,iCACA,GADA,EACA;AACA,WAAA,WAAA,GAAA,GAAA;AACA,KAHA;AAIA,IAAA,sBAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAMA,UAAA,CAAA,MAAA,CAAA,kBAAA,EANA;;AAAA;AAMA,gBAAA,QANA;;AAOA,oBAAA,QAAA,EAAA;AACA,uBAAA,IAAA,GAAA,QAAA,CAAA,KAAA;AACA;;AATA;AAAA;;AAAA;AAAA;AAAA;AAWA,qBAAA,OAAA;;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAxDA,CAAA","sourcesContent":["<template>\r\n    <div id=\"pendingapprover\">\r\n        <div class=\"container admin-wrap\">\r\n            <div class=\"row header\">\r\n                <div class=\"col-lg-8 \">\r\n                    <h3 class=\"text-left\">PENDING APPROVER <span>{{list.length}}</span></h3>\r\n                </div>\r\n\r\n                <div class=\"col-lg-4\">\r\n                    <router-link :to=\"{name: 'Latest Update'}\">\r\n                        <el-button type=\"primary\" round class=\"float-right\"><i class=\"material-icons\">\r\n                            chevron_left\r\n                        </i> CREATE POST\r\n                        </el-button>\r\n                    </router-link>\r\n                </div>\r\n            </div>\r\n            <div v-if=\"list.length>0\" class=\"datatable_group\">\r\n                <data-tables :data=\"list\" :action-col=\"actionCol\" @selection-change=\"handleSelectionChange\">\r\n                    <el-table-column type=\"selection\" width=\"55\">\r\n                    </el-table-column>\r\n                    <el-table-column v-for=\"item in pendingApproverList\" :prop=\"item.prop\"\r\n                                     :label=\"item.label\" :key=\"item.prop\"\r\n                                     sortable=\"custom\">\r\n                    </el-table-column>\r\n                </data-tables>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import DataSource from \"../data/datasource\";\r\n\r\n    export default {\r\n        name: \"PendingApprover\",\r\n        data() {\r\n            return {\r\n                list: [],\r\n                pendingApproverList: [{\r\n                    prop: \"ApproverPendingType\",\r\n                    label: \"Type\"\r\n                }, {\r\n                    prop: \"ApproverPendingContent\",\r\n                    label: \"Title\"\r\n                }, {\r\n                    prop: \"ApproverPendingConName\",\r\n                    label: \"Requester\"\r\n                }],\r\n                actionCol: {\r\n                    label: 'Action',\r\n                    props: {\r\n                        align: 'center',\r\n                    },\r\n                    buttons: [{\r\n                        props: {\r\n                            type: 'primary',\r\n                            icon: 'el-icon-edit',\r\n                            round: true,\r\n                        },\r\n                        handler: row => {\r\n                            if (row.ApproverPendingType === \"Portfolio\") {\r\n                                this.$router.push({\r\n                                    name: 'Portfolio Preview',\r\n                                    params: {\r\n                                        portfolioID: row.ApproverItemID,\r\n                                        mode: 'APPROVER'\r\n                                    }\r\n                                });\r\n                            } else if (row.ApproverPendingType.includes(\"Posting - \")) {\r\n                                this.$router.push({\r\n                                    name: 'Post Approve',\r\n                                    params: {\r\n                                        postID: row.ApproverItemID,\r\n                                        postType: row.ApproverPendingType\r\n                                    }\r\n                                });\r\n                            } else {\r\n                                alert('Error! Please try again later');\r\n                            }\r\n                        },\r\n                        label: 'Action'\r\n                    }]\r\n                },\r\n                selectedRow: [],\r\n            };\r\n        },\r\n        async created() {\r\n            this.getPendingApproverList();\r\n        },\r\n        methods: {\r\n            handleSelectionChange(val) {\r\n                this.selectedRow = val;\r\n            },\r\n            async getPendingApproverList() {\r\n                try {\r\n                    const response = await DataSource.shared.getPendingApprover();\r\n                    if (response) {\r\n                        this.list = response.Table;\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n        },\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/pages"}]}