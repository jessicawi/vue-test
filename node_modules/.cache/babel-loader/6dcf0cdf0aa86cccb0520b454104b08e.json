{"remainingRequest":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\DailyRoutine.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\DailyRoutine.vue","mtime":1558600924756},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1553612671158},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1553612666995}],"contextDependencies":[],"result":["import _Object$assign from \"C:\\\\Users\\\\jessi\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/assign\";\nimport _Object$keys from \"C:\\\\Users\\\\jessi\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/object/keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _getIterator from \"C:\\\\Users\\\\jessi\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/get-iterator\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\jessi\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport DataSource from \"../data/datasource\";\nimport moment from \"moment\";\nexport default {\n  name: \"DailyRoutine\",\n  data: function data() {\n    return {\n      obj_Student: {},\n      arrobj_Classes: {},\n      ddlTaskDescription: '',\n      txtTimeStart: '',\n      txtTimeStop: '',\n      txtTimeCurrent: '',\n      txtRemark: '',\n      ddlRest: '',\n      ddlFeed: '',\n      ddlFeedBottleType: '',\n      ddlLatchOn: '',\n      ddlPoop: '',\n      ddlTexture: '',\n      ddlColor: '',\n      ddlHygiene: '',\n      selectionRest: '',\n      selectionStartEndTime: '',\n      selectionCurrentTime: '',\n      selectionRemark: '',\n      selectionFeed: '',\n      selectionFeedBottleType: '',\n      selectionLatchOn: '',\n      selectionPoop: '',\n      selectionTexture: '',\n      selectionColor: '',\n      selectionHygiene: '',\n      hardCodeItem: [],\n      DailyRoutineList: [],\n      StudentHeader: null,\n      selectedStudent: null,\n      selectall: false,\n      selectItem: false,\n      activityClass: [],\n      noActivity: false\n    };\n  },\n  created: function () {\n    var _created = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              this.loadStudents();\n              this.loadHardCodeArray();\n              this.loadHardCodeClassArray();\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function created() {\n      return _created.apply(this, arguments);\n    }\n\n    return created;\n  }(),\n  mounted: function () {\n    var _mounted = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee2() {\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.txtTimeStart = moment().format(\"HH:mm\");\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function mounted() {\n      return _mounted.apply(this, arguments);\n    }\n\n    return mounted;\n  }(),\n  methods: {\n    getIcon: function getIcon(value) {\n      return require('../img/' + this.hardCodeItem[value]);\n    },\n    getClass: function getClass(value) {\n      return this.activityClass[value];\n    },\n    loadHardCodeArray: function () {\n      var _loadHardCodeArray = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.hardCodeItem = {\n                  'Rest|Nap': \"Nap.png\",\n                  'Rest|Sleep': 'Sleep.png',\n                  'Feed|Bottle-Type|Formula': 'Formula.png',\n                  'Feed|Bottle-Type|Breast Milk': 'Breast Milk.png',\n                  'Feed|Solid': 'Solid.png',\n                  'Feed|Latch On|Left': 'Left.png',\n                  'Feed|Latch On|Right': 'Right.png',\n                  'Feed|Menu': 'Menu.png',\n                  'Poop|Texture|Creamy': 'Creamy.png',\n                  'Poop|Texture|Firm': 'Firm.png',\n                  'Poop|Texture|Hard': 'Hard.png',\n                  'Poop|Texture|Watery': 'Watery.png',\n                  'Poop|Color|Brown': 'Brown.png',\n                  'Poop|Color|Tan': 'Tan.png',\n                  'Poop|Color|Yellow': 'Yellow.png',\n                  'Poop|Color|Green': 'Green.png',\n                  'Poop|Color|Black': 'Black.png',\n                  'Hygiene|Diaper change': 'Diaper change.png',\n                  'Hygiene|Shower&Diaper change': 'Shower&Diaper Change.png',\n                  'Hygiene|Shower': 'Shower.png'\n                };\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadHardCodeArray() {\n        return _loadHardCodeArray.apply(this, arguments);\n      }\n\n      return loadHardCodeArray;\n    }(),\n    loadHardCodeClassArray: function () {\n      var _loadHardCodeClassArray = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.activityClass = {\n                  'Rest|Nap': \"rest\",\n                  'Rest|Sleep': 'rest',\n                  'Feed|Bottle-Type|Formula': 'feed',\n                  'Feed|Bottle-Type|Breast Milk': 'feed',\n                  'Feed|Solid': 'feed',\n                  'Feed|Latch On|Left': 'feed',\n                  'Feed|Latch On|Right': 'feed',\n                  'Feed|Menu': 'feed',\n                  'Poop|Texture|Creamy': 'poop',\n                  'Poop|Texture|Firm': 'poop',\n                  'Poop|Texture|Hard': 'poop',\n                  'Poop|Texture|Watery': 'poop',\n                  'Poop|Color|Brown': 'poop',\n                  'Poop|Color|Tan': 'poop',\n                  'Poop|Color|Yellow': 'poop',\n                  'Poop|Color|Green': 'poop',\n                  'Poop|Color|Black': 'poop',\n                  'Hygiene|Diaper change': 'hygiene',\n                  'Hygiene|Shower&Diaper change': 'hygiene',\n                  'Hygiene|Shower': 'hygiene'\n                };\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function loadHardCodeClassArray() {\n        return _loadHardCodeClassArray.apply(this, arguments);\n      }\n\n      return loadHardCodeClassArray;\n    }(),\n    loadStudents: function () {\n      var _loadStudents = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee5() {\n        var response, tempClasses, tempStudent, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, obj, studentResponse;\n\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                this.$vs.loading();\n                this.arrobj_Classes = [];\n                _context5.next = 5;\n                return DataSource.shared.getAttendanceClass();\n\n              case 5:\n                response = _context5.sent;\n\n                if (!response) {\n                  _context5.next = 42;\n                  break;\n                }\n\n                this.$vs.loading.close();\n                tempClasses = response.Table;\n                tempStudent = [];\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _iteratorError = undefined;\n                _context5.prev = 13;\n                _iterator = _getIterator(tempClasses);\n\n              case 15:\n                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                  _context5.next = 27;\n                  break;\n                }\n\n                obj = _step.value;\n                _context5.next = 19;\n                return DataSource.shared.getAllActiveStudentsByClass(obj.PK_Class_ID);\n\n              case 19:\n                studentResponse = _context5.sent;\n\n                if (!studentResponse) {\n                  _context5.next = 24;\n                  break;\n                }\n\n                obj.arrobj_Student = studentResponse.Table;\n                _context5.next = 24;\n                return tempStudent.push(obj);\n\n              case 24:\n                _iteratorNormalCompletion = true;\n                _context5.next = 15;\n                break;\n\n              case 27:\n                _context5.next = 33;\n                break;\n\n              case 29:\n                _context5.prev = 29;\n                _context5.t0 = _context5[\"catch\"](13);\n                _didIteratorError = true;\n                _iteratorError = _context5.t0;\n\n              case 33:\n                _context5.prev = 33;\n                _context5.prev = 34;\n\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n\n              case 36:\n                _context5.prev = 36;\n\n                if (!_didIteratorError) {\n                  _context5.next = 39;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 39:\n                return _context5.finish(36);\n\n              case 40:\n                return _context5.finish(33);\n\n              case 41:\n                this.arrobj_Classes = tempStudent;\n\n              case 42:\n                _context5.next = 47;\n                break;\n\n              case 44:\n                _context5.prev = 44;\n                _context5.t1 = _context5[\"catch\"](0);\n                this.results = _context5.t1;\n\n              case 47:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 44], [13, 29, 33, 41], [34,, 36, 40]]);\n      }));\n\n      function loadStudents() {\n        return _loadStudents.apply(this, arguments);\n      }\n\n      return loadStudents;\n    }(),\n    checkAll: function checkAll() {\n      try {\n        if (this.selectall === false) {\n          this.DailyRoutineList.forEach(function (m) {\n            m.checked = true;\n          }); //\n          // console.log(\"aa\");\n          // this.$refs.chkitems.forEach(m => {\n          //     m.checked = true;\n          //     m.check = true;\n          // });\n          // this.selectItem = true;\n          // console.log(this.selectItem);\n        } else {\n          this.DailyRoutineList.forEach(function (m) {\n            m.checked = false;\n          }); //\n          //\n          // console.log(\"bbs\");\n          // this.selectItem = false;\n          // this.$refs.chkitems.forEach(m => {\n          //     m.checked = false;\n          // });\n        }\n      } catch (e) {\n        this.results = e;\n      }\n    },\n    Load: function Load(Student_ID) {\n      var _this = this;\n\n      try {\n        var response = DataSource.shared.getDailyRoutineByStudentID(Student_ID.Student_ID);\n        this.StudentHeader = Student_ID.First_Name;\n        this.obj_Student = Student_ID;\n        response.then(function (response) {\n          _this.DailyRoutineList = response.Table ? response.Table : [];\n\n          if (response.code === '2') {\n            console.log(\"noach\");\n            _this.noActivity = true;\n          }\n        });\n\n        if (this.$refs.isCheckAll.checked === true) {\n          this.$refs.isCheckAll.checked = false;\n        }\n      } catch (e) {\n        this.results = e;\n      }\n    },\n    TaskDescription: function TaskDescription() {\n      this.selectionRest = false;\n      this.selectionFeed = false;\n      this.selectionPoop = false;\n      this.selectionHygiene = false;\n      this.selectionStartEndTime = false;\n      this.selectionCurrentTime = false;\n      this.selectionRemark = false;\n      console.log(this.ddlTaskDescription);\n\n      if (this.ddlTaskDescription === 'Rest') {\n        this.selectionRest = true;\n        this.selectionStartEndTime = true;\n        this.selectionRemark = true;\n      } else if (this.ddlTaskDescription === 'Feed') {\n        this.selectionCurrentTime = true;\n        this.selectionFeed = true;\n        this.selectionFeedBottleType = false;\n        this.selectionLatchOn = false;\n\n        if (this.ddlFeed === \"Bottle-Type\") {\n          this.selectionFeedBottleType = true;\n        } else if (this.ddlFeed === \"Latch On\") {\n          this.selectionLatchOn = true;\n        }\n\n        this.selectionRemark = true;\n      } else if (this.ddlTaskDescription === 'Poop') {\n        this.selectionPoop = true;\n        this.selectionTexture = false;\n        this.selectionColor = false;\n\n        if (this.ddlPoop === \"Texture\") {\n          this.selectionTexture = true;\n        } else if (this.ddlPoop === \"Color\") {\n          this.selectionColor = true;\n        }\n\n        this.selectionRemark = true;\n      } else if (this.ddlTaskDescription === 'Hygiene') {\n        this.selectionHygiene = true;\n        this.selectionCurrentTime = true;\n        this.selectionRemark = true;\n      }\n    },\n    btnAdd: function btnAdd() {\n      var _this2 = this;\n\n      try {\n        var drReferenceType = '';\n\n        if (_Object$keys(this.obj_Student).length !== 0) {\n          if (this.selectionRest === true) {\n            if (this.ddlRest === \"Nap\") {\n              drReferenceType = this.ddlTaskDescription + \"|\" + this.ddlRest;\n            } else if (this.ddlRest === \"Sleep\") {\n              drReferenceType = this.ddlTaskDescription + \"|\" + this.ddlRest;\n            }\n          } else if (this.selectionFeed == true) {\n            if (this.selectionFeedBottleType == true) {\n              if (this.ddlFeedBottleType === \"Formula\") {\n                drReferenceType = this.ddlTaskDescription + \"|\" + this.ddlFeed + \"|\" + this.ddlFeedBottleType;\n              } else if (this.ddlFeedBottleType === \"Breast Milk\") {\n                drReferenceType = this.ddlTaskDescription + \"|\" + this.ddlFeed + \"|\" + this.ddlFeedBottleType;\n              }\n            } else if (this.ddlFeed === \"Solid\") {\n              drReferenceType = this.ddlTaskDescription + \"|\" + this.ddlFeed;\n            } else if (this.selectionLatchOn == true) {\n              if (this.ddlLatchOn === \"Left\") {\n                drReferenceType = this.ddlTaskDescription + \"|\" + this.ddlFeed + \"|\" + this.ddlLatchOn;\n              } else if (this.ddlLatchOn === \"Right\") {\n                drReferenceType = this.ddlTaskDescription + \"|\" + this.ddlFeed + \"|\" + this.ddlLatchOn;\n              }\n            } else if (this.ddlFeed === \"Menu\") {\n              drReferenceType = this.ddlTaskDescription + \"|\" + this.ddlFeed;\n            }\n          } else if (this.selectionPoop == true) {\n            if (this.selectionTexture == true) {\n              drReferenceType = this.ddlTaskDescription + \"|\" + this.ddlPoop + \"|\" + this.ddlTexture;\n            } else if (this.selectionColor == true) {\n              drReferenceType = this.ddlTaskDescription + \"|\" + this.ddlPoop + \"|\" + this.ddlColor;\n            }\n          } else if (this.selectionHygiene == true) {\n            if (this.ddlHygiene === \"Diaper change\") {\n              drReferenceType = this.ddlTaskDescription + \"|\" + this.ddlHygiene;\n            } else if (this.ddlHygiene === \"Shower&Diaper change\") {\n              drReferenceType = this.ddlTaskDescription + \"|\" + this.ddlHygiene;\n            } else if (this.ddlHygiene === \"Shower\") {\n              drReferenceType = this.ddlTaskDescription + \"|\" + this.ddlHygiene;\n            }\n          }\n\n          var btnAddObject = [];\n          btnAddObject.DrStartTime = this.txtTimeStart;\n          btnAddObject.DrEndTime = this.txtTimeStop;\n          btnAddObject.DrRemark = this.txtRemark;\n          btnAddObject.studentID = this.obj_Student.Student_ID;\n          btnAddObject.DrReferenceType = drReferenceType; // console.log(btnAddObject.DrEndTime);\n          // if (this.txtTimeStop === null || this.txtTimeStart === null || this.txtTimeStop === \"\" || this.txtTimeStart === \"\"){\n          //     this.$notify.error({\n          //         title: 'Error',\n          //         message: 'Please fill in content'\n          //     });\n          // }else{\n\n          if (this.selectionRest === true && this.txtTimeStop === \"\") {\n            this.$notify.error({\n              title: 'Error',\n              message: 'Please fill in content'\n            });\n          } else if (this.selectionRest === true && this.txtTimeStart === \"\") {\n            this.$notify.error({\n              title: 'Error',\n              message: 'Please fill in content'\n            });\n          } else if (this.selectionFeed === true && this.txtTimeStart === \"\") {\n            this.$notify.error({\n              title: 'Error',\n              message: 'Please fill in content'\n            });\n          } else if (this.selectionHygiene === true && this.txtTimeStart === \"\") {\n            this.$notify.error({\n              title: 'Error',\n              message: 'Please fill in content'\n            });\n          } else {\n            console.log(\"33\");\n            var resp = DataSource.shared.addDailyRoutine(btnAddObject);\n            resp.then(function (resp) {\n              var tempStudent = _this2.obj_Student;\n              var tempClass = _this2.arrobj_Classes;\n\n              _Object$assign(_this2.$data, _this2.$options.data.call(_this2));\n\n              _this2.arrobj_Classes = tempClass;\n\n              _this2.loadHardCodeArray();\n\n              _this2.obj_Student = tempStudent;\n\n              _this2.Load(_this2.obj_Student);\n\n              console.log(_this2.obj_Student.Student_ID);\n\n              if (resp.code === '1') {\n                _this2.$notify({\n                  title: 'Success',\n                  message: 'Task added.',\n                  type: 'success'\n                }); // alert('Task added.');\n\n              } else {\n                _this2.$notify.error({\n                  title: 'Error',\n                  message: 'Error'\n                }); // alert('Error.');\n\n              }\n            });\n          }\n        } else {\n          this.$notify.error({\n            title: 'Error',\n            message: 'Please select student.'\n          }); // alert(\"Please select student.\");\n        }\n      } catch (e) {\n        alert(e);\n        console.log(e);\n      }\n    },\n    btnDelete: function btnDelete() {\n      var _this3 = this;\n\n      try {\n        var Count = 0;\n        var btnDelObject = [];\n        this.DailyRoutineList.forEach(function (m, index) {\n          if (m.checked === true) {\n            console.log(\"go\");\n            Count++;\n            btnDelObject.DrStudentID = m.DrStudentID;\n            btnDelObject.drID = m.DrID;\n            DataSource.shared.deleteDailyRoutine(btnDelObject);\n            console.log(\"deleted\");\n            _this3.selectall = false;\n\n            _this3.$notify({\n              title: 'Success',\n              message: 'Activity Deleted',\n              type: 'success'\n            });\n          }\n        }); // this.$refs.dailyRoutineList_Update.forEach((m, index) => {\n        //     if (this.$refs.chkitems[index].checked === true) {\n        //         Count++;\n        //         btnDelObject.DrStudentID = this.DailyRoutineList[index].DrStudentID;\n        //         btnDelObject.drID = this.DailyRoutineList[index].DrID;\n        //         DataSource.shared.deleteDailyRoutine(btnDelObject);\n        //     }\n        // });\n\n        if (Count < 1) {\n          this.$notify.error({\n            title: 'Error',\n            message: 'Nothing selected!'\n          }); // alert(\"Nothing selected!\");\n        }\n\n        this.Load(this.obj_Student);\n      } catch (exception) {\n        alert(exception);\n      }\n    },\n    btnUpdate: function btnUpdate() {\n      var _this4 = this;\n\n      try {\n        //if no checkbox is checked, pop up alert\n        var Count = 0;\n        var btnUpdateObject = [];\n        console.log(this.DailyRoutineList);\n        this.DailyRoutineList.forEach(function (m, index) {\n          if (m.checked === true) {\n            Count++;\n            btnUpdateObject.DrStudentID = m.DrStudentID;\n            btnUpdateObject.drID = m.DrID;\n            btnUpdateObject.drRemark = m.DrRemark;\n            DataSource.shared.updateDailyRoutine(btnUpdateObject);\n            _this4.selectall = false;\n          }\n        }); // ;this.$refs.dailyRoutineList_Update.forEach((m, index) => {\n        //\n        //     if (this.$refs.chkitems[index].checked === true) {\n        //         Count++;\n        //         btnUpdateObject.DrStudentID = this.DailyRoutineList[index].DrStudentID;\n        //         btnUpdateObject.drID = this.DailyRoutineList[index].DrID;\n        //         btnUpdateObject.drRemark = this.$refs.refDrRemark[index].value;\n        //         DataSource.shared.updateDailyRoutine(btnUpdateObject);\n        //     }\n        //\n        // });\n\n        if (Count < 1) {\n          this.$notify.error({\n            title: 'Error',\n            message: 'Nothing selected!'\n          }); // alert(\"Nothing selected!\");\n        } else {\n          this.$notify({\n            title: 'Success',\n            message: 'Task Updated.',\n            type: 'success'\n          }); // alert(\"Task Updated.\");\n        }\n\n        this.Load(this.obj_Student);\n      } catch (exception) {\n        alert(exception);\n      }\n    }\n  }\n};",{"version":3,"sources":["DailyRoutine.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div id='dailyroutine'>\r\n        <div class=\"container daily-header__wrap\" style=\"background: transparent;\">\r\n            <div class=\"daily-header\">\r\n                <div class=\"title\">\r\n                    <h4>DAILY ROUTINE</h4>\r\n                    <div v-if=\"StudentHeader === null\" class=\"mb-3\">Please select a student ...</div>\r\n                </div>\r\n                <div class=\"routine-select\">\r\n\r\n                    <!--<div  v-for=\"classes of arrobj_Classes\">-->\r\n                    <!--<div    v-for=\"student of classes.arrobj_Student\">-->\r\n                    <!--{{student}}-->\r\n                    <!--</div>-->\r\n                    <!--</div>-->\r\n                    <!--<br/>-->\r\n\r\n                    <el-select v-model=\"StudentHeader\" filterable placeholder=\"Select Student\" id=\"ddl_Students\"\r\n                               @input=\"Load\">\r\n                        <el-option-group\r\n                                v-for=\"classes of arrobj_Classes\"\r\n                                :key=\"classes.id\"\r\n                                :label=\"classes.CLS_ClassName\">\r\n                            <el-option\r\n                                    v-for=\"student of classes.arrobj_Student\"\r\n                                    :key=\"student.id\"\r\n                                    :label=\"student.First_Name + ' ' + student.Student_ID\"\r\n                                    :value=\"student\">\r\n                            </el-option>\r\n                        </el-option-group>\r\n                    </el-select>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n        <div class=\"container daily-activity__wrap\" v-if=\"StudentHeader!==null\">\r\n            <h2 class=\"daily-studentName text-left\">{{StudentHeader}}</h2>\r\n            <!--<div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">-->\r\n            <!--<label>Select Student:</label>-->\r\n            <!--<b-form-select v-model=\"obj_Student\" class=\"mb-3\" id=\"ddl_Students\" @input=\"Load\">-->\r\n            <!--<optgroup v-for=\"classes of arrobj_Classes\" :label=\"classes.CLS_ClassName\" :key=\"classes.id\">-->\r\n            <!--<option v-for=\"student of classes.arrobj_Student\" v-bind:value=\"student.Student_ID\" :key=\"student.id\">-->\r\n            <!--{{student.First_Name}} : {{student.Student_ID}}-->\r\n            <!--</option>-->\r\n            <!--</optgroup>-->\r\n            <!--</b-form-select>-->\r\n            <!--</div>-->\r\n            <div v-if=\"StudentHeader !== null\">\r\n                <label class=\"activity-title\"><h5>Select Activity:</h5></label>\r\n                <div class=\"daily-activity\">\r\n                    <el-form>\r\n                        <el-form-item label=\"Activity\">\r\n                            <el-select v-model=\"ddlTaskDescription\" @change=\"TaskDescription()\">\r\n                                <el-option key=\"Rest\" label=\"Rest\" value=\"Rest\"></el-option>\r\n                                <el-option key=\"Feed\" label=\"Feed\" value=\"Feed\"></el-option>\r\n                                <el-option key=\"Poop\" label=\"Poop\" value=\"Poop\"></el-option>\r\n                                <el-option key=\"Hygiene\" label=\"Hygiene\" value=\"Hygiene\"></el-option>\r\n                            </el-select>\r\n                        </el-form-item>\r\n                    <!--<select v-model='ddlTaskDescription' @change=\"TaskDescription()\">-->\r\n                    <!--<option>Rest</option>-->\r\n                    <!--<option>Feed</option>-->\r\n                    <!--<option>Poop</option>-->\r\n                    <!--<option>Hygiene</option>-->\r\n                    <!--</select>-->\r\n                        <el-form-item label=\"Rest Type\" v-if=\"selectionRest\">\r\n                            <el-select v-model=\"ddlRest\" >\r\n                                <el-option key=\"Nap\" label=\"Nap\" value=\"Nap\"></el-option>\r\n                                <el-option key=\"Sleep\" label=\"Sleep\" value=\"Sleep\"></el-option>\r\n                            </el-select>\r\n                        </el-form-item>\r\n                    <!--<select v-model=\"ddlRest\">-->\r\n                    <!--<option></option>-->\r\n                    <!--<option>Nap</option>-->\r\n                    <!--<option>Sleep</option>-->\r\n                    <!--</select>-->\r\n\r\n                    <!--<div class=\"daily-feed\">-->\r\n                        <el-form-item label=\"Feed Type\" v-if=\"selectionFeed\">\r\n                        <el-select v-model=\"ddlFeed\" @change=\"TaskDescription()\" >\r\n                            <el-option key=\"Bottle-Type\" label=\"Bottle-Type\" value=\"Bottle-Type\"></el-option>\r\n                            <el-option key=\"Solid\" label=\"Solid\" value=\"Solid\"></el-option>\r\n                            <el-option key=\"Latch On\" label=\"Latch On\" value=\"Latch On\"></el-option>\r\n                            <el-option key=\"Menu\" label=\"Menu\" value=\"Menu\"></el-option>\r\n                        </el-select>\r\n                        </el-form-item>\r\n\r\n                        <el-form-item label=\"Bottle-Type\" v-if=\"selectionFeedBottleType && selectionFeed\">\r\n                        <el-select v-model=\"ddlFeedBottleType\">\r\n                            <el-option key=\"Formula\" label=\"Formula\" value=\"Formula\"></el-option>\r\n                            <el-option key=\"Breast Milk\" label=\"Breast Milk\" value=\"Breast Milk\"></el-option>\r\n                        </el-select>\r\n                        </el-form-item>\r\n                        <el-form-item label=\"Latch Side\" v-if=\"selectionLatchOn && selectionFeed\">\r\n                        <el-select v-model=\"ddlLatchOn\" placeholder=\"Latch On\">\r\n                            <el-option key=\"Left\" label=\"Left\" value=\"Left\"></el-option>\r\n                            <el-option key=\"Right\" label=\"Right\" value=\"Right\"></el-option>\r\n                        </el-select>\r\n                        </el-form-item>\r\n                    <!--</div>-->\r\n\r\n                    <!--<div class=\"daily-poop\">-->\r\n                        <el-form-item label=\"Poop Detail\" v-if=\"selectionPoop\">\r\n                        <el-select v-model=\"ddlPoop\" @change=\"TaskDescription()\" >\r\n                            <el-option key=\"Texture\" label=\"Texture\" value=\"Texture\"></el-option>\r\n                            <el-option key=\"Color\" label=\"Color\" value=\"Color\"></el-option>\r\n                        </el-select>\r\n                        </el-form-item>\r\n\r\n                        <el-form-item label=\"Texture Type\" v-if=\"selectionTexture && selectionPoop\">\r\n                        <el-select v-model=\"ddlTexture\" >\r\n                            <el-option key=\"Creamy\" label=\"Creamy\" value=\"Creamy\"></el-option>\r\n                            <el-option key=\"Firm\" label=\"Firm\" value=\"Firm\"></el-option>\r\n                            <el-option key=\"Hard\" label=\"Hard\" value=\"Hard\"></el-option>\r\n                            <el-option key=\"Watery\" label=\"Watery\" value=\"Watery\"></el-option>\r\n                        </el-select>\r\n                        </el-form-item>\r\n\r\n                        <el-form-item label=\"Poop Color\" v-if=\"selectionColor && selectionPoop\">\r\n                        <el-select v-model=\"ddlColor\" >\r\n                            <el-option key=\"Brown\" label=\"Brown\" value=\"Brown\"></el-option>\r\n                            <el-option key=\"Tan\" label=\"Tan\" value=\"Tan\"></el-option>\r\n                            <el-option key=\"Yellow\" label=\"Yellow\" value=\"Yellow\"></el-option>\r\n                            <el-option key=\"Green\" label=\"Green\" value=\"Green\"></el-option>\r\n                            <el-option key=\"Black\" label=\"Black\" value=\"Black\"></el-option>\r\n                        </el-select>\r\n                        </el-form-item>\r\n                    <!--</div>-->\r\n\r\n                        <el-form-item label=\"Hygiene Activity\" v-if=\"selectionHygiene\">\r\n                    <el-select v-model=\"ddlHygiene\" >\r\n                        <el-option key=\"Diaper change\" label=\"Diaper change\" value=\"Diaper change\"></el-option>\r\n                        <el-option key=\"Shower&Diaper change\" label=\"Shower&Diaper change\"\r\n                                   value=\"Shower&Diaper change\"></el-option>\r\n                        <el-option key=\"Shower\" label=\"Shower\" value=\"Shower\"></el-option>\r\n                    </el-select>\r\n                        </el-form-item>\r\n                    <!--<el-time-picker type=\"time\" v-model=\"txtTimeStart\" value-format=\"hh:mm\"-->\r\n                    <!--placeholder=\"Get current time\" v-if=\"selectionCurrentTime\"></el-time-picker>-->\r\n\r\n                        <el-form-item label=\"Start\" v-if=\"selectionCurrentTime\">\r\n                    <el-time-select\r\n                            placeholder=\"Get current time\"\r\n                            v-model=\"txtTimeStart\"\r\n                            >\r\n                    </el-time-select>\r\n                        </el-form-item>\r\n\r\n                        <el-form-item label=\"Start\" v-if=\"selectionStartEndTime\">\r\n\r\n                    <el-time-select\r\n                            placeholder=\"Get Start time\"\r\n                            v-model=\"txtTimeStart\"\r\n\r\n                            :picker-options=\"{\r\n                            start: '08:30',\r\n                            step: '00:10',\r\n                            end: '20:30'\r\n                            }\">\r\n                    </el-time-select>\r\n                        </el-form-item>\r\n\r\n                        <el-form-item label=\"End\" v-if=\"selectionStartEndTime\">\r\n                    <el-time-select\r\n                            placeholder=\"End time\"\r\n                            v-model=\"txtTimeStop\"\r\n\r\n                            :picker-options=\"{\r\n                            start: '08:30',\r\n                            step: '00:10',\r\n                            end: '20:30',\r\n                            minTime: txtTimeStart\r\n                            }\">\r\n                    </el-time-select>\r\n                        </el-form-item>\r\n\r\n                    <!--<el-time-picker type=\"time\" v-model=\"txtTimeStart\" value-format=\"hh:mm\"-->\r\n                    <!--placeholder=\"Get Start time\" v-if=\"selectionStartEndTime\"></el-time-picker>-->\r\n\r\n                    <!--<el-time-picker type=\"time\" v-model=\"txtTimeStop\" value-format=\"hh:mm\"-->\r\n                    <!--placeholder=\"Get End time\" v-if=\"selectionStartEndTime\"></el-time-picker>-->\r\n                    </el-form>\r\n                </div>\r\n\r\n\r\n                <div v-if=\"selectionRemark\" class=\"daily-remark  mb-3 \">\r\n                    <label class=\"text-left\">Remark:</label>\r\n                    <input type=\"text\" class=\"form-control\" v-model=\"txtRemark\">\r\n                    <b-button @click=\"btnAdd\">ADD</b-button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"daily-empty\" v-if=\"StudentHeader === null\">\r\n            <img src=\"../assets/daily-baby.png\"/>\r\n        </div>\r\n        <div class=\"container mt-4\" v-if=\"StudentHeader !== null\">\r\n            <div class=\"daily-empty\" v-if=\"noActivity === true\">\r\n                <img src=\"../assets/empty-list.jpg\"/>\r\n            </div>\r\n            <div>\r\n                <div class=\"daily-timeline\" v-if=\"noActivity === false\">\r\n                    <div class=\"daily-checkall\">\r\n                        <h4>Today's Activity</h4>\r\n                        <vs-checkbox v-model=\"selectall\" ref=\"isCheckAll\" @click=\"checkAll()\">Select All</vs-checkbox>\r\n                        <!--<label class=\"control control&#45;&#45;checkbox\">-->\r\n                        <!--Select All-->\r\n                        <!--<input type=\"checkbox\" ref=\"isCheckAll\" @click=\"checkAll()\"/>-->\r\n                        <!--<div class=\"control__indicator\"></div>-->\r\n                        <!--</label>-->\r\n                        <!--<input class=\"form-control\" type=\"checkbox\" ref=\"isCheckAll\" @click=\"checkAll()\">-->\r\n                        <!--<input type=\"checkbox\" @click=\"checkAll()\" ref=\"isCheckAll\">-->\r\n                    </div>\r\n\r\n                    <div class=\"daily-timeline__item\" v-for=\"(item,i) in DailyRoutineList\" v-bind:value=\"item.drID\"\r\n                         :key=\"item.ID\" ref=\"dailyRoutineList_Update\" :class=\"item.MainReferenceType\">\r\n                        <div class=\"daily-item_image\">\r\n                            <img :src=\"getIcon(item.DrReferenceType)\"/>\r\n                        </div>\r\n                        <div class=\"daily-item_desc\">\r\n                            <div class=\"row daily-desc_wrap\">\r\n                                <div class=\"col-md-9\">\r\n                                    <label class=\"DrReferenceType\">{{item.DrReferenceType}}</label>\r\n                                    <!--<input type=\"text\" class=\"form-control\" v-model=\"item.DrRemark\" ref=\"refDrRemark\">-->\r\n                                    <el-input\r\n                                            type=\"textarea\"\r\n                                            autosize\r\n                                            placeholder=\"Remark\"\r\n                                            v-model=\"item.DrRemark\"\r\n                                            ref=\"refDrRemark\">\r\n                                    </el-input>\r\n                                    <!--<input type=\"text\" class=\"form-control\" v-model=\"item.DrRemark\" ref=\"refDrRemark\" :value=\"item.DrRemark\">-->\r\n                                </div>\r\n                                <div class=\"col-md-3 date\">\r\n                                    <label class=\"text-center daily-date-strong\"><strong>{{item.DrCreatedOn_convert}}</strong></label>\r\n                                    <label class=\"text-center\" v-if=\"item.MainReferenceType !== 'Poop'\">\r\n                                        <strong v-if=\"item.MainReferenceType === 'Rest'\">From:</strong>\r\n                                        <strong v-else>On:</strong>\r\n                                        {{item.DrStartTime_convert}}\r\n                                    </label>\r\n                                    <label class=\"text-center\"\r\n                                           v-if=\"item.MainReferenceType === 'Rest'\"><strong>To:</strong>\r\n                                        {{item.DrEndTime_convert}}</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"daily-item_chkitem\">\r\n                            <vs-checkbox ref=\"chkitems\" v-model=\"item.checked\"></vs-checkbox>\r\n                        </div>\r\n                        <!--<label class=\"lblCheckBox\">-->\r\n                        <!--<input class=\"form-control\" type=\"checkbox\" ref=\"chkitems\">-->\r\n                        <!--<span>-->\r\n                        <!--<span>-->\r\n                        <!--<svg class=\"checkmark\" viewBox=\"0 0 24 24\">-->\r\n                        <!--<path class=\"checkmark-path\" fill=\"none\" stroke=\"white\" d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"></path>-->\r\n                        <!--</svg>-->\r\n                        <!--</span>-->\r\n                        <!--</span>-->\r\n                        <!--</label>-->\r\n                    </div>\r\n\r\n                </div>\r\n                <!--<table border=\"3\" class=\"DrTable\">-->\r\n                <!--<thead>-->\r\n                <!--<tr>-->\r\n                <!--<th>No.</th>-->\r\n                <!--<th>Daily Routine Activity</th>-->\r\n                <!--<th>Start Time</th>-->\r\n                <!--<th>End Time</th>-->\r\n                <!--<th>CreatedOn</th>-->\r\n                <!--<th>Selected <br> <input type=\"checkbox\" @click=\"checkAll()\" ref=\"isCheckAll\"></th>-->\r\n                <!--<th>Remark</th>-->\r\n                <!--</tr>-->\r\n                <!--</thead>-->\r\n                <!--<tbody>-->\r\n                <!--<tr v-for=\"(item,i) in DailyRoutineList\" v-bind:value=\"item.drID\" :key=\"item.ID\"-->\r\n                <!--ref=\"dailyRoutineList_Update\">-->\r\n                <!--<td><label>{{i+1}}</label></td>-->\r\n                <!--<td><img :src=\"getIcon(item.DrReferenceType)\"/></td>-->\r\n                <!--<td><label>{{item.DrStartTime_convert}}</label></td>-->\r\n                <!--<td><label>{{item.DrEndTime_convert}}</label></td>-->\r\n                <!--<td><label>{{item.DrCreatedOn_convert}}</label></td>-->\r\n                <!--<td><input type=\"text\" class=\"form-control\" ref=\"refDrRemark\" :value=\"item.DrRemark\"></td>-->\r\n                <!--<td>-->\r\n                <!--<div class=\"form-group__wrapper row\">-->\r\n                <!--<div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12 checkbox_wrapper\">-->\r\n                <!--<label class=\"lblCheckBox\">-->\r\n                <!--<input class=\"form-control\" type=\"checkbox\" ref=\"chkitems\">-->\r\n                <!--<span>-->\r\n                <!--<span>-->\r\n                <!--<svg class=\"checkmark\" viewBox=\"0 0 24 24\"><path class=\"checkmark-path\"-->\r\n                <!--fill=\"none\" stroke=\"white\"-->\r\n                <!--d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"></path></svg>-->\r\n                <!--</span>-->\r\n                <!--</span>-->\r\n                <!--</label>-->\r\n                <!--</div>-->\r\n                <!--</div>-->\r\n                <!--</td>-->\r\n                <!--</tr>-->\r\n                <!--</tbody>-->\r\n                <!--</table>-->\r\n                <div class=\"row mt-3\" v-if=\"noActivity === false\">\r\n                    <div class=\"col-md-6\">\r\n                        <el-button type=\"danger\" @click=\"btnDelete\" class=\"float-left\">Delete</el-button>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                        <el-button type=\"primary\" @click=\"btnUpdate\" class=\"float-right\">Update</el-button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import DataSource from \"../data/datasource\";\r\n    import moment from \"moment\";\r\n\r\n    export default {\r\n        name: \"DailyRoutine\",\r\n        data() {\r\n            return {\r\n                obj_Student: {},\r\n                arrobj_Classes: {},\r\n                ddlTaskDescription: '',\r\n                txtTimeStart: '',\r\n                txtTimeStop: '',\r\n                txtTimeCurrent: '',\r\n                txtRemark: '',\r\n                ddlRest: '',\r\n                ddlFeed: '',\r\n                ddlFeedBottleType: '',\r\n                ddlLatchOn: '',\r\n                ddlPoop: '',\r\n                ddlTexture: '',\r\n                ddlColor: '',\r\n                ddlHygiene: '',\r\n\r\n                selectionRest: '',\r\n                selectionStartEndTime: '',\r\n                selectionCurrentTime: '',\r\n                selectionRemark: '',\r\n                selectionFeed: '',\r\n                selectionFeedBottleType: '',\r\n                selectionLatchOn: '',\r\n                selectionPoop: '',\r\n                selectionTexture: '',\r\n                selectionColor: '',\r\n                selectionHygiene: '',\r\n                hardCodeItem: [],\r\n                DailyRoutineList: [],\r\n                StudentHeader: null,\r\n                selectedStudent: null,\r\n                selectall: false,\r\n                selectItem: false,\r\n                activityClass: [],\r\n                noActivity: false,\r\n            };\r\n        },\r\n        async created() {\r\n            this.loadStudents();\r\n            this.loadHardCodeArray();\r\n            this.loadHardCodeClassArray();\r\n        },\r\n        async mounted() {\r\n            this.txtTimeStart = moment().format(\"HH:mm\");\r\n        },\r\n        methods: {\r\n            getIcon(value) {\r\n                return require('../img/' + this.hardCodeItem[value]);\r\n            },\r\n            getClass(value) {\r\n                return this.activityClass[value];\r\n            },\r\n            async loadHardCodeArray() {\r\n                this.hardCodeItem = {\r\n\r\n                    'Rest|Nap': \"Nap.png\",\r\n                    'Rest|Sleep': 'Sleep.png',\r\n\r\n                    'Feed|Bottle-Type|Formula': 'Formula.png',\r\n                    'Feed|Bottle-Type|Breast Milk': 'Breast Milk.png',\r\n                    'Feed|Solid': 'Solid.png',\r\n                    'Feed|Latch On|Left': 'Left.png',\r\n                    'Feed|Latch On|Right': 'Right.png',\r\n                    'Feed|Menu': 'Menu.png',\r\n\r\n                    'Poop|Texture|Creamy': 'Creamy.png',\r\n                    'Poop|Texture|Firm': 'Firm.png',\r\n                    'Poop|Texture|Hard': 'Hard.png',\r\n                    'Poop|Texture|Watery': 'Watery.png',\r\n                    'Poop|Color|Brown': 'Brown.png',\r\n                    'Poop|Color|Tan': 'Tan.png',\r\n                    'Poop|Color|Yellow': 'Yellow.png',\r\n                    'Poop|Color|Green': 'Green.png',\r\n                    'Poop|Color|Black': 'Black.png',\r\n\r\n                    'Hygiene|Diaper change': 'Diaper change.png',\r\n                    'Hygiene|Shower&Diaper change': 'Shower&Diaper Change.png',\r\n                    'Hygiene|Shower': 'Shower.png',\r\n                };\r\n\r\n            },\r\n            async loadHardCodeClassArray() {\r\n                this.activityClass = {\r\n\r\n                    'Rest|Nap': \"rest\",\r\n                    'Rest|Sleep': 'rest',\r\n\r\n                    'Feed|Bottle-Type|Formula': 'feed',\r\n                    'Feed|Bottle-Type|Breast Milk': 'feed',\r\n                    'Feed|Solid': 'feed',\r\n                    'Feed|Latch On|Left': 'feed',\r\n                    'Feed|Latch On|Right': 'feed',\r\n                    'Feed|Menu': 'feed',\r\n\r\n                    'Poop|Texture|Creamy': 'poop',\r\n                    'Poop|Texture|Firm': 'poop',\r\n                    'Poop|Texture|Hard': 'poop',\r\n                    'Poop|Texture|Watery': 'poop',\r\n                    'Poop|Color|Brown': 'poop',\r\n                    'Poop|Color|Tan': 'poop',\r\n                    'Poop|Color|Yellow': 'poop',\r\n                    'Poop|Color|Green': 'poop',\r\n                    'Poop|Color|Black': 'poop',\r\n\r\n                    'Hygiene|Diaper change': 'hygiene',\r\n                    'Hygiene|Shower&Diaper change': 'hygiene',\r\n                    'Hygiene|Shower': 'hygiene',\r\n                };\r\n\r\n            },\r\n            async loadStudents() {\r\n                // this.arrobj_Classes = [];\r\n                // await DataSource.shared.getAttendanceClass().then((result) => {\r\n                //     return result.Table;\r\n                // }).then((result) => {\r\n                //     for (let obj of result) {\r\n                //         DataSource.shared.getAllActiveStudentsByClass(obj.PK_Class_ID).then((result) => {\r\n                //             obj.arrobj_Student = result.Table;\r\n                //             this.arrobj_Classes.push(obj);\r\n                //         });\r\n                //     }\r\n                // });\r\n\r\n                try {\r\n                    this.$vs.loading();\r\n                    this.arrobj_Classes = [];\r\n                    const response = await DataSource.shared.getAttendanceClass();\r\n                    if (response) {\r\n                        this.$vs.loading.close();\r\n                        let tempClasses = response.Table;\r\n                        let tempStudent = [];\r\n                        for (let obj of tempClasses) {\r\n                            const studentResponse = await DataSource.shared.getAllActiveStudentsByClass(obj.PK_Class_ID);\r\n                            if (studentResponse) {\r\n                                obj.arrobj_Student = studentResponse.Table;\r\n                                await tempStudent.push(obj);\r\n                                // this.arrobj_Classes = tempStudent;\r\n                            }\r\n                        }\r\n                        this.arrobj_Classes = tempStudent;\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n\r\n            },\r\n            checkAll() {\r\n                try {\r\n                    if (this.selectall === false) {\r\n\r\n                        this.DailyRoutineList.forEach(m => {\r\n                            m.checked = true;\r\n                        });\r\n                        //\r\n                        // console.log(\"aa\");\r\n                        // this.$refs.chkitems.forEach(m => {\r\n                        //     m.checked = true;\r\n                        //     m.check = true;\r\n                        // });\r\n                        // this.selectItem = true;\r\n                        // console.log(this.selectItem);\r\n                    } else {\r\n\r\n                        this.DailyRoutineList.forEach(m => {\r\n                            m.checked = false;\r\n                        });\r\n\r\n                        //\r\n                        //\r\n                        // console.log(\"bbs\");\r\n                        // this.selectItem = false;\r\n                        // this.$refs.chkitems.forEach(m => {\r\n                        //     m.checked = false;\r\n                        // });\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            Load(Student_ID) {\r\n                try {\r\n                    const response = DataSource.shared.getDailyRoutineByStudentID(Student_ID.Student_ID);\r\n                    this.StudentHeader = Student_ID.First_Name;\r\n                    this.obj_Student = Student_ID;\r\n                    response.then((response) => {\r\n                        this.DailyRoutineList = (response.Table) ? response.Table : [];\r\n                        if (response.code === '2') {\r\n                            console.log(\"noach\");\r\n                            this.noActivity = true;\r\n                        }\r\n                    });\r\n\r\n                    if (this.$refs.isCheckAll.checked === true) {\r\n                        this.$refs.isCheckAll.checked = false;\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            TaskDescription() {\r\n                this.selectionRest = false;\r\n                this.selectionFeed = false;\r\n                this.selectionPoop = false;\r\n                this.selectionHygiene = false;\r\n                this.selectionStartEndTime = false;\r\n                this.selectionCurrentTime = false;\r\n                this.selectionRemark = false;\r\n                console.log(this.ddlTaskDescription);\r\n                if (this.ddlTaskDescription === 'Rest') {\r\n                    this.selectionRest = true;\r\n                    this.selectionStartEndTime = true;\r\n                    this.selectionRemark = true;\r\n                } else if (this.ddlTaskDescription === 'Feed') {\r\n                    this.selectionCurrentTime = true;\r\n                    this.selectionFeed = true;\r\n                    this.selectionFeedBottleType = false;\r\n                    this.selectionLatchOn = false;\r\n\r\n                    if (this.ddlFeed === \"Bottle-Type\") {\r\n                        this.selectionFeedBottleType = true;\r\n                    } else if (this.ddlFeed === \"Latch On\") {\r\n                        this.selectionLatchOn = true;\r\n                    }\r\n                    this.selectionRemark = true;\r\n                } else if (this.ddlTaskDescription === 'Poop') {\r\n                    this.selectionPoop = true;\r\n                    this.selectionTexture = false;\r\n                    this.selectionColor = false;\r\n\r\n                    if (this.ddlPoop === \"Texture\") {\r\n                        this.selectionTexture = true;\r\n                    } else if (this.ddlPoop === \"Color\") {\r\n                        this.selectionColor = true;\r\n                    }\r\n                    this.selectionRemark = true;\r\n                } else if (this.ddlTaskDescription === 'Hygiene') {\r\n                    this.selectionHygiene = true;\r\n                    this.selectionCurrentTime = true;\r\n                    this.selectionRemark = true;\r\n                }\r\n            },\r\n            btnAdd() {\r\n                try {\r\n                    let drReferenceType = '';\r\n\r\n                    if (Object.keys(this.obj_Student).length !== 0) {\r\n\r\n                        if (this.selectionRest === true) {\r\n                            if (this.ddlRest === \"Nap\") {\r\n                                drReferenceType = this.ddlTaskDescription + \"|\" + this.ddlRest;\r\n\r\n                            } else if (this.ddlRest === \"Sleep\") {\r\n                                drReferenceType = this.ddlTaskDescription + \"|\" + this.ddlRest;\r\n                            }\r\n                        } else if (this.selectionFeed == true) {\r\n                            if (this.selectionFeedBottleType == true) {\r\n                                if (this.ddlFeedBottleType === \"Formula\") {\r\n                                    drReferenceType = this.ddlTaskDescription + \"|\" + this.ddlFeed + \"|\" + this.ddlFeedBottleType;\r\n                                } else if (this.ddlFeedBottleType === \"Breast Milk\") {\r\n                                    drReferenceType = this.ddlTaskDescription + \"|\" + this.ddlFeed + \"|\" + this.ddlFeedBottleType;\r\n                                }\r\n                            } else if (this.ddlFeed === \"Solid\") {\r\n                                drReferenceType = this.ddlTaskDescription + \"|\" + this.ddlFeed;\r\n                            } else if (this.selectionLatchOn == true) {\r\n                                if (this.ddlLatchOn === \"Left\") {\r\n                                    drReferenceType = this.ddlTaskDescription + \"|\" + this.ddlFeed + \"|\" + this.ddlLatchOn;\r\n                                } else if (this.ddlLatchOn === \"Right\") {\r\n                                    drReferenceType = this.ddlTaskDescription + \"|\" + this.ddlFeed + \"|\" + this.ddlLatchOn;\r\n                                }\r\n\r\n                            } else if (this.ddlFeed === \"Menu\") {\r\n                                drReferenceType = this.ddlTaskDescription + \"|\" + this.ddlFeed;\r\n                            }\r\n\r\n                        } else if (this.selectionPoop == true) {\r\n                            if (this.selectionTexture == true) {\r\n                                drReferenceType = this.ddlTaskDescription + \"|\" + this.ddlPoop + \"|\" + this.ddlTexture;\r\n                            } else if (this.selectionColor == true) {\r\n                                drReferenceType = this.ddlTaskDescription + \"|\" + this.ddlPoop + \"|\" + this.ddlColor;\r\n                            }\r\n\r\n                        } else if (this.selectionHygiene == true) {\r\n                            if (this.ddlHygiene === \"Diaper change\") {\r\n                                drReferenceType = this.ddlTaskDescription + \"|\" + this.ddlHygiene;\r\n                            } else if (this.ddlHygiene === \"Shower&Diaper change\") {\r\n                                drReferenceType = this.ddlTaskDescription + \"|\" + this.ddlHygiene;\r\n                            } else if (this.ddlHygiene === \"Shower\") {\r\n                                drReferenceType = this.ddlTaskDescription + \"|\" + this.ddlHygiene;\r\n                            }\r\n\r\n                        }\r\n\r\n                        let btnAddObject = [];\r\n                        btnAddObject.DrStartTime = this.txtTimeStart;\r\n                        btnAddObject.DrEndTime = this.txtTimeStop;\r\n                        btnAddObject.DrRemark = this.txtRemark;\r\n                        btnAddObject.studentID = this.obj_Student.Student_ID;\r\n                        btnAddObject.DrReferenceType = drReferenceType;\r\n\r\n                        // console.log(btnAddObject.DrEndTime);\r\n                        // if (this.txtTimeStop === null || this.txtTimeStart === null || this.txtTimeStop === \"\" || this.txtTimeStart === \"\"){\r\n                        //     this.$notify.error({\r\n                        //         title: 'Error',\r\n                        //         message: 'Please fill in content'\r\n                        //     });\r\n                        // }else{\r\n\r\n\r\n                        if (this.selectionRest === true && this.txtTimeStop === \"\") {\r\n                            this.$notify.error({\r\n                                title: 'Error',\r\n                                message: 'Please fill in content'\r\n                            });\r\n                        } else if (this.selectionRest === true && this.txtTimeStart === \"\") {\r\n                            this.$notify.error({\r\n                                title: 'Error',\r\n                                message: 'Please fill in content'\r\n                            });\r\n                        } else if (this.selectionFeed === true && this.txtTimeStart === \"\") {\r\n                                this.$notify.error({\r\n                                    title: 'Error',\r\n                                    message: 'Please fill in content'\r\n                                });\r\n                        } else if (this.selectionHygiene === true && this.txtTimeStart === \"\") {\r\n                            this.$notify.error({\r\n                                title: 'Error',\r\n                                message: 'Please fill in content'\r\n                            });\r\n                        }else  {\r\n                            console.log(\"33\");\r\n                            const resp = DataSource.shared.addDailyRoutine(btnAddObject);\r\n                            resp.then((resp) => {\r\n\r\n                                let tempStudent = this.obj_Student;\r\n                                let tempClass = this.arrobj_Classes;\r\n                                Object.assign(this.$data, this.$options.data.call(this));\r\n\r\n                                this.arrobj_Classes = tempClass;\r\n                                this.loadHardCodeArray();\r\n\r\n                                this.obj_Student = tempStudent;\r\n                                this.Load(this.obj_Student);\r\n                                console.log(this.obj_Student.Student_ID);\r\n\r\n                                if (resp.code === '1') {\r\n                                    this.$notify({\r\n                                        title: 'Success',\r\n                                        message: 'Task added.',\r\n                                        type: 'success'\r\n                                    });\r\n                                    // alert('Task added.');\r\n\r\n                                } else {\r\n                                    this.$notify.error({\r\n                                        title: 'Error',\r\n                                        message: 'Error'\r\n                                    });\r\n                                    // alert('Error.');\r\n                                }\r\n                            });\r\n                        }\r\n\r\n                    } else {\r\n                        this.$notify.error({\r\n                            title: 'Error',\r\n                            message: 'Please select student.'\r\n                        });\r\n                        // alert(\"Please select student.\");\r\n                    }\r\n\r\n                } catch (e) {\r\n                    alert(e);\r\n                    console.log(e);\r\n                }\r\n            },\r\n            btnDelete() {\r\n                try {\r\n                    let Count = 0;\r\n                    let btnDelObject = [];\r\n                    this.DailyRoutineList.forEach((m, index) => {\r\n                        if (m.checked === true) {\r\n                            console.log(\"go\");\r\n                            Count++;\r\n                            btnDelObject.DrStudentID = m.DrStudentID;\r\n                            btnDelObject.drID = m.DrID;\r\n                            DataSource.shared.deleteDailyRoutine(btnDelObject);\r\n                            console.log(\"deleted\");\r\n                            this.selectall = false;\r\n                            this.$notify({\r\n                                title: 'Success',\r\n                                message: 'Activity Deleted',\r\n                                type: 'success'\r\n                            });\r\n                        }\r\n                    });\r\n                    // this.$refs.dailyRoutineList_Update.forEach((m, index) => {\r\n                    //     if (this.$refs.chkitems[index].checked === true) {\r\n                    //         Count++;\r\n                    //         btnDelObject.DrStudentID = this.DailyRoutineList[index].DrStudentID;\r\n                    //         btnDelObject.drID = this.DailyRoutineList[index].DrID;\r\n                    //         DataSource.shared.deleteDailyRoutine(btnDelObject);\r\n                    //     }\r\n                    // });\r\n                    if (Count < 1) {\r\n                        this.$notify.error({\r\n                            title: 'Error',\r\n                            message: 'Nothing selected!'\r\n                        });\r\n                        // alert(\"Nothing selected!\");\r\n                    }\r\n                    this.Load(this.obj_Student);\r\n\r\n                } catch (exception) {\r\n                    alert(exception);\r\n                }\r\n            },\r\n            btnUpdate() {\r\n                try {\r\n                    //if no checkbox is checked, pop up alert\r\n                    let Count = 0;\r\n                    let btnUpdateObject = [];\r\n                    console.log(this.DailyRoutineList);\r\n                    this.DailyRoutineList.forEach((m, index) => {\r\n\r\n                        if (m.checked === true) {\r\n                            Count++;\r\n                            btnUpdateObject.DrStudentID = m.DrStudentID;\r\n                            btnUpdateObject.drID = m.DrID;\r\n                            btnUpdateObject.drRemark = m.DrRemark;\r\n                            DataSource.shared.updateDailyRoutine(btnUpdateObject);\r\n                            this.selectall = false;\r\n                        }\r\n\r\n                    });\r\n                    // ;this.$refs.dailyRoutineList_Update.forEach((m, index) => {\r\n                    //\r\n                    //     if (this.$refs.chkitems[index].checked === true) {\r\n                    //         Count++;\r\n                    //         btnUpdateObject.DrStudentID = this.DailyRoutineList[index].DrStudentID;\r\n                    //         btnUpdateObject.drID = this.DailyRoutineList[index].DrID;\r\n                    //         btnUpdateObject.drRemark = this.$refs.refDrRemark[index].value;\r\n                    //         DataSource.shared.updateDailyRoutine(btnUpdateObject);\r\n                    //     }\r\n                    //\r\n                    // });\r\n                    if (Count < 1) {\r\n                        this.$notify.error({\r\n                            title: 'Error',\r\n                            message: 'Nothing selected!'\r\n                        });\r\n                        // alert(\"Nothing selected!\");\r\n                    } else {\r\n                        this.$notify({\r\n                            title: 'Success',\r\n                            message: 'Task Updated.',\r\n                            type: 'success'\r\n                        });\r\n                        // alert(\"Task Updated.\");\r\n                    }\r\n                    this.Load(this.obj_Student);\r\n                } catch (exception) {\r\n                    alert(exception);\r\n                }\r\n            },\r\n        }\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n    .DrTable {\r\n        width: 80%;\r\n        margin-top: 20px;\r\n    }\r\n\r\n    .DrTable td, .DrTable th, .DrTable label {\r\n        text-align: left;\r\n        padding: 10px;\r\n    }\r\n\r\n    .DrTable tr:nth-child(even) {\r\n        background: #fff;\r\n    }\r\n\r\n    input[type='checkbox'] {\r\n        width: 30px;\r\n        height: 30px;\r\n        background: white;\r\n        border-radius: 5px;\r\n        border: 2px solid #555;\r\n    }\r\n\r\n    .checkbox_wrapper {\r\n        min-width: 100%;\r\n    }\r\n\r\n    .lblCheckBox {\r\n        width: 100%;\r\n    }\r\n</style>"],"sourceRoot":"src/pages"}]}