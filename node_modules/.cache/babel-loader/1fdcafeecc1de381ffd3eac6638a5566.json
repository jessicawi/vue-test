{"remainingRequest":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\components\\Promotion_Component.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\components\\Promotion_Component.vue","mtime":1558249494604},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1553612671158},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1553612666995}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\"use strict\";\n\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport _getIterator from \"C:\\\\Users\\\\jessi\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/get-iterator\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\jessi\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Promise from \"C:\\\\Users\\\\jessi\\\\Documents\\\\git\\\\vue-test\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport $ from 'jquery';\nimport DataSource from \"../data/datasource\";\nexport default {\n  name: \"Promotion_Component\",\n  data: function data() {\n    return {\n      arrobj_NewAcademicYears: null,\n      arrobj_NewClasses: null,\n      obj_SelectedNewYear: null,\n      obj_SelectedNewClass: null,\n      filterStudents: \"\",\n      nextlvl: null\n    };\n  },\n  props: [\"selectedStudents\", \"courseId\", \"arrobjSelectedStudentID\", \"showStudentTag\", \"isStudent\"],\n  // props: {selectedStudents: [Array], CourseId: String, arrobjSelectedStudentID: [Array]},\n  methods: {\n    clearSelection: function clearSelection() {\n      if (this.isStudent === true) {\n        this.obj_SelectedNewYear = \"\";\n        this.obj_SelectedNewClass = \"\";\n      }\n    },\n    sleep: function sleep(milliseconds) {\n      return new _Promise(function (resolve) {\n        return setTimeout(resolve, milliseconds);\n      });\n    },\n    isNull: function isNull(obj) {\n      return obj === null || obj === undefined || obj === \"undefined\";\n    },\n    RemoveSelectedStudent: function RemoveSelectedStudent(student) {\n      this.selectedStudents = this.selectedStudents.filter(function (d) {\n        return d.Student_ID !== student;\n      });\n      this.arrobjSelectedStudentID = this.arrobjSelectedStudentID.filter(function (d) {\n        return d !== student;\n      });\n    },\n    promoteStudents: function () {\n      var _promoteStudents = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        var _this = this;\n\n        var str_StudentIDs, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, i;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                str_StudentIDs = \"\";\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _iteratorError = undefined;\n                _context.prev = 4;\n\n                for (_iterator = _getIterator(this.arrobjSelectedStudentID); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                  i = _step.value;\n                  str_StudentIDs += i + \",\";\n                }\n\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](4);\n                _didIteratorError = true;\n                _iteratorError = _context.t0;\n\n              case 12:\n                _context.prev = 12;\n                _context.prev = 13;\n\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n\n              case 15:\n                _context.prev = 15;\n\n                if (!_didIteratorError) {\n                  _context.next = 18;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 18:\n                return _context.finish(15);\n\n              case 19:\n                return _context.finish(12);\n\n              case 20:\n                str_StudentIDs = str_StudentIDs.substr(0, str_StudentIDs.length - 1);\n\n                if (this.obj_SelectedNewYear === null || this.obj_SelectedNewClass === null) {\n                  this.$notify.error({\n                    title: 'Error',\n                    message: 'Please fill in content'\n                  });\n                } else {\n                  this.showLoading();\n                }\n\n                _context.next = 24;\n                return DataSource.shared.saveStudentPromotions(str_StudentIDs, this.obj_SelectedNewYear.PK_Semester_ID, this.obj_SelectedNewClass.PK_Course_ID, this.obj_SelectedNewClass.PK_Class_ID).then(function (result) {\n                  _this.hideLoading();\n\n                  if (!_this.isNull(result) && result.code === \"1\") {\n                    _this.$notify({\n                      title: 'Success',\n                      message: 'Students Promoted',\n                      type: 'success'\n                    });\n                  } else if (!_this.isNull(result) && result.code === \"2\") {\n                    _this.$notify({\n                      title: 'Student Exceeded',\n                      message: 'Number of students assign to this class have excceded max number of class',\n                      type: 'success'\n                    });\n                  }\n\n                  _this.$emit(\"result\", true);\n                });\n\n              case 24:\n                // this.filterStudents = this.selectedStudents;\n                this.hideLoading();\n\n              case 25:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[4, 8, 12, 20], [13,, 15, 19]]);\n      }));\n\n      function promoteStudents() {\n        return _promoteStudents.apply(this, arguments);\n      }\n\n      return promoteStudents;\n    }(),\n    emitclasslevel: function emitclasslevel() {\n      if (this.isStudent === true) {\n        console.log(\"isstudent\");\n        this.$emit('studentPromoteAction', this.obj_SelectedNewYear.PK_Semester_ID, this.obj_SelectedNewClass.PK_Course_ID, this.obj_SelectedNewClass.PK_Class_ID);\n      }\n    },\n    loadNewYears: function loadNewYears() {\n      var _this2 = this;\n\n      DataSource.shared.getAcademicYear().then(function (result) {\n        _this2.arrobj_NewAcademicYears = result.Table;\n      });\n    },\n    loadNewClasses: function loadNewClasses() {\n      var _this3 = this;\n\n      if (this.isNull(this.obj_SelectedNewYear)) return;\n      this.arrobj_NewClasses = null;\n      var promise_NextLevel = new _Promise(function (resolve) {\n        DataSource.shared.getNextLevel(_this3.courseId).then(function (result) {\n          resolve(result.Table[0]);\n          _this3.nextlvl = result.Table;\n        });\n      });\n      var promise_Classes = new _Promise(function (resolve) {\n        DataSource.shared.getClassByAcademicYear(_this3.obj_SelectedNewYear.PK_Semester_ID).then(function (result) {\n          resolve(_this3.groupBy(result.Table, \"CRS_Course_Name\"));\n        });\n      });\n\n      _Promise.all([promise_NextLevel, promise_Classes]).then(function (result) {\n        var obj_NextLevel = result[0];\n        var temparrobj_Classes = result[1];\n        var index = temparrobj_Classes.findIndex(function (x) {\n          return x.Str_SortBy === obj_NextLevel.CRS_Course_Name;\n        }); // this.arrobj_NewClasses = temparrobj_Classes.splice(0, index + 1);\n\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          var _loop = function _loop() {\n            var obj = _step2.value;\n            _this3.arrobj_NewClasses = temparrobj_Classes.filter(function (d) {\n              return d.Str_SortBy === obj.CRS_Course_Name;\n            });\n          };\n\n          for (var _iterator2 = _getIterator(_this3.nextlvl), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            _loop();\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      });\n      /*let obj_NextLevel =\n       let temparrobj_Classes = DataSource.shared.getClassByAcademicYear(this.obj_SelectedNewYear.PK_Semester_ID).then((result) => {\n          if (result.code == 2 || result.code == 99)\n              return;\n           return this.groupBy(result.Table, \"CRS_Course_Name\");\n      });*/\n\n      /*let temparrobj_Classes = new Promise((resolve, reject) => {\n          DataSource.shared.getClassByAcademicYear(this.obj_SelectedNewYear.PK_Semester_ID).then((result) => {\n              if (result.code == 2 || result.code == 99) {\n                  this.obj_SelectedNewClass = null;\n                  return;\n              }\n               resolve this.groupBy(result.Table, \"CRS_Course_Name\");\n          });\n      });\n       temparrobj_Classes.then((result) => {\n          DataSource.shared.getNextLevel(this.obj_SelectedClass.PK_Course_ID).then((result) => {\n              console.log(result);\n          });\n      });*/\n\n      /*DataSource.shared.getNextLevel(this.obj_SelectedClass.PK_Course_ID).then((result) => {\n          console.log(result.Table[0].CRS_Course_Name)\n          console.log(result);\n      });*/\n\n    },\n    close: function close() {\n      this.$emit(\"result\", true);\n    },\n\n    /*#region Array Grouping Function*/\n    groupBy: function groupBy(data, key) {\n      //Credits to Ceasar Bautista and Juan Castillo @ stackoverflow\n\n      /*return data.reduce(function(storage, item) {\n          let group = item[key];\n           storage[group] = storage[group] || [];\n          storage[group].push(item);\n          return storage;\n      }, {});*/\n      var ArrObj_Sorted = [];\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        var _loop2 = function _loop2() {\n          var item = _step3.value;\n          var index = ArrObj_Sorted.findIndex(function (x) {\n            return x.Str_SortBy === item[key];\n          });\n\n          if (index === -1) {\n            ArrObj_Sorted.push({\n              Str_SortBy: item[key],\n              ArrObj_Items: [item]\n            });\n          } else ArrObj_Sorted[index].ArrObj_Items.push(item);\n        };\n\n        for (var _iterator3 = _getIterator(data), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          _loop2();\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return ArrObj_Sorted;\n    },\n\n    /*#endregion*/\n\n    /*#region Loader Functions*/\n    showLoading: function showLoading() {\n      this.$vs.loading();\n    },\n    hideLoading: function hideLoading() {\n      this.$vs.loading.close();\n    }\n  },\n  mounted: function mounted() {\n    this.loadNewYears();\n    this.loadNewClasses(); // this.loadStudentID();\n    // this.filterStudents = this.selectedStudents;\n    // this.arrobjSelectedStudentID = this.selectedStudents.map(d => d.Student_ID);\n  }\n};",{"version":3,"sources":["Promotion_Component.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"container-fluid\">\r\n        <div class=\"form-group row promotion-modal-tag\" v-if=\"showStudentTag === true\">\r\n            <el-tag\r\n                    :key=\"student.Student_ID\"\r\n                    v-for=\"student in selectedStudents\"\r\n                    closable\r\n                    :disable-transitions=\"false\"\r\n                    @close=\"RemoveSelectedStudent(student.Student_ID)\">\r\n                {{student.Student_Name}}\r\n            </el-tag>\r\n        </div>\r\n\r\n\r\n        <div class=\"row promotion-clear-select\" v-if=\"isStudent === true\">\r\n            <div class=\"col-6\">\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <button class=\"btn btn-secondary float-right\" @click=\"clearSelection\"><i class=\"material-icons\">\r\n                    cancel\r\n                </i> Clear\r\n                </button>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n            <label for=\"ddl_NewYear\">Academic Year</label>\r\n            <select id=\"ddl_NewYear\" class=\"mb-3 form-control\" v-model=\"obj_SelectedNewYear\"\r\n                    @change=\"loadNewClasses\">\r\n                <option v-for=\"tempobj_AcademicYear of arrobj_NewAcademicYears\" :value=\"tempobj_AcademicYear\"\r\n                        :key=\"tempobj_AcademicYear.id\">\r\n                    {{tempobj_AcademicYear.SMT_Code + \": \" + tempobj_AcademicYear.SMT_From_convert + \" - \" +\r\n                    tempobj_AcademicYear.SMT_To_convert}}\r\n                </option>\r\n            </select>\r\n        </div>\r\n\r\n        <div class=\"form-group row\">\r\n            <label for=\"ddl_NewClass\">Class </label>\r\n            <select id=\"ddl_NewClass\" class=\"mb-3 form-control\" v-model=\"obj_SelectedNewClass\" @change=\"emitclasslevel\">\r\n                <optgroup v-for=\"tempobj_Level of arrobj_NewClasses\" :label=\"tempobj_Level.Str_SortBy\"\r\n                          :key=\"tempobj_Level.id\">\r\n                    <option v-for=\"tempobj_Class of tempobj_Level.ArrObj_Items\" :value=\"tempobj_Class\"\r\n                            :key=\"tempobj_Class.id\">\r\n                        {{tempobj_Class.CLS_ClassName}} of {{tempobj_Class.CLS_Batch}}\r\n                    </option>\r\n                </optgroup>\r\n            </select>\r\n        </div>\r\n\r\n        <div class=\"row\" v-if=\"showStudentTag === true\">\r\n            <div class=\"col-6\">\r\n                <button class=\"btn btn-primary\" @click=\"promoteStudents\">OK</button>\r\n            </div>\r\n            <div class=\"col-6\">\r\n                <button class=\"btn btn-secondary\" @click=\"close\">Cancel</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    \"use strict\";\r\n    import $ from 'jquery';\r\n    import DataSource from \"../data/datasource\";\r\n\r\n    export default {\r\n        name: \"Promotion_Component\",\r\n        data() {\r\n            return {\r\n                arrobj_NewAcademicYears: null,\r\n                arrobj_NewClasses: null,\r\n                obj_SelectedNewYear: null,\r\n                obj_SelectedNewClass: null,\r\n                filterStudents: \"\",\r\n                nextlvl: null\r\n            };\r\n        },\r\n        props: [\"selectedStudents\", \"courseId\", \"arrobjSelectedStudentID\", \"showStudentTag\", \"isStudent\"],\r\n        // props: {selectedStudents: [Array], CourseId: String, arrobjSelectedStudentID: [Array]},\r\n        methods: {\r\n            clearSelection() {\r\n                if (this.isStudent === true) {\r\n                    this.obj_SelectedNewYear = \"\";\r\n                    this.obj_SelectedNewClass = \"\";\r\n                }\r\n            },\r\n            sleep(milliseconds) {\r\n                return new Promise(resolve => setTimeout(resolve, milliseconds));\r\n            },\r\n            isNull(obj) {\r\n                return (obj === null || obj === undefined || obj === \"undefined\");\r\n            },\r\n            RemoveSelectedStudent(student) {\r\n                this.selectedStudents = this.selectedStudents.filter(d => {\r\n                    return d.Student_ID !== student;\r\n                });\r\n                this.arrobjSelectedStudentID = this.arrobjSelectedStudentID.filter(d => {\r\n                    return d !== student;\r\n                });\r\n            },\r\n            async promoteStudents() {\r\n                let str_StudentIDs = \"\";\r\n                for (let i of this.arrobjSelectedStudentID) {\r\n                    str_StudentIDs += i + \",\";\r\n                }\r\n\r\n\r\n                str_StudentIDs = str_StudentIDs.substr(0, str_StudentIDs.length - 1);\r\n                if (this.obj_SelectedNewYear === null || this.obj_SelectedNewClass === null) {\r\n\r\n                    this.$notify.error({\r\n                        title: 'Error',\r\n                        message: 'Please fill in content'\r\n                    });\r\n                } else {\r\n\r\n                    this.showLoading();\r\n                }\r\n                await DataSource.shared.saveStudentPromotions(str_StudentIDs, this.obj_SelectedNewYear.PK_Semester_ID, this.obj_SelectedNewClass.PK_Course_ID, this.obj_SelectedNewClass.PK_Class_ID).then((result) => {\r\n\r\n                    this.hideLoading();\r\n                    if (!this.isNull(result) && result.code === \"1\") {\r\n                        this.$notify({\r\n                            title: 'Success',\r\n                            message: 'Students Promoted',\r\n                            type: 'success'\r\n                        });\r\n                    } else if (!this.isNull(result) && result.code === \"2\") {\r\n                        this.$notify({\r\n                            title: 'Student Exceeded',\r\n                            message: 'Number of students assign to this class have excceded max number of class',\r\n                            type: 'success'\r\n                        });\r\n                    }\r\n                    this.$emit(\"result\", true);\r\n                });\r\n                // this.filterStudents = this.selectedStudents;\r\n\r\n                this.hideLoading();\r\n            },\r\n            emitclasslevel() {\r\n                if (this.isStudent === true) {\r\n                    console.log(\"isstudent\");\r\n                    this.$emit('studentPromoteAction', this.obj_SelectedNewYear.PK_Semester_ID, this.obj_SelectedNewClass.PK_Course_ID, this.obj_SelectedNewClass.PK_Class_ID);\r\n                }\r\n            },\r\n            loadNewYears() {\r\n                DataSource.shared.getAcademicYear().then((result) => {\r\n                    this.arrobj_NewAcademicYears = result.Table;\r\n                });\r\n            },\r\n            loadNewClasses() {\r\n                if (this.isNull(this.obj_SelectedNewYear))\r\n                    return;\r\n\r\n                this.arrobj_NewClasses = null;\r\n\r\n                let promise_NextLevel = new Promise((resolve) => {\r\n                    DataSource.shared.getNextLevel(this.courseId).then((result) => {\r\n                        resolve(result.Table[0]);\r\n                        this.nextlvl = result.Table;\r\n                    });\r\n                });\r\n\r\n                let promise_Classes = new Promise((resolve) => {\r\n                    DataSource.shared.getClassByAcademicYear(this.obj_SelectedNewYear.PK_Semester_ID).then((result) => {\r\n                        resolve(this.groupBy(result.Table, \"CRS_Course_Name\"));\r\n                    });\r\n                });\r\n\r\n                Promise.all([promise_NextLevel, promise_Classes]).then((result) => {\r\n                    let obj_NextLevel = result[0];\r\n                    let temparrobj_Classes = result[1];\r\n                    let index = temparrobj_Classes.findIndex(x => x.Str_SortBy === obj_NextLevel.CRS_Course_Name);\r\n\r\n                    // this.arrobj_NewClasses = temparrobj_Classes.splice(0, index + 1);\r\n                    for (let obj of this.nextlvl) {\r\n                        this.arrobj_NewClasses = temparrobj_Classes.filter(d => {\r\n                            return d.Str_SortBy === obj.CRS_Course_Name;\r\n                        });\r\n                    }\r\n                });\r\n\r\n                /*let obj_NextLevel =\r\n\r\n                let temparrobj_Classes = DataSource.shared.getClassByAcademicYear(this.obj_SelectedNewYear.PK_Semester_ID).then((result) => {\r\n                    if (result.code == 2 || result.code == 99)\r\n                        return;\r\n\r\n                    return this.groupBy(result.Table, \"CRS_Course_Name\");\r\n                });*/\r\n\r\n                /*let temparrobj_Classes = new Promise((resolve, reject) => {\r\n                    DataSource.shared.getClassByAcademicYear(this.obj_SelectedNewYear.PK_Semester_ID).then((result) => {\r\n                        if (result.code == 2 || result.code == 99) {\r\n                            this.obj_SelectedNewClass = null;\r\n                            return;\r\n                        }\r\n\r\n                        resolve this.groupBy(result.Table, \"CRS_Course_Name\");\r\n                    });\r\n                });\r\n\r\n                temparrobj_Classes.then((result) => {\r\n                    DataSource.shared.getNextLevel(this.obj_SelectedClass.PK_Course_ID).then((result) => {\r\n                        console.log(result);\r\n                    });\r\n                });*/\r\n\r\n\r\n                /*DataSource.shared.getNextLevel(this.obj_SelectedClass.PK_Course_ID).then((result) => {\r\n                    console.log(result.Table[0].CRS_Course_Name)\r\n                    console.log(result);\r\n                });*/\r\n            },\r\n            close() {\r\n                this.$emit(\"result\", true);\r\n            },\r\n\r\n            /*#region Array Grouping Function*/\r\n            groupBy(data, key) {\r\n                //Credits to Ceasar Bautista and Juan Castillo @ stackoverflow\r\n                /*return data.reduce(function(storage, item) {\r\n                    let group = item[key];\r\n\r\n                    storage[group] = storage[group] || [];\r\n                    storage[group].push(item);\r\n                    return storage;\r\n                }, {});*/\r\n\r\n                let ArrObj_Sorted = [];\r\n\r\n                for (let item of data) {\r\n                    let index = ArrObj_Sorted.findIndex(x => x.Str_SortBy === item[key]);\r\n\r\n                    if (index === -1) {\r\n                        ArrObj_Sorted.push({Str_SortBy: item[key], ArrObj_Items: [item]});\r\n                    } else\r\n                        ArrObj_Sorted[index].ArrObj_Items.push(item);\r\n                }\r\n\r\n                return ArrObj_Sorted;\r\n            },\r\n            /*#endregion*/\r\n\r\n            /*#region Loader Functions*/\r\n            showLoading() {\r\n                this.$vs.loading();\r\n            }\r\n            ,\r\n            hideLoading() {\r\n                this.$vs.loading.close();\r\n            }\r\n            ,\r\n            /*#endregion*/\r\n        },\r\n        mounted() {\r\n            this.loadNewYears();\r\n            this.loadNewClasses();\r\n            // this.loadStudentID();\r\n\r\n            // this.filterStudents = this.selectedStudents;\r\n            // this.arrobjSelectedStudentID = this.selectedStudents.map(d => d.Student_ID);\r\n\r\n\r\n        }\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src/components"}]}