{"remainingRequest":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\StudentEditClass.vue?vue&type=style&index=0&id=d66f8692&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\StudentEditClass.vue","mtime":1556124853606},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\css-loader\\index.js","mtime":1552619058288},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1553612666995},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\postcss-loader\\src\\index.js","mtime":1552619058487},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1553612666995}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.buttonArea button\n{\n    display:inline;\n}\n",{"version":3,"sources":["StudentEditClass.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuLA;AACA;AACA;AACA","file":"StudentEditClass.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div id=\"student-edit-class\" class=\"mt-3 container\">\r\n        <label style=\"display:none !important;\">{{lblStudentID}}</label>\r\n        <label style=\"display:none !important;\">{{lblCourseID}}</label>\r\n        <label style=\"display:none !important;\">{{lblSemID}}</label>\r\n        <label style=\"display:none !important;\">{{lblSubjectCourseID}}</label>\r\n        <div>\r\n            <div class=\"row\">\r\n                <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                    <label>Student Name: {{lblStudentName}}</label>\r\n                </div>\r\n\r\n                <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                    <label>Student Status: {{lblStudentStatus}}</label>\r\n                </div>\r\n\r\n                <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                    <label>Class</label>\r\n                    <select ref=\"ddlEditClass\" class=\"form-control pro-edt-select form-control-primary\">\r\n                        <option v-for=\"item in EditClassList\" v-bind:value=\"item.PK_Class_ID.trim()\">{{ item.CLS_ClassName.trim()}} ({{item.CLS_Batch.trim()}})</option>\r\n                    </select>\r\n                </div>\r\n\r\n                <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 buttonArea\">\r\n                    <button class=\"btn btn-primary waves-effect waves-light m-r-10\" v-on:click=\"AddClass\">Add Class</button>\r\n                </div>\r\n            </div>\r\n\r\n            <div v-if=\"list.length>0\">\r\n                <data-tables :data=\"list\">\r\n                    <el-table-column v-for=\"studentClassListInfo in studentClassList\" :prop=\"studentClassListInfo.prop\" :label=\"studentClassListInfo.label\" :key=\"studentClassListInfo.prop\"\r\n                                     sortable=\"custom\">\r\n                    </el-table-column>\r\n                </data-tables>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import DataSource from \"../data/datasource\";\r\n\r\n    export default {\r\n        name: \"StudentEditClass\",\r\n        async created() {\r\n            this.lblStudentID = this.$route.query.id;\r\n            this.lblCourseID = this.$route.query.courseid;\r\n            this.lblSemID = this.$route.query.semid;\r\n            this.lblSubjectCourseID = this.$route.query.subjectcourseid;\r\n            await this.BindStudentInfo();\r\n        },\r\n        async mounted() {\r\n            await this.GetStudentClassList();\r\n        },\r\n        data() {\r\n            return {\r\n                EditClassList: [],\r\n\r\n                lblStudentID: '',\r\n                lblCourseID: '',\r\n                lblStudentName: '',\r\n                lblStudentStatus: '',\r\n                lblSemID: '',\r\n                lblSubjectCourseID: '',\r\n\r\n                list: [],\r\n                studentClassList: [{\r\n                    prop: \"CLS_ClassName\",\r\n                    label: \"Class Name\",\r\n                }, {\r\n                    prop: \"SCI_AssignedOn_convert\",\r\n                    label: \"Assigned On\"\r\n                }, {\r\n                    prop: \"CONname\",\r\n                    label: \"Assigned By\"\r\n                }, {\r\n                    prop: \"CLS_Batch\",\r\n                    label: \"Programme\"\r\n                }],\r\n            };\r\n        },\r\n        methods: {\r\n            async BindEditClass(queryString) {\r\n                try {\r\n                    const response = await DataSource.shared.getEditClass(this.lblSemID, this.lblSubjectCourseID, queryString);\r\n                    if (response) {\r\n                        if (response) {\r\n                            this.EditClassListResponse = response.Table;\r\n                            this.EditClassListResponse.forEach(m => {\r\n                                this.EditClassList.push(m);\r\n                            });\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async BindStudentInfo() {\r\n                try {\r\n                    const response = await DataSource.shared.getStudent(this.lblStudentID, '', '', '', '');\r\n                    if (response) {\r\n                        this.studentInfoResponse = response.Table;\r\n                        this.studentInfoResponse.forEach(m => {\r\n                            this.lblStudentName = m.Full_Name + ' ' + m.Last_name;\r\n                            this.lblStudentStatus = m.Status;\r\n                        });\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async GetStudentClassList() {\r\n                this.$vs.loading();\r\n                try {\r\n                    const response = await DataSource.shared.getStudentClass(this.lblStudentID, this.lblCourseID);\r\n                    if (response) {\r\n                        if (response.code === '99') {\r\n                            alert('Please try again later');\r\n                        }\r\n                        else if (response.code === '2')\r\n                        {\r\n                            this.BindEditClass('');\r\n                        }\r\n                        else\r\n                        {\r\n                            this.list = response.Table;\r\n\r\n                            //filter the added class to BindEditClass\r\n                            let customClassNotEqual='';\r\n                            this.GetStudentClassListResponse = response.Table;\r\n                            this.GetStudentClassListResponse.forEach(m => {\r\n                                if (customClassNotEqual == '')\r\n                                {\r\n                                    customClassNotEqual = m.PK_Class_ID;\r\n                                }\r\n                                else\r\n                                {\r\n                                    customClassNotEqual = customClassNotEqual + \",\" + m.PK_Class_ID;\r\n                                }\r\n                            });\r\n\r\n                            this.BindEditClass(customClassNotEqual);\r\n                            //filter the added class to BindEditClass\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n                this.$vs.loading.close()\r\n            },\r\n            async AddClass() {\r\n                if (this.$refs.ddlEditClass.value === '' || this.$refs.ddlEditClass.value === null)\r\n                {\r\n                    alert('Please choose class');\r\n                }\r\n                else\r\n                {\r\n                    try {\r\n                        const response = await DataSource.shared.setClass(this.lblStudentID, this.$refs.ddlEditClass.value, this.lblCourseID);\r\n                        if (response) {\r\n                            if (response.code === '1')\r\n                            {\r\n                                alert('Class added');\r\n                                window.location.replace('/student-edit-class?courseid=' + this.lblCourseID + '&id=' + this.lblStudentID + '&semid=' + this.lblSemID + '&subjectcourseid=' + this.lblSubjectCourseID);\r\n                            }\r\n                            else if (response.code === '2')\r\n                            {\r\n                                alert('The class have been exceeded max number of student!');\r\n                            }\r\n                            else if (response.code === '99') {\r\n                                alert('Please try again later');\r\n                            }\r\n                        }\r\n                    } catch (e) {\r\n                        this.results = e;\r\n                    }\r\n                }\r\n            },\r\n        },\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .buttonArea button\r\n    {\r\n        display:inline;\r\n    }\r\n</style>"]}]}