{"remainingRequest":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\PostApprove.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\PostApprove.vue","mtime":1555523233012},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1553612671158},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1553612666995}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport DataSource from \"../data/datasource\";\nimport PostComponent from \"../components/postCompnent\";\n\nexport default {\n    name: \"PostApprove\",\n    components: {\n        PostComponent,\n    },\n    data() {\n        return {\n            postID: '',\n            postType: '',\n            postList: [],\n            approverPostAction: '',\n            postCommentHistoryList: [],\n            inputPostComment: '',\n            passTrueToPostComponent: 'YES',\n        };\n    },\n    async created() {\n        if (this.$route.params.postID === '' || this.$route.params.postID === null || this.$route.params.postID === undefined) { //this is from email link\n            if (this.$route.query.id != null || this.$route.query.id !== undefined) {\n                await this.deString(this.$route.query.id);\n            } else {\n                this.$router.push('/portfolio');\n            }\n        } else {\n            this.postID = this.$route.params.postID;\n\n            await this.getPost(this.$route.params.postID);\n            await this.checkApprover(this.$route.params.postID);\n            await this.getPostComment(this.$route.params.postID);\n        }\n    },\n    methods: {\n        async deString(inputString) {\n            try {\n                const response = await DataSource.shared.deString(inputString);\n                if (response) {\n                    switch (response.code) {\n                        case \"88\":\n                            this.$router.push('/');\n                            break;\n                        case \"99\":\n                            this.$router.push('/pendingapprover');\n                            break;\n                    }\n                    this.postID = response.string;\n\n                    await this.getPost(this.postID);\n                    await this.checkApprover(this.postID);\n                    await this.getPostComment(this.postID);\n                }\n            } catch (e) {\n                this.results = e;\n            }\n        },\n        async getPost(postID) {\n            try {\n                let jsonStringPostID = JSON.stringify([postID]);\n\n                const response = await DataSource.shared.getPostByPostIDByStatus(jsonStringPostID, 'PENDING');\n                if (response) {\n                    if (response.code === '88') {\n                        window.location.replace('/');\n                    } else if (response.code === '99') {\n                        this.$notify.error({\n                            title: 'Error',\n                            message: 'Error'\n                        });\n                    } else if (response.code === '2') {\n                        const response = await DataSource.shared.getPostByPostID(jsonStringPostID);\n                        if (response) {\n                            if (response.code === '88') {\n                                window.location.replace('/');\n                            } else if (response.code === '99') {\n                                this.$notify.error({\n                                    title: 'Error',\n                                    message: 'Error'\n                                });\n                            } else if (response.code === '2') {\n                                window.location.replace('/pendingapprover');\n                            } else {\n                                this.postList = response.Table;\n                                this.postType = 'Posting - ' + response.Table[0].PostType;\n                            }\n                        }\n                    } else {\n                        this.postList = response.Table;\n                        this.postType = 'Posting - ' + response.Table[0].PostType;\n                    }\n                }\n            } catch (e) {\n                this.results = e;\n            }\n        },\n        async checkApprover(postID) {\n            try {\n                const response = await DataSource.shared.checkApproveStatusByUser(postID, \"POSTING\");\n                if (response) {\n                    if (response.code === '1') {\n                        this.approverPostAction = true;\n                    } else {\n                        this.approverPostAction = false;\n                    }\n                }\n            } catch (e) {\n                this.results = e;\n            }\n        },\n        async getPostComment(postID) {\n            try {\n                const response = await DataSource.shared.getApproverComment(postID);\n                if (response) {\n                    this.postCommentHistoryList = response.Table;\n                }\n            } catch (e) {\n                this.results = e;\n            }\n        },\n        async approvePost(actionStatus) {\n            try {\n                this.$vs.loading();\n\n                const response = await DataSource.shared.approvePost(this.postID, this.postType, actionStatus, this.inputPostComment);\n                if (response) {\n                    this.$vs.loading.close();\n                    if (response) {\n                        if (response.code === '88') {\n                            window.location.replace('/');\n                        } else if (response.code === '99') {\n                            this.$notify.error({\n                                title: 'Error',\n                                message: 'Error'\n                            });\n                        } else {\n                            this.$notify({\n                                title: 'Success',\n                                message: 'Done!',\n                                type: 'success'\n                            });\n                            this.$router.go(-1);\n                            // window.location.replace('/');\n                        }\n                    }\n                }\n            } catch (e) {\n                this.results = e;\n            }\n        },\n    },\n};\n",{"version":3,"sources":["PostApprove.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"PostApprove.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div id=\"postapprove\">\r\n        <div class=\"container\">\r\n            <div class=\"row header\">\r\n                <h3 class=\"col-lg-8 text-left\">POST REQUEST</h3>\r\n                <div class=\"col-lg-4\">\r\n                    <router-link :to=\"{name: 'Pending Approver'}\">\r\n                        <el-button type=\"primary\" round class=\"float-right\"><i class=\"material-icons\">\r\n                            chevron_left\r\n                        </i> BACK</el-button>\r\n                    </router-link>\r\n                </div>\r\n            </div>\r\n            <div class=\"row post-approve_content\">\r\n                <div v-if=\"approverPostAction\" class=\"action-btn pt-2 pb-2\">\r\n                    <el-button type=\"primary\" round v-on:click=\"approvePost('APPROVED')\"\r\n                               class=\"btn btn-primary waves-effect waves-light m-r-10 btnFamilyIDSearch\"><i\r\n                            class=\"material-icons\">\r\n                        check\r\n                    </i> Approve\r\n                    </el-button>\r\n                    <el-button type=\"info\" round v-on:click=\"approvePost('REJECT')\"\r\n                               class=\"btn btn-info waves-effect waves-light m-r-10 btnFamilyIDSearch\"><i\r\n                            class=\"material-icons\">\r\n                        close\r\n                    </i> Reject\r\n                    </el-button>\r\n                </div>\r\n                <label style=\"display:none !important;\">{{ postID }}</label>\r\n                <label style=\"display:none !important;\">{{ postType }}</label>\r\n\r\n                <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\" v-for=\"object of postList\">\r\n                    <PostComponent\r\n                            :parent-post=\"object\"\r\n                            @commentitemSubmit=\"commentitemSubmit\"\r\n                            @commentEdit=\"commentEdit\"\r\n                            @commentDelete=\"commentDelete\"\r\n                            :commentPostContent=\"commentPostContent\"\r\n                            :PostID=\"object\"\r\n                            @loadPosts=\"loadPosts\"\r\n                            :approverPost=\"passTrueToPostComponent\"\r\n                    />\r\n                </div>\r\n\r\n                <div class=\"col-lg-12 pt-4\">\r\n                    <h6 class=\"text-left\"><i class=\"material-icons\">\r\n                        event_note\r\n                    </i> Remark:</h6>\r\n\r\n                    <div v-for=\"value in postCommentHistoryList\" class=\"preview-comment__list\">\r\n\r\n                        <label class=\"preview-comment__commenter\">\r\n                            Commenter: {{ value.CONname }} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span>Date: {{ value.AppComCreatedDate_convert }}</span>\r\n                        </label>\r\n                        <label>\r\n                            {{ value.AppComValue }}\r\n                        </label>\r\n                    </div>\r\n\r\n                    <!--<input type=\"text\" class=\"form-control\" v-model=\"inputPostComment\">-->\r\n                    <el-input\r\n                            type=\"textarea\"\r\n                            autosize\r\n                            v-model=\"inputPostComment\"\r\n                            class=\"pt-3 custom-textarea\">\r\n                    </el-input>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import DataSource from \"../data/datasource\";\r\n    import PostComponent from \"../components/postCompnent\";\r\n\r\n    export default {\r\n        name: \"PostApprove\",\r\n        components: {\r\n            PostComponent,\r\n        },\r\n        data() {\r\n            return {\r\n                postID: '',\r\n                postType: '',\r\n                postList: [],\r\n                approverPostAction: '',\r\n                postCommentHistoryList: [],\r\n                inputPostComment: '',\r\n                passTrueToPostComponent: 'YES',\r\n            };\r\n        },\r\n        async created() {\r\n            if (this.$route.params.postID === '' || this.$route.params.postID === null || this.$route.params.postID === undefined) { //this is from email link\r\n                if (this.$route.query.id != null || this.$route.query.id !== undefined) {\r\n                    await this.deString(this.$route.query.id);\r\n                } else {\r\n                    this.$router.push('/portfolio');\r\n                }\r\n            } else {\r\n                this.postID = this.$route.params.postID;\r\n\r\n                await this.getPost(this.$route.params.postID);\r\n                await this.checkApprover(this.$route.params.postID);\r\n                await this.getPostComment(this.$route.params.postID);\r\n            }\r\n        },\r\n        methods: {\r\n            async deString(inputString) {\r\n                try {\r\n                    const response = await DataSource.shared.deString(inputString);\r\n                    if (response) {\r\n                        switch (response.code) {\r\n                            case \"88\":\r\n                                this.$router.push('/');\r\n                                break;\r\n                            case \"99\":\r\n                                this.$router.push('/pendingapprover');\r\n                                break;\r\n                        }\r\n                        this.postID = response.string;\r\n\r\n                        await this.getPost(this.postID);\r\n                        await this.checkApprover(this.postID);\r\n                        await this.getPostComment(this.postID);\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async getPost(postID) {\r\n                try {\r\n                    let jsonStringPostID = JSON.stringify([postID]);\r\n\r\n                    const response = await DataSource.shared.getPostByPostIDByStatus(jsonStringPostID, 'PENDING');\r\n                    if (response) {\r\n                        if (response.code === '88') {\r\n                            window.location.replace('/');\r\n                        } else if (response.code === '99') {\r\n                            this.$notify.error({\r\n                                title: 'Error',\r\n                                message: 'Error'\r\n                            });\r\n                        } else if (response.code === '2') {\r\n                            const response = await DataSource.shared.getPostByPostID(jsonStringPostID);\r\n                            if (response) {\r\n                                if (response.code === '88') {\r\n                                    window.location.replace('/');\r\n                                } else if (response.code === '99') {\r\n                                    this.$notify.error({\r\n                                        title: 'Error',\r\n                                        message: 'Error'\r\n                                    });\r\n                                } else if (response.code === '2') {\r\n                                    window.location.replace('/pendingapprover');\r\n                                } else {\r\n                                    this.postList = response.Table;\r\n                                    this.postType = 'Posting - ' + response.Table[0].PostType;\r\n                                }\r\n                            }\r\n                        } else {\r\n                            this.postList = response.Table;\r\n                            this.postType = 'Posting - ' + response.Table[0].PostType;\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async checkApprover(postID) {\r\n                try {\r\n                    const response = await DataSource.shared.checkApproveStatusByUser(postID, \"POSTING\");\r\n                    if (response) {\r\n                        if (response.code === '1') {\r\n                            this.approverPostAction = true;\r\n                        } else {\r\n                            this.approverPostAction = false;\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async getPostComment(postID) {\r\n                try {\r\n                    const response = await DataSource.shared.getApproverComment(postID);\r\n                    if (response) {\r\n                        this.postCommentHistoryList = response.Table;\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async approvePost(actionStatus) {\r\n                try {\r\n                    this.$vs.loading();\r\n\r\n                    const response = await DataSource.shared.approvePost(this.postID, this.postType, actionStatus, this.inputPostComment);\r\n                    if (response) {\r\n                        this.$vs.loading.close();\r\n                        if (response) {\r\n                            if (response.code === '88') {\r\n                                window.location.replace('/');\r\n                            } else if (response.code === '99') {\r\n                                this.$notify.error({\r\n                                    title: 'Error',\r\n                                    message: 'Error'\r\n                                });\r\n                            } else {\r\n                                this.$notify({\r\n                                    title: 'Success',\r\n                                    message: 'Done!',\r\n                                    type: 'success'\r\n                                });\r\n                                this.$router.go(-1);\r\n                                // window.location.replace('/');\r\n                            }\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n        },\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}