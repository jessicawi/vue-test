{"remainingRequest":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\StudentPaymentPlan.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\StudentPaymentPlan.vue","mtime":1556536416378},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1553612671158},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1553612666995}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport DataSource from \"../data/datasource\";\n\nexport default {\n    name: \"StudentPaymentPlan\",\n\n    data() {\n        return {\n            studentPaymentListInt: [],\n            studentPaymentList: [{\n                prop: \"SPPD_PayerName\",\n                label: \"Name\"\n            }, {\n                prop: \"SPPD_Status\",\n                label: \"Invoice Status\"\n            }, {\n                prop: \"SPPD_PaymentDates\",\n                label: \"Payment Date\"\n            }, {\n                prop: \"SPPD_PaymentAmount\",\n                label: \"Amount\"\n            }, {\n                prop: \"totalIncludeGst\",\n                label: \"Incl. GST\"\n            }, {\n                prop: \"RecTotal\",\n                label: \"Paid Amount\"\n            // }, {\n            //     prop: \"InvoiceDate\",\n            //     label: \"Inv Date\"\n            // }, {\n            //     prop: \"PaymentItemType\",\n            //     label: \"SPPD_PaymentItemType\"\n            // }, {\n            //     prop: \"Status\",\n            //     label: \"SPPD_Status\"\n            }],\n\n            itemTransDetailsInt: [],\n            itemTransDetailsList: [{\n                prop: \"DocumentDate\",\n                label: \"Date\"\n            }, {\n                prop: \"DocumentType\",\n                label: \"Transaction Type\"\n            }, {\n                prop: \"DocumentNo\",\n                label: \"Document Number\"\n            }, {\n                prop: \"DocumentStatus\",\n                label: \"Document Status\"\n            }, {\n                prop: \"TotalIncGst\",\n                label: \"Total (Incl. GST)\"\n            }, {\n                prop: \"DocumentCreatedBy\",\n                label: \"Created By\"\n            }],\n\n            inputPaymentDueDate: '',\n            inputReceiptDate: '',\n            paymentModeList:[],\n            multipleSelection:[],\n        };\n    },\n\n    async created() {\n        this.getStudentPaymentList();\n        this.BindPaymentModeDropdown();\n    },\n\n    async mounted() {\n\n    },\n\n    methods: {\n        async changeSelection(val) {\n            this.multipleSelection = val;\n        },\n\n        Test()\n        {\n            console.log(this.multipleSelection);\n        },\n\n        async getStudentPaymentList() {\n            this.$vs.loading();\n            try {\n                const response = await DataSource.shared.getStudentPaymentList('SCR2019190104');\n                if (response) {\n                    switch (response.code) {\n                        case \"2\":\n                            this.$notify.error({\n                                title: 'No Record Found',\n                                message: 'No Student Payment Record'\n                            });\n                            break;\n                        case \"88\":\n                            this.$router.push('/');\n                            break;\n                        case \"99\":\n                            this.$notify.error({\n                                title: 'Error',\n                                message: 'Error'\n                            });\n                            break;\n\n                        default:\n                            this.studentPaymentListInt = response.Table;\n                    }\n                }\n            } catch (e) {\n                this.results = e;\n            }\n            this.$vs.loading.close();\n        },\n\n        retrieveItemTransactionDetails(row) {\n            return [{\n                name: 'View Trans',\n                handler: _ => {\n                    this.viewSPDID =  row.PK_SPD_ID;\n                    this.viewSPPDPayerName =  row.SPPD_PayerName;\n                    this.getItemTransDetailsList();\n                }\n            }];\n        },\n\n        async getItemTransDetailsList(){\n            this.$vs.loading();\n            try {\n                const response = await DataSource.shared.getItemTransDetailsList(this.viewSPDID);\n                if (response) {\n                    switch (response.code) {\n                        case \"2\":\n                            this.$notify.error({\n                                title: 'No Record Found',\n                                message: 'No Invoice Generated'\n                            });\n                            break;\n                        case \"88\":\n                            this.$router.push('/');\n                            break;\n                        case \"99\":\n                            this.$notify.error({\n                                title: 'Error',\n                                message: 'Error'\n                            });\n                            break;\n\n                        default:\n                            this.itemTransDetailsInt = response.Table;\n                            this.$refs.viewTransactionShowModal.show();\n                    }\n                }\n            } catch (e) {\n                this.results = e;\n            }\n            this.$vs.loading.close();\n        },\n\n        // todo:validation preview invoice\n        async ValidationPreviewInvoice() {\n            try {\n                this.$v.$touch();\n\n                if (this.$v.$error) {\n                    alert('Please select at least 1 item');\n                    return;\n                }\n                // todo: create function for preview invoice\n                // this.PreviewInvoice();\n            } catch (e) {\n                this.results = e;\n            }\n        },\n        // todo: validation generate invoice\n        async ValidationGenerateInvoice() {\n            try {\n                this.$v.$touch();\n\n                if (this.$v.$error) {\n                    alert('Please select at least 1 item');\n                    return;\n                }\n                // todo: create function for generate invoice\n                // this.GenerateInvoice();\n            } catch (e) {\n                this.results = e;\n            }\n        },\n\n        async BindPaymentModeDropdown()\n        {\n            try {\n                let jsonString = '\"Pay Type\":\"Pay Type\"';\n                jsonString = \"{\" + jsonString + \"}\";\n\n                const response = await DataSource.shared.getStudentDropDownList(jsonString);\n                if (response) {\n                    if (response.code === '88') {\n                        window.location.replace('/');\n                    }\n                    else {\n\n                        this.paymentModeListResponse = response.Table;\n                        this.paymentModeListResponse.forEach(m => {\n                            if (m.OGPname.trim() === 'Pay Type') {\n                                this.paymentModeList.push(m);\n                            }\n                        });\n                    }\n                }\n            } catch (e) {\n                this.results = e;\n            }\n        },\n    },\n}\n",{"version":3,"sources":["StudentPaymentPlan.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"StudentPaymentPlan.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div id=\"studentpaymentplan\">\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class= \"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                    <h5 class=\"text-left\">Student Payment List</h5>\r\n                    <div v-if=\"studentPaymentListInt.length>0\" class=\"datatable_group\">\r\n                        <data-tables :data=\"studentPaymentListInt\" @selection-change=\"changeSelection\">\r\n                            <el-table-column v-for=\"studentPaymentItem in studentPaymentList\" :prop=\"studentPaymentItem.prop\"\r\n                                             :label=\"studentPaymentItem.label\" :key=\"studentPaymentItem.prop\"\r\n                                             sortable=\"custom\">\r\n                            </el-table-column>\r\n                            <el-table-column label=\"Action\" min-width=\"100px\">\r\n                                <template slot-scope=\"scope\">\r\n                                    <el-button v-for=\"itemDetails in retrieveItemTransactionDetails(scope.row)\"\r\n                                               :key=\"itemDetails.name\" type=\"primary\"\r\n                                               @click=\"itemDetails.handler\">\r\n                                        {{itemDetails.name}}\r\n                                    </el-button>\r\n                                </template>\r\n                            </el-table-column>\r\n                            <el-table-column type=\"selection\" width=\"55\" :reserve-selection=\"true\">\r\n                            </el-table-column>\r\n                        </data-tables>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class= \"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                    <h5 class=\"text-left\">Batch Payment</h5>\r\n                    <div class=\"row form-group__wrapper\">\r\n                        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                            <h5 class=\"text-left\">INVOICING</h5>\r\n                        </div>\r\n                        <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                            <label>Payment Due Date</label>\r\n                            <div class=\"date\">\r\n                                <el-date-picker v-model=\"inputPaymentDueDate\" format=\"dd/MM/yyyy\"\r\n                                                value-format=\"dd/MM/yyyy\" type=\"date\"\r\n                                                placeholder=\"Pick a day\"></el-date-picker>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                            <label>Letterhead (Hong Kong only):</label>\r\n                            <label>\r\n                                <input type=\"checkbox\" class=\"form-control\" ref=\"cbPrintMonthlyBreakdown\">\r\n                                Print monthly breakdown\r\n                                <span>\r\n                                    <span>\r\n                                        <svg class=\"checkmark\" viewBox=\"0 0 24 24\"><path class=\"checkmark-path\"\r\n                                                                                         fill=\"none\" stroke=\"white\"\r\n                                                                                         d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"></path></svg>\r\n                                    </span>\r\n                                </span>\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"buttonArea\">\r\n                            <div class=\"text-center mg-b-pro-edt custom-pro-edt-ds\">\r\n                                <button v-on:click=\"ValidationPreviewInvoice\" type=\"button\"\r\n                                        class=\"btn btn-primary waves-effect waves-light m-r-10\">Preview Invoice\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <!--<div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">-->\r\n                            <!--<div >-->\r\n                        <div class=\"buttonArea\">\r\n                            <div class=\"text-center mg-b-pro-edt custom-pro-edt-ds\">\r\n                                <button v-on:click=\"ValidationGenerateInvoice\" type=\"button\"\r\n                                        class=\"btn btn-primary waves-effect waves-light m-r-10\">Generate Invoice\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                       <div class=\"row form-group__wrapper\"></div>\r\n\r\n                        <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12 \">\r\n                            <h5 class=\"text-left\">RECEIPTS</h5>\r\n                        </div>\r\n                        <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                            <label>Payment Mode</label>\r\n                            <select v-model=\"ddlPaymentMode\"\r\n                                    class=\"form-control pro-edt-select form-control-primary\" >\r\n                                <option v-for=\"item in paymentModeList\" v-bind:value=\"item.OPTvalue.trim()\">{{\r\n                                    item.OPTvalue.trim() }}\r\n                                </option>\r\n                            </select>\r\n                            <!--<div class=\"requiredFieldsMsg\" v-if=\"$v.ddlPaymentMode.$error\">Payment Mode-->\r\n                                <!--Require-->\r\n                            <!--</div>-->\r\n                        </div>\r\n                        <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                            <label>Cheque/DD No & Bank Name</label>\r\n                            <input type=\"text\" class=\"form-control\" v-model=\"inputChequeNoBankName\">\r\n                        </div>\r\n                        <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                            <label>Receipt Date</label>\r\n                            <div class=\"date\">\r\n                                <el-date-picker v-model=\"inputReceiptDate\" format=\"dd/MM/yyyy\"\r\n                                                value-format=\"dd/MM/yyyy\" type=\"date\"\r\n                                                placeholder=\"Pick a day\"></el-date-picker>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                            <label>Remarks</label>\r\n                            <input type=\"text\" class=\"form-control\" v-model=\"inputRemarks\">\r\n                        </div>\r\n                        <div class=\"col-lg-3 col-md-3 col-sm-3 col-xs-12\">\r\n                            <label>\r\n                                <input type=\"checkbox\" class=\"form-control\" ref=\"cbUnderpayment\">\r\n                                Underpayment\r\n                                <span>\r\n                                    <span>\r\n                                        <svg class=\"checkmark\" viewBox=\"0 0 24 24\"><path class=\"checkmark-path\"\r\n                                                                                         fill=\"none\" stroke=\"white\"\r\n                                                                                         d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"></path></svg>\r\n                                    </span>\r\n                                </span>\r\n                            </label>\r\n                            <label>\r\n                                <input type=\"checkbox\" class=\"form-control\" ref=\"cbRemainder\">\r\n                                Remainder\r\n                                <span>\r\n                                    <span>\r\n                                        <svg class=\"checkmark\" viewBox=\"0 0 24 24\"><path class=\"checkmark-path\"\r\n                                                                                         fill=\"none\" stroke=\"white\"\r\n                                                                                         d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"></path></svg>\r\n                                    </span>\r\n                                </span>\r\n                            </label>\r\n                        </div>\r\n                        <div class=\"col-lg-3 col-md-3 col-sm-3 col-xs-12\">\r\n                            <label>\r\n                                <input type=\"checkbox\" class=\"form-control\" ref=\"cbSubsequent Underpayment\">\r\n                                Subsequent Underpayment\r\n                                <span>\r\n                                    <span>\r\n                                        <svg class=\"checkmark\" viewBox=\"0 0 24 24\"><path class=\"checkmark-path\"\r\n                                                                                         fill=\"none\" stroke=\"white\"\r\n                                                                                         d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"></path></svg>\r\n                                    </span>\r\n                                </span>\r\n                            </label>\r\n                            <label>\r\n                                <input type=\"checkbox\" class=\"form-control\" ref=\"cbOverpayment\">\r\n                                Overpayment\r\n                                <span>\r\n                                    <span>\r\n                                        <svg class=\"checkmark\" viewBox=\"0 0 24 24\"><path class=\"checkmark-path\"\r\n                                                                                         fill=\"none\" stroke=\"white\"\r\n                                                                                         d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"></path></svg>\r\n                                    </span>\r\n                                </span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <b-modal id=\"viewTransactionModal\" size=\"lg\" title=\"All Transactions for Student Payment Item\" ok-only ok-variant=\"secondary\" ok-title=\"Cancel\" ref=\"viewTransactionShowModal\">\r\n            <div class=\"row\">\r\n                <div class= \"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                    <div v-if=\"itemTransDetailsInt.length>0\">\r\n                        <data-tables :data=\"itemTransDetailsInt\"  >\r\n                            <el-table-column v-for=\"itemTransDetailsListItem in itemTransDetailsList\" :prop=\"itemTransDetailsListItem.prop\"\r\n                                             :label=\"itemTransDetailsListItem.label\" :key=\"itemTransDetailsListItem.prop\"\r\n                                             sortable=\"custom\">\r\n                            </el-table-column>\r\n                        </data-tables>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </b-modal>\r\n\r\n        <button v-on:click=\"Test()\">Test</button>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import DataSource from \"../data/datasource\";\r\n\r\n    export default {\r\n        name: \"StudentPaymentPlan\",\r\n\r\n        data() {\r\n            return {\r\n                studentPaymentListInt: [],\r\n                studentPaymentList: [{\r\n                    prop: \"SPPD_PayerName\",\r\n                    label: \"Name\"\r\n                }, {\r\n                    prop: \"SPPD_Status\",\r\n                    label: \"Invoice Status\"\r\n                }, {\r\n                    prop: \"SPPD_PaymentDates\",\r\n                    label: \"Payment Date\"\r\n                }, {\r\n                    prop: \"SPPD_PaymentAmount\",\r\n                    label: \"Amount\"\r\n                }, {\r\n                    prop: \"totalIncludeGst\",\r\n                    label: \"Incl. GST\"\r\n                }, {\r\n                    prop: \"RecTotal\",\r\n                    label: \"Paid Amount\"\r\n                // }, {\r\n                //     prop: \"InvoiceDate\",\r\n                //     label: \"Inv Date\"\r\n                // }, {\r\n                //     prop: \"PaymentItemType\",\r\n                //     label: \"SPPD_PaymentItemType\"\r\n                // }, {\r\n                //     prop: \"Status\",\r\n                //     label: \"SPPD_Status\"\r\n                }],\r\n\r\n                itemTransDetailsInt: [],\r\n                itemTransDetailsList: [{\r\n                    prop: \"DocumentDate\",\r\n                    label: \"Date\"\r\n                }, {\r\n                    prop: \"DocumentType\",\r\n                    label: \"Transaction Type\"\r\n                }, {\r\n                    prop: \"DocumentNo\",\r\n                    label: \"Document Number\"\r\n                }, {\r\n                    prop: \"DocumentStatus\",\r\n                    label: \"Document Status\"\r\n                }, {\r\n                    prop: \"TotalIncGst\",\r\n                    label: \"Total (Incl. GST)\"\r\n                }, {\r\n                    prop: \"DocumentCreatedBy\",\r\n                    label: \"Created By\"\r\n                }],\r\n\r\n                inputPaymentDueDate: '',\r\n                inputReceiptDate: '',\r\n                paymentModeList:[],\r\n                multipleSelection:[],\r\n            };\r\n        },\r\n\r\n        async created() {\r\n            this.getStudentPaymentList();\r\n            this.BindPaymentModeDropdown();\r\n        },\r\n\r\n        async mounted() {\r\n\r\n        },\r\n\r\n        methods: {\r\n            async changeSelection(val) {\r\n                this.multipleSelection = val;\r\n            },\r\n\r\n            Test()\r\n            {\r\n                console.log(this.multipleSelection);\r\n            },\r\n\r\n            async getStudentPaymentList() {\r\n                this.$vs.loading();\r\n                try {\r\n                    const response = await DataSource.shared.getStudentPaymentList('SCR2019190104');\r\n                    if (response) {\r\n                        switch (response.code) {\r\n                            case \"2\":\r\n                                this.$notify.error({\r\n                                    title: 'No Record Found',\r\n                                    message: 'No Student Payment Record'\r\n                                });\r\n                                break;\r\n                            case \"88\":\r\n                                this.$router.push('/');\r\n                                break;\r\n                            case \"99\":\r\n                                this.$notify.error({\r\n                                    title: 'Error',\r\n                                    message: 'Error'\r\n                                });\r\n                                break;\r\n\r\n                            default:\r\n                                this.studentPaymentListInt = response.Table;\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n                this.$vs.loading.close();\r\n            },\r\n\r\n            retrieveItemTransactionDetails(row) {\r\n                return [{\r\n                    name: 'View Trans',\r\n                    handler: _ => {\r\n                        this.viewSPDID =  row.PK_SPD_ID;\r\n                        this.viewSPPDPayerName =  row.SPPD_PayerName;\r\n                        this.getItemTransDetailsList();\r\n                    }\r\n                }];\r\n            },\r\n\r\n            async getItemTransDetailsList(){\r\n                this.$vs.loading();\r\n                try {\r\n                    const response = await DataSource.shared.getItemTransDetailsList(this.viewSPDID);\r\n                    if (response) {\r\n                        switch (response.code) {\r\n                            case \"2\":\r\n                                this.$notify.error({\r\n                                    title: 'No Record Found',\r\n                                    message: 'No Invoice Generated'\r\n                                });\r\n                                break;\r\n                            case \"88\":\r\n                                this.$router.push('/');\r\n                                break;\r\n                            case \"99\":\r\n                                this.$notify.error({\r\n                                    title: 'Error',\r\n                                    message: 'Error'\r\n                                });\r\n                                break;\r\n\r\n                            default:\r\n                                this.itemTransDetailsInt = response.Table;\r\n                                this.$refs.viewTransactionShowModal.show();\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n                this.$vs.loading.close();\r\n            },\r\n\r\n            // todo:validation preview invoice\r\n            async ValidationPreviewInvoice() {\r\n                try {\r\n                    this.$v.$touch();\r\n\r\n                    if (this.$v.$error) {\r\n                        alert('Please select at least 1 item');\r\n                        return;\r\n                    }\r\n                    // todo: create function for preview invoice\r\n                    // this.PreviewInvoice();\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            // todo: validation generate invoice\r\n            async ValidationGenerateInvoice() {\r\n                try {\r\n                    this.$v.$touch();\r\n\r\n                    if (this.$v.$error) {\r\n                        alert('Please select at least 1 item');\r\n                        return;\r\n                    }\r\n                    // todo: create function for generate invoice\r\n                    // this.GenerateInvoice();\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n\r\n            async BindPaymentModeDropdown()\r\n            {\r\n                try {\r\n                    let jsonString = '\"Pay Type\":\"Pay Type\"';\r\n                    jsonString = \"{\" + jsonString + \"}\";\r\n\r\n                    const response = await DataSource.shared.getStudentDropDownList(jsonString);\r\n                    if (response) {\r\n                        if (response.code === '88') {\r\n                            window.location.replace('/');\r\n                        }\r\n                        else {\r\n\r\n                            this.paymentModeListResponse = response.Table;\r\n                            this.paymentModeListResponse.forEach(m => {\r\n                                if (m.OGPname.trim() === 'Pay Type') {\r\n                                    this.paymentModeList.push(m);\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n        },\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    .el-date-editor {\r\n        width: 100% !important;\r\n    }\r\n\r\n    .buttonArea {\r\n        margin: 20px 0 0 0;\r\n    }\r\n\r\n    .btn-primary {\r\n        display: inline;\r\n    }\r\n\r\n    .buttonArea .btn-primary {\r\n        margin: 0 0 0 20px;\r\n    }\r\n</style>"]}]}