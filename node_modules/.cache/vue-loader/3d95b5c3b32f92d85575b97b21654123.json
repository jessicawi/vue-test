{"remainingRequest":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\components\\SideMenu.vue?vue&type=style&index=0&id=79f86886&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\components\\SideMenu.vue","mtime":1557847053332},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\css-loader\\index.js","mtime":1552619058288},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1553612666995},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\postcss-loader\\src\\index.js","mtime":1552619058487},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1553612666995}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.fixed-header {\n    position: fixed;\n    top: 0;\n    width: 100%;\n    z-index: 99;\n}\n\n",{"version":3,"sources":["SideMenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4MA;AACA;AACA;AACA;AACA;AACA","file":"SideMenu.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n    <div class=\"menu-box-wrap\" >\r\n        <!--<div class=\"menu-box-wrap\" :class=\"{'fixed-header':scrollPosition>120}\">-->\r\n        <div class=\"menu-box\">\r\n            <!--<vs-sidebar static-position default-index=\"1\" color=\"primary\" class=\"sidebarx\" spacer v-model=\"active\"-->\r\n            <!--icon-pack=\"fa\">-->\r\n\r\n            <!--<div class=\"header-sidebar\" slot=\"header\">-->\r\n            <!--<a href=\"/\"><img src=\"../assets/kagami.jpg\"/></a>-->\r\n            <!--</div>-->\r\n            <b-nav pills v-for=\"item in primaryMenuFiltered\" :key=item.MENid class=\"menu-wrap\">\r\n                <!-- if menu has submenu, click will open submenu -->\r\n                <b-nav-item-dropdown\r\n                        id=\"my-nav-dropdown\"\r\n                        :text=\"item.MENname\"\r\n                        toggle-class=\"nav-link-custom\"\r\n                        v-if=\"item.subMenus\"\r\n                        class=\"menu-wrap__item\"\r\n\r\n                >\r\n                    <b-dropdown-item v-for=\"submenu in item.subMenus\" :href=\"submenu.MENnewurl\">{{submenu.MENname}}</b-dropdown-item>\r\n                </b-nav-item-dropdown>\r\n                <!-- if menu has no submenu, click will route to url (MENnewurl) -->\r\n                <b-nav-item v-else class=\"parent-menu\"  v-if=\"item.MENnewurl\" :class=\"{'null-item':item.MENnewurl===null}\">\r\n                    <!-- if MENnewurl has value -->\r\n                    <router-link v-if=\"item.MENnewurl\" :to=\"item.MENnewurl\">\r\n                        <i :class=\"item.MENicon\"></i> <span>{{item.MENname}}</span>\r\n                    </router-link>\r\n                    <!-- if MENnewurl is null -->\r\n                    <div v-else class=\"url-null\">\r\n                        <i :class=\"item.MENicon\"></i> <span>{{item.MENname}}</span>\r\n                    </div>\r\n                </b-nav-item>\r\n            </b-nav>\r\n            <!--<div class=\"menu-wrap\" v-for=\"item in primaryMenuFiltered\" :key=item.MENid>-->\r\n                <!--&lt;!&ndash; if menu has submenu, click will open submenu &ndash;&gt;-->\r\n\r\n\r\n                <!--<div v-if=\"item.subMenus\" class=\"menu-wrap__item\">-->\r\n                    <!--<div class=\"parent-menu has-sub-menu\"-->\r\n                         <!--@click=\"handleParentMenuClick(item.MENid)\">-->\r\n                        <!--<i class=\"big-icon\" :class=\"item.MENicon\"></i><span>{{item.MENname}}</span> <i-->\r\n                            <!--class=\"material-icons\">keyboard_arrow_down</i>-->\r\n                    <!--</div>-->\r\n\r\n                    <!--<div class=\"sub-menu\" v-if=\"item.subMenus\" @mouseleave=\"didClickAway\"-->\r\n                         <!--:class=\"{'menu-wrap-active':currentParentMenuId===item.MENid}\">-->\r\n                        <!--<div v-for=\"submenu in item.subMenus\">-->\r\n                            <!--<a :href=\"submenu.MENnewurl\">-->\r\n                                <!--<i :class=\"submenu.MENicon\"></i> {{submenu.MENname}}-->\r\n                            <!--</a>-->\r\n                        <!--</div>-->\r\n                    <!--</div>-->\r\n                <!--</div>-->\r\n                <!--&lt;!&ndash; if menu has no submenu, click will route to url (MENnewurl) &ndash;&gt;-->\r\n                <!--<div v-else :class=\"{'null-item':item.MENnewurl===null}\">-->\r\n                    <!--<div class=\"parent-menu\" v-if=\"item.MENnewurl\">-->\r\n                        <!--&lt;!&ndash; if MENnewurl has value &ndash;&gt;-->\r\n                        <!--<router-link v-if=\"item.MENnewurl\" :to=\"item.MENnewurl\">-->\r\n                            <!--<i :class=\"item.MENicon\"></i> <span>{{item.MENname}}</span>-->\r\n                        <!--</router-link>-->\r\n                        <!--&lt;!&ndash; if MENnewurl is null &ndash;&gt;-->\r\n                        <!--<div v-else class=\"url-null\">-->\r\n                            <!--<i :class=\"item.MENicon\"></i> <span>{{item.MENname}}</span>-->\r\n                        <!--</div>-->\r\n                    <!--</div>-->\r\n                <!--</div>-->\r\n\r\n            <!--</div>-->\r\n            <!--</vs-sidebar>-->\r\n        </div>\r\n\r\n        <div class=\"input-group search\" v-if=\"isMobile()\">\r\n            <input type=\"text\" class=\"form-control\" placeholder=\"Search for...\">\r\n            <span class=\"input-group-btn\">\r\n                    <button class=\"btn btn-default\" type=\"button\"><i class=\"fa fa-search\"\r\n                                                                     aria-hidden=\"true\"></i></button>\r\n                </span>\r\n        </div><!-- /input-group -->\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import DataSource from \"../data/datasource\";\r\n\r\n    export default {\r\n        name: 'sideMenu',\r\n        data() {\r\n            return {\r\n                pathName: null,\r\n                primaryMenu: [],\r\n                nonPrimaryTable: [],\r\n                primaryMenuFiltered: [],\r\n                active: false,\r\n                currentMenu: null,\r\n                currentParentMenuId: null,\r\n                currentParentMenuId2: null,\r\n                isNullItem: \"\",\r\n                showMobileMenu: false,\r\n                mouseover: false,\r\n                scrollPosition: null,\r\n            };\r\n        },\r\n        destroy() {\r\n            window.removeEventListener('scroll', this.updateScroll)\r\n        },\r\n        async mounted() {\r\n            window.addEventListener('scroll', this.updateScroll);\r\n            const response = await DataSource.shared.getUserMenu();\r\n            if (response) {\r\n                this.primaryMenu = response.PrimaryTable && response.PrimaryTable.Table;\r\n                if (!this.primaryMenu) {\r\n                    return;\r\n                }\r\n                this.primaryMenu.forEach(m => {\r\n                    this.primaryMenuFiltered.push(m);\r\n\r\n                    // switch (m.MENname) {\r\n                    //     case \"Administration\":\r\n                    //     case \"Dashboards\":\r\n                    //     case \"Pre Admission\":\r\n                    //         this.primaryMenuFiltered.push(m);\r\n                    // }\r\n                });\r\n\r\n                this.nonPrimaryTable = response.NonPrimaryTable.Table;\r\n                this.nonPrimaryTable.map(d => {\r\n\r\n                    // set current active menu based on URL pathname\r\n                    // if (d.MENnewurl === window.location.pathname) {\r\n                    //     this.currentMenu = d.MENid;\r\n                    //     this.currentParentMenuId = d.MGPMENparentid;\r\n                    //     this.currentParentMenuId2 = d.MGPMENparentid_2;\r\n                    // }\r\n\r\n                    if (d.MENnewurl != null && d.MENnewurl != \"\") {\r\n                        //return null;\r\n\r\n                        if (d.MGPMENparentid_2 === null || d.MGPMENparentid_2 === \"\") {\r\n                            this.primaryMenuFiltered.find(parentMenu => {\r\n                                    if (parentMenu.MENid === d.MGPMENparentid) {\r\n                                        if (Array.isArray(parentMenu.subMenus)) {\r\n                                            parentMenu.subMenus.push(d);\r\n                                        } else {\r\n                                            parentMenu.subMenus = [d];\r\n                                        }\r\n\r\n                                    }\r\n                                }\r\n                            );\r\n                        } else {\r\n                            this.primaryMenuFiltered.find(parentMenu => {\r\n                                    if (parentMenu.MENid === d.MGPMENparentid_2) {\r\n                                        if (Array.isArray(parentMenu.subMenus)) {\r\n                                            parentMenu.subMenus.push(d);\r\n                                        } else {\r\n                                            parentMenu.subMenus = [d];\r\n                                        }\r\n                                    }\r\n                                }\r\n                            );\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n        },\r\n        methods: {\r\n            updateScroll() {\r\n                this.scrollPosition = window.scrollY\r\n            },\r\n            didClickAway: function (e) {\r\n                this.event = function (event) {\r\n                    if (event.target !== e.target) {\r\n                        this.currentParentMenuId = null;\r\n                        document.body.removeEventListener(\"click\", this.event);\r\n                    } else {\r\n                        this.currentParentMenuId = menuId\r\n                    }\r\n                }.bind(this);\r\n                document.body.addEventListener(\"click\", this.event);\r\n            },\r\n            handleParentMenuClick(menuId) {\r\n                // if clicked menu already open, then make it close\r\n                if (this.currentParentMenuId === menuId) {\r\n                    this.currentParentMenuId = null;\r\n                }\r\n                // open clicked menu\r\n                else {\r\n                    this.currentParentMenuId = menuId;\r\n                }\r\n            },\r\n            isMobile() {\r\n                if (screen.width <= 760) {\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n    .fixed-header {\r\n        position: fixed;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index: 99;\r\n    }\r\n\r\n</style>\r\n\r\n<style>\r\n\r\n\r\n</style>"]}]}