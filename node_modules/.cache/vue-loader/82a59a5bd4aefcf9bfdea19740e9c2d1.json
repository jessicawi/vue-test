{"remainingRequest":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\AttendanceList.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\AttendanceList.vue","mtime":1559116268672},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1553612671158},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1553612666995}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport DataSource from \"../data/datasource\";\n\nexport default {\n    name: \"AttendanceList\",\n    data() {\n        return {\n            checkListSelect: ['Present','Absent', 'Late', 'Sick', 'On Holiday', 'Sent Home'],\n            ddlClassList: [],\n            ddlClass: '',\n            studentList: [],\n            studentClass: [],\n            studentCheck: [],\n            selectedStudent: [],\n            selectallStudent: false,\n            bundleAttendance: false,\n            hideStudentList: false,\n        };\n    },\n    async created() {\n        await this.bindClasses();\n    },\n    async mounted() {\n    },\n    methods: {\n        showBundleAttendance() {\n                const isCheck = this.studentList.find(m => m.checked === true);\n                if (isCheck) {\n                    this.bundleAttendance = true;\n                } else {\n                    this.bundleAttendance = false;\n                }\n        },\n        checkAllStudent() {\n            if (this.selectallStudent === false) {\n                this.bundleAttendance = true;\n                this.studentList.forEach(m => {\n                    m.checked = true;\n                });\n            } else {\n                this.bundleAttendance = false;\n\n                this.studentList.forEach(m => {\n                    m.checked = false;\n                });\n            }\n        },\n        selectedAttendance() {\n            this.studentList.forEach(m => {\n\n                if (m.checked === true) {\n                    m.markingStatus = this.studentCheck;\n                }\n            });\n        },\n        async bindClasses() {\n            try {\n                const response = await DataSource.shared.getAttendanceClass();\n                if (response) {\n                    this.class = response.Table;\n                    this.class.forEach(m => {\n                        this.ddlClassList.push(m);\n                    });\n                }\n                // const response = await DataSource.shared.getAttendanceClass();\n                // if (response) {\n                //     this.class = response.Table;\n                //     let classValue;\n                //     this.class.forEach(m => {\n                //         // item.PK_Semester_ID.trim() + ',' + item.SC_FK_CourseID.trim() + ',' + item.PK_Class_ID.trim()\">{{ item.CLS_ClassName.trim()\n                //         classValue = m.PK_Semester_ID.trim() + ',' + m.SC_FK_CourseID.trim() + ',' + m.PK_Class_ID.trim();\n                //\n                //         DataSource.shared.LoadAttendanceList(classValue).then((AttendResponse) => {\n                //             if (AttendResponse.code === \"2\") {\n                //                 return;\n                //\n                //             } else {\n                //                 // this.studentclass = AttendResponse.Table;\n                //                 this.ddlClassList.push(m);\n                //             }\n                //         });\n                //     });\n                //\n                //\n                // }\n            } catch (e) {\n                this.results = e;\n            }\n        },\n        async Load() {\n\n            try {\n                if (this.ddlClass === '') {\n                    this.$notify.error({\n                        title: 'Error',\n                        message: 'Please select class'\n                    });\n                } else {\n                    this.$vs.loading();\n                    const response = await DataSource.shared.LoadAttendanceList(this.ddlClass);\n                    if (response) {\n\n                        if (response.code === '2') {\n                            this.studentList = [];\n                            this.hideStudentList = true;\n                            // this.$notify.error({\n                            //     title: 'Error',\n                            //     message: 'No student found'\n                            // });\n                        } else if (response.code === '99') {\n                            this.$notify.error({\n                                title: 'Error',\n                                message: 'Error! Please try again later'\n                            });\n                        } else {\n\n                            this.studentList.forEach(m => {\n                                m.checked = false;\n                            });\n                            // response.Table.forEach(x => {\n                            //     if (x.AttDtlMark === \"No\") {\n                            //         x.AttDtlMark = null;\n                            //     }\n                            // });\n                            this.studentList = response.Table;\n\n                            this.studentListResponse = response.Table;\n                            // this.studentListResponse.forEach(m => {\n                            //     this.lblAttID = m.AttDtlAttID;\n                            // });\n                        }\n                    }\n                    this.$vs.loading.close();\n                }\n            } catch (e) {\n                this.results = e;\n            }\n        },\n        async Save() {\n            try {\n                // let jsonString = '';\n                //\n                // this.$refs.studentList_Update.forEach((m, index) => {\n                //     if (jsonString === '') {\n                //         jsonString = '\"' + this.$refs.studentCheckList[index].value + '\":\"' + this.$refs.studentCheckList[index].checked + ',' + this.$refs.studentRemark[index].value + '\"';\n                //     }\n                //     else {\n                //         jsonString = jsonString + ',\"' + this.$refs.studentCheckList[index].value + '\":\"' + this.$refs.studentCheckList[index].checked + ',' + this.$refs.studentRemark[index].value + '\"';\n                //     }\n                // });\n                //\n                // jsonString = '{ ' + jsonString + ' }';\n\n                // const response = await DataSource.shared.updateAttendanceList(this.lblAttID, jsonString);\n                // if (response) {\n                //     if (response.code == '1') {\n                //         alert('Successfully saved');\n                //         window.location.replace('/attendancelist');\n                //     } else {\n                //         alert('Error! Please try again later');\n                //         window.location.replace('/attendancelist');\n                //     }\n                // }\n                let attendanceList = [];\n\n                this.$refs.studentList_Update.forEach((m, index) => {\n                    let attendanceDetials = {\n                        status: this.$refs.studentCheckList[index].value,\n                        remark: this.$refs.studentRemark[index].value\n                    };\n\n                    let attendanceListTemp = {\n                        studentIndexNo: this.$refs.studentIndexNo[index].value,\n                        attDetails: attendanceDetials\n                    };\n\n                    attendanceList.push(attendanceListTemp);\n                });\n\n                const response = await DataSource.shared.updateAttendanceList(JSON.stringify(attendanceList));\n                if (response) {\n                    if (response.code == '1') {\n                        this.$notify({\n                            title: 'Success',\n                            message: 'Successfully saved',\n                            type: 'success'\n                        });\n                        this.Load();\n\n                        this.selectallStudent = false;\n                        this.studentCheck = \"\";\n                        // window.location.replace('/attendancelist');\n                    } else {\n                        this.$notify.error({\n                            title: 'Error',\n                            message: 'Error! Please try again later'\n                        });\n                        window.location.replace('/attendancelist');\n                    }\n                }\n            } catch (e) {\n                this.results = e;\n            }\n        },\n        async checkAll() {\n            try {\n                if (this.$refs.checkAllBox.checked == true) {\n                    this.$refs.studentCheckList.forEach(m => {\n                        m.checked = true;\n                    });\n                } else {\n                    this.$refs.studentCheckList.forEach(m => {\n                        m.checked = false;\n                    });\n                }\n            } catch (e) {\n                this.results = e;\n            }\n        },\n    },\n};\n",{"version":3,"sources":["AttendanceList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"AttendanceList.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div id=\"attendance-list\" class=\" \">\r\n        <div class=\"container admin-wrap\">\r\n            <div class=\"row header mb-5\">\r\n                <div class=\"col-lg-5 \">\r\n                    <h3 class=\"text-left mb-3\">ATTENDANCE</h3>\r\n                </div>\r\n                <div class=\"col-lg-7\">\r\n                    <div class=\"row searchingArea attendance-search\">\r\n                        <!--<label class=\"lblClass\">Class</label>-->\r\n                        <el-select v-model=\"ddlClass\" placeholder=\"Select Class\" class=\"pro-edt-select\"\r\n                                   @change=\"Load()\">\r\n                            <el-option\r\n                                    v-for=\"item in ddlClassList\"\r\n                                    :key=\"item.PK_Class_ID\"\r\n                                    :label=\"item.CLS_ClassName.trim()\"\r\n                                    :value=\"item.PK_Semester_ID.trim() + ',' + item.SC_FK_CourseID.trim() + ',' + item.PK_Class_ID.trim()\">\r\n                            </el-option>\r\n                        </el-select>\r\n                        <!--<select v-model=\"ddlClass\" class=\"form-control pro-edt-select form-control-primary ddlClass\"-->\r\n                        <!--@change=\"Load()\" placeholder=\"Class\">-->\r\n                        <!--<option v-for=\"item in ddlClassList\"-->\r\n                        <!--v-bind:value=\"item.PK_Semester_ID.trim() + ',' + item.SC_FK_CourseID.trim() + ',' + item.PK_Class_ID.trim()\">-->\r\n                        <!--{{ item.CLS_ClassName.trim() }}-->\r\n                        <!--</option>-->\r\n                        <!--</select>-->\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"pb-5\">\r\n\r\n                <div class=\"empty-list_image\" v-if=\"studentList.length<1\">\r\n                    <strong v-if=\"hideStudentList===false\">Please select Class...</strong>\r\n                    <strong v-if=\"hideStudentList===true\">No Student Found...</strong>\r\n                    <!--<router-link :to=\"{name: 'Class Management'}\">-->\r\n                    <!--<el-button type=\"primary\" round v-if=\"hideStudentList===true\" class=\"d-table\" @click=\"\">Assign Student to Class</el-button>-->\r\n                    <!--</router-link>-->\r\n                    <img src=\"../assets/attendance.jpg\"/>\r\n                </div>\r\n\r\n                <div v-if=\"studentList.length>0\" class=\"\">\r\n                    <div class=\"row actionBar\">\r\n                        <!--<data-tables :data=\"studentList\" @selection-change=\"handleSelectionChange\">-->\r\n                        <!--<el-table-column type=\"selection\" width=\"55\">-->\r\n                        <!--</el-table-column>-->\r\n                        <!--<el-table-column v-for=\"item in studentCheckList\" :prop=\"item.prop\"-->\r\n                        <!--:label=\"item.label\" :key=\"item.prop\"-->\r\n                        <!--sortable=\"custom\">-->\r\n                        <!--</el-table-column>-->\r\n                        <!--</data-tables>-->\r\n                        <!--<div class=\"col-lg-2\">-->\r\n                            <!--<vs-checkbox ref=\"isCheckAll\" v-model=\"selectallStudent\" @click=\"checkAllStudent()\">Select-->\r\n                                <!--All-->\r\n                            <!--</vs-checkbox>-->\r\n                        <!--</div>-->\r\n                        <div class=\"col-lg-12 \">\r\n                            <el-select placeholder=\"Select Attendance For All\" v-model=\"studentCheck\"\r\n                                       @change=\"selectedAttendance()\" class=\"\" v-if=\"bundleAttendance === true\">\r\n                                <el-option\r\n                                        v-for=\"itemCheckList in checkListSelect\"\r\n                                        :key=\"itemCheckList\"\r\n                                        :label=\"itemCheckList\"\r\n                                        :value=\"itemCheckList\"\r\n                                >\r\n                                </el-option>\r\n                            </el-select>\r\n\r\n                            <!--<router-link :to=\"{name: 'Class Management'}\">-->\r\n                                <!--<el-button type=\"primary\"  class=\"float-right mr-3\" @click=\"\">Add New Student</el-button>-->\r\n                            <!--</router-link>-->\r\n                        </div>\r\n                    </div>\r\n                    <table class=\"attTable\">\r\n                        <tr>\r\n                            <th></th>\r\n                            <!--<th>Student ID</th>-->\r\n                            <th>Student Name</th>\r\n                            <!--<th>Attendance <br> <input type=\"checkbox\" @click=\"checkAll()\" ref=\"checkAllBox\"></th>-->\r\n                            <th>Attendance</th>\r\n                            <th>Remarks</th>\r\n                            <th>Parents Mobile</th>\r\n                        </tr>\r\n                        <tr v-for=\"(item,i) in studentList\" ref=\"studentList_Update\">\r\n                            <td style=\"display:none;\"><input type=\"text\" class=\"form-control\" :value=\"item.Index_No\"\r\n                                                             ref=\"studentIndexNo\"></td>\r\n                            <td>\r\n                                <vs-checkbox ref=\"chkitems\" v-model=\"item.checked\"\r\n                                             @change=\"showBundleAttendance()\"></vs-checkbox>\r\n                            </td>\r\n                            <td style=\"display: none;\">{{item.checked}}</td>\r\n                            <!--<td><label>{{item.AttDtlStudentIndexNo}}</label></td>-->\r\n                            <td><label>{{item.Student_Name}}</label></td>\r\n                            <!--<td><input type=\"checkbox\" :id=\"item.AttDtlID\" :value=\"item.AttDtlID\" :checked=\"item.AttDtlMark.includes('Yes')\" ref=\"studentCheckList\"></td>-->\r\n                            <!--<td>-->\r\n                            <!--<div class=\"form-group__wrapper row\">-->\r\n                            <!--<div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12 checkbox_wrapper\">-->\r\n                            <!--<label class=\"lblCheckBox\">-->\r\n                            <!--<input class=\"form-control\" type=\"checkbox\" :id=\"item.AttDtlID\" :value=\"item.AttDtlID\" :checked=\"item.AttDtlMark.includes('Yes')\" ref=\"studentCheckList\">-->\r\n                            <!--<span>-->\r\n                            <!--<span>-->\r\n                            <!--<svg class=\"checkmark\" viewBox=\"0 0 24 24\"><path class=\"checkmark-path\" fill=\"none\" stroke=\"white\"-->\r\n                            <!--d=\"M1.73,12.91 8.1,19.28 22.79,4.59\"></path></svg>-->\r\n                            <!--</span>-->\r\n                            <!--</span>-->\r\n                            <!--</label>-->\r\n                            <!--</div>-->\r\n                            <!--</div>-->\r\n                            <!--</td>-->\r\n                            <td class=\"\">\r\n                                <!--<select ref=\"studentCheckList\"-->\r\n                                <!--class=\"form-control pro-edt-select form-control-primary\">-->\r\n                                <!--<option v-for=\"itemCheckList in checkListSelect\" :value=\"itemCheckList\"-->\r\n                                <!--:selected=\"itemCheckList === item.AttDtlMark\">-->\r\n                                <!--{{ itemCheckList }}-->\r\n                                <!--</option>-->\r\n                                <!--</select>-->\r\n\r\n                                <el-select ref=\"studentCheckList\" placeholder=\"Select\" v-model=\"item.markingStatus\"\r\n                                           :class=\"[{attend: item.markingStatus === 'Present'},{late: item.markingStatus === 'Late'},{absent: item.markingStatus === 'Absent'},{sick: item.markingStatus === 'Sick'},{holiday: item.markingStatus === 'On Holiday'},{home: item.markingStatus === 'Sent Home'}]\">\r\n                                    <el-option\r\n                                            v-for=\"itemCheckList in checkListSelect\"\r\n                                            :key=\"itemCheckList\"\r\n                                            :label=\"itemCheckList\"\r\n                                            :value=\"itemCheckList\"\r\n                                    >\r\n                                    </el-option>\r\n                                    <!--<el-option-->\r\n                                    <!--v-for=\"itemCheckList in checkListSelect\"-->\r\n                                    <!--:key=\"itemCheckList\"-->\r\n                                    <!--:label=\"itemCheckList\"-->\r\n                                    <!--:value=\"itemCheckList\"-->\r\n                                    <!--:selected=\"itemCheckList === item.AttDtlMark\">-->\r\n                                    <!--</el-option>-->\r\n                                </el-select>\r\n                            </td>\r\n                            <td><input type=\"text\" class=\"form-control\" v-model=\"item.remarks\"\r\n                                       ref=\"studentRemark\">\r\n                            </td>\r\n                            <td>\r\n                                <select class=\"parentsMobileNo\">\r\n                                    <option v-if=\"item.fatherMobile !== ''\">Father - {{ item.fatherMobile }}</option>\r\n                                    <option v-if=\"item.fatherMobile === ''\">Father - Nil</option>\r\n                                    <option v-if=\"item.motherMobile !== ''\">Mother - {{ item.motherMobile }}</option>\r\n                                    <option v-if=\"item.motherMobile === ''\">Mother - Nil</option>\r\n                                </select>\r\n                                <!--<el-select>-->\r\n                                    <!--<el-option-->\r\n                                            <!--:label=\"item.fatherMobile\">-->\r\n                                    <!--</el-option>-->\r\n                                <!--</el-select>-->\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n\r\n                <div class=\" text-center form-group col-lg-12\" style=\"margin-top:20px;\" v-if=\"studentList.length>0\">\r\n                    <button type=\"button\" class=\"btn btn-primary float-right\" v-on:click=\"Save\">Save</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import DataSource from \"../data/datasource\";\r\n\r\n    export default {\r\n        name: \"AttendanceList\",\r\n        data() {\r\n            return {\r\n                checkListSelect: ['Present','Absent', 'Late', 'Sick', 'On Holiday', 'Sent Home'],\r\n                ddlClassList: [],\r\n                ddlClass: '',\r\n                studentList: [],\r\n                studentClass: [],\r\n                studentCheck: [],\r\n                selectedStudent: [],\r\n                selectallStudent: false,\r\n                bundleAttendance: false,\r\n                hideStudentList: false,\r\n            };\r\n        },\r\n        async created() {\r\n            await this.bindClasses();\r\n        },\r\n        async mounted() {\r\n        },\r\n        methods: {\r\n            showBundleAttendance() {\r\n                    const isCheck = this.studentList.find(m => m.checked === true);\r\n                    if (isCheck) {\r\n                        this.bundleAttendance = true;\r\n                    } else {\r\n                        this.bundleAttendance = false;\r\n                    }\r\n            },\r\n            checkAllStudent() {\r\n                if (this.selectallStudent === false) {\r\n                    this.bundleAttendance = true;\r\n                    this.studentList.forEach(m => {\r\n                        m.checked = true;\r\n                    });\r\n                } else {\r\n                    this.bundleAttendance = false;\r\n\r\n                    this.studentList.forEach(m => {\r\n                        m.checked = false;\r\n                    });\r\n                }\r\n            },\r\n            selectedAttendance() {\r\n                this.studentList.forEach(m => {\r\n\r\n                    if (m.checked === true) {\r\n                        m.markingStatus = this.studentCheck;\r\n                    }\r\n                });\r\n            },\r\n            async bindClasses() {\r\n                try {\r\n                    const response = await DataSource.shared.getAttendanceClass();\r\n                    if (response) {\r\n                        this.class = response.Table;\r\n                        this.class.forEach(m => {\r\n                            this.ddlClassList.push(m);\r\n                        });\r\n                    }\r\n                    // const response = await DataSource.shared.getAttendanceClass();\r\n                    // if (response) {\r\n                    //     this.class = response.Table;\r\n                    //     let classValue;\r\n                    //     this.class.forEach(m => {\r\n                    //         // item.PK_Semester_ID.trim() + ',' + item.SC_FK_CourseID.trim() + ',' + item.PK_Class_ID.trim()\">{{ item.CLS_ClassName.trim()\r\n                    //         classValue = m.PK_Semester_ID.trim() + ',' + m.SC_FK_CourseID.trim() + ',' + m.PK_Class_ID.trim();\r\n                    //\r\n                    //         DataSource.shared.LoadAttendanceList(classValue).then((AttendResponse) => {\r\n                    //             if (AttendResponse.code === \"2\") {\r\n                    //                 return;\r\n                    //\r\n                    //             } else {\r\n                    //                 // this.studentclass = AttendResponse.Table;\r\n                    //                 this.ddlClassList.push(m);\r\n                    //             }\r\n                    //         });\r\n                    //     });\r\n                    //\r\n                    //\r\n                    // }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async Load() {\r\n\r\n                try {\r\n                    if (this.ddlClass === '') {\r\n                        this.$notify.error({\r\n                            title: 'Error',\r\n                            message: 'Please select class'\r\n                        });\r\n                    } else {\r\n                        this.$vs.loading();\r\n                        const response = await DataSource.shared.LoadAttendanceList(this.ddlClass);\r\n                        if (response) {\r\n\r\n                            if (response.code === '2') {\r\n                                this.studentList = [];\r\n                                this.hideStudentList = true;\r\n                                // this.$notify.error({\r\n                                //     title: 'Error',\r\n                                //     message: 'No student found'\r\n                                // });\r\n                            } else if (response.code === '99') {\r\n                                this.$notify.error({\r\n                                    title: 'Error',\r\n                                    message: 'Error! Please try again later'\r\n                                });\r\n                            } else {\r\n\r\n                                this.studentList.forEach(m => {\r\n                                    m.checked = false;\r\n                                });\r\n                                // response.Table.forEach(x => {\r\n                                //     if (x.AttDtlMark === \"No\") {\r\n                                //         x.AttDtlMark = null;\r\n                                //     }\r\n                                // });\r\n                                this.studentList = response.Table;\r\n\r\n                                this.studentListResponse = response.Table;\r\n                                // this.studentListResponse.forEach(m => {\r\n                                //     this.lblAttID = m.AttDtlAttID;\r\n                                // });\r\n                            }\r\n                        }\r\n                        this.$vs.loading.close();\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async Save() {\r\n                try {\r\n                    // let jsonString = '';\r\n                    //\r\n                    // this.$refs.studentList_Update.forEach((m, index) => {\r\n                    //     if (jsonString === '') {\r\n                    //         jsonString = '\"' + this.$refs.studentCheckList[index].value + '\":\"' + this.$refs.studentCheckList[index].checked + ',' + this.$refs.studentRemark[index].value + '\"';\r\n                    //     }\r\n                    //     else {\r\n                    //         jsonString = jsonString + ',\"' + this.$refs.studentCheckList[index].value + '\":\"' + this.$refs.studentCheckList[index].checked + ',' + this.$refs.studentRemark[index].value + '\"';\r\n                    //     }\r\n                    // });\r\n                    //\r\n                    // jsonString = '{ ' + jsonString + ' }';\r\n\r\n                    // const response = await DataSource.shared.updateAttendanceList(this.lblAttID, jsonString);\r\n                    // if (response) {\r\n                    //     if (response.code == '1') {\r\n                    //         alert('Successfully saved');\r\n                    //         window.location.replace('/attendancelist');\r\n                    //     } else {\r\n                    //         alert('Error! Please try again later');\r\n                    //         window.location.replace('/attendancelist');\r\n                    //     }\r\n                    // }\r\n                    let attendanceList = [];\r\n\r\n                    this.$refs.studentList_Update.forEach((m, index) => {\r\n                        let attendanceDetials = {\r\n                            status: this.$refs.studentCheckList[index].value,\r\n                            remark: this.$refs.studentRemark[index].value\r\n                        };\r\n\r\n                        let attendanceListTemp = {\r\n                            studentIndexNo: this.$refs.studentIndexNo[index].value,\r\n                            attDetails: attendanceDetials\r\n                        };\r\n\r\n                        attendanceList.push(attendanceListTemp);\r\n                    });\r\n\r\n                    const response = await DataSource.shared.updateAttendanceList(JSON.stringify(attendanceList));\r\n                    if (response) {\r\n                        if (response.code == '1') {\r\n                            this.$notify({\r\n                                title: 'Success',\r\n                                message: 'Successfully saved',\r\n                                type: 'success'\r\n                            });\r\n                            this.Load();\r\n\r\n                            this.selectallStudent = false;\r\n                            this.studentCheck = \"\";\r\n                            // window.location.replace('/attendancelist');\r\n                        } else {\r\n                            this.$notify.error({\r\n                                title: 'Error',\r\n                                message: 'Error! Please try again later'\r\n                            });\r\n                            window.location.replace('/attendancelist');\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async checkAll() {\r\n                try {\r\n                    if (this.$refs.checkAllBox.checked == true) {\r\n                        this.$refs.studentCheckList.forEach(m => {\r\n                            m.checked = true;\r\n                        });\r\n                    } else {\r\n                        this.$refs.studentCheckList.forEach(m => {\r\n                            m.checked = false;\r\n                        });\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n        },\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n    .attTable {\r\n        width: 100%;\r\n        margin-top: 20px;\r\n    }\r\n\r\n    .attTable td, .attTable th, .attTable label {\r\n        text-align: center;\r\n        padding: 10px;\r\n    }\r\n\r\n    .attTable tr:nth-child(even) {\r\n        background: #fff;\r\n    }\r\n\r\n    .ddlClass {\r\n        display: inline;\r\n        width: auto;\r\n    }\r\n\r\n    .lblClass {\r\n        display: inline !important;\r\n        padding: 20px;\r\n    }\r\n\r\n    input[type='checkbox'] {\r\n        width: 30px;\r\n        height: 30px;\r\n        background: white;\r\n        border-radius: 5px;\r\n        border: 2px solid #555;\r\n    }\r\n\r\n    .searchingArea {\r\n        text-align: left;\r\n    }\r\n\r\n    .checkbox_wrapper {\r\n        min-width: 100%;\r\n    }\r\n\r\n    .lblCheckBox {\r\n        width: 100%;\r\n    }\r\n\r\n    .parentsMobileNo {\r\n        background-color: #FFF;\r\n        background-image: none;\r\n        border-radius: 4px;\r\n        border: 1px solid #DCDFE6;\r\n        -webkit-box-sizing: border-box;\r\n        box-sizing: border-box;\r\n        color: #606266;\r\n        display: inline-block;\r\n        font-size: inherit;\r\n        height: 40px;\r\n        line-height: 40px;\r\n        outline: 0;\r\n        padding: 0 15px;\r\n    }\r\n</style>"]}]}