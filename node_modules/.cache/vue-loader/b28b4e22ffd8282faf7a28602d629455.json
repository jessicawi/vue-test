{"remainingRequest":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\PortfolioPreview.vue?vue&type=style&index=0&id=7e859204&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\PortfolioPreview.vue","mtime":1554357450580},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\css-loader\\index.js","mtime":1552619058288},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1553612666995},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\postcss-loader\\src\\index.js","mtime":1552619058487},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1553612666995}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.carousel {\n    /*width: 70%;*/\n    display: inline-block;\n}\n\n.ppTitle, .ppResearchQuestion, .ppDateOfObservation, .ppPostContent, #carousel1 {\n    margin-bottom: 20px;\n}\n\n.ppEachPost {\n    margin-bottom: 50px;\n}\n\n/*.ppGoals, .ppObservation {*/\n/*padding: 10px 10px 20px 10px;*/\n/*border: 3px solid;*/\n/*}*/\n\n.ppObservation {\n    border-top: 0px solid !important;\n}\n\n/*.ppTitle, .ppGoalsTitle, .ppObservationTitle {*/\n/*text-decoration: underline;*/\n/*font-weight: bold;*/\n/*}*/\n.ppEndduringThemes, .ppResearchQuestion, .ppGoals, .ppObservation {\n    text-align: left;\n}\n\n.ppEndduringThemes .ppEndduringThemesTitle, .ppResearchQuestion .ppResearchQuestionTitle, .ppDateOfObservation .ppDateOfObservationTitle, .ppGoalsTitle, .ppObservationTitle {\n    font-weight: bold;\n}\n\n.ppDateOfObservation {\n    text-align: right;\n}\n\n.ppPostContent {\n    color: red;\n    font-style: italic;\n}\n\n.ppMedia img {\n    width: 100% !important;\n}\n\n.textArea {\n    width: 100%;\n    resize: none;\n}\n\n.inputLearningStory, .ppPostContent {\n    text-align: center;\n}\n\n.inputPostCreatedDate {\n    width: auto;\n    display: inline;\n}\n\n.fa-clone {\n    cursor: pointer;\n}\n\n.visibleAll * {\n    visibility: visible !important;\n}\n",{"version":3,"sources":["PortfolioPreview.vue"],"names":[],"mappingsutBA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"PortfolioPreview.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div id=\"portfoliopreview\">\r\n        <div class=\"container\">\r\n            <div class=\"portfolio-preview__box\">\r\n                <div style=\"display: none;\">{{ saveEditMode }}</div>\r\n                <div style=\"display: none;\">{{ portfolioID }}</div>\r\n                <div class=\"ppTitle  mb-4\">\r\n                    <el-tooltip class=\"item\" effect=\"dark\" content=\"Portfolio Name\" placement=\"top\">\r\n                        <input type=\"text\" class=\" inputLearningStory\" v-model=\"inputLearningStory\"\r\n                               id=\"inputLearningStory\">\r\n                    </el-tooltip>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <!--<el-button @click=\"show3 = !show3\">Click Me</el-button>-->\r\n\r\n                    <!--<el-collapse-transition>-->\r\n                    <!--<div v-show=\"show3\">-->\r\n                    <!--<div class=\"transition-box\">el-collapse-transition</div>-->\r\n                    <!--<div class=\"transition-box\">el-collapse-transition</div>-->\r\n                    <!--</div>-->\r\n                    <!--</el-collapse-transition>-->\r\n                </div>\r\n                <div class=\" ppEndduringThemes \">\r\n                    <div class=\"preview-top\">\r\n                        <label class=\"ppEndduringThemesTitle\">Enduring Themes: </label>\r\n                        <el-input\r\n                                type=\"textarea\"\r\n                                autosize\r\n                                v-model=\"taEnduringThemes\"\r\n                                class=\"mb-2\"\r\n                        >\r\n                        </el-input>\r\n                        <el-button @click=\"show3 = !show3\" class=\"preview-comment__btn\" size=\"mini\" v-if=\"commentField\">\r\n                            <i class=\"material-icons\">\r\n                                chat_bubble_outline\r\n                            </i>\r\n                        </el-button>\r\n                        <!--<textarea rows=\"1\" class=\"textArea\" v-model=\"taEnduringThemes\"-->\r\n                        <!--@input=\"textareaResize($event)\"></textarea>-->\r\n\r\n                        <!--<i class=\"fa fa-clone\" aria-hidden=\"true\" v-on:click=\"openCommentField($event)\"-->\r\n                        <!--v-if=\"commentField\">-->\r\n                    </div>\r\n                    <div class=\"preview-comment\">\r\n                        <el-collapse-transition>\r\n                            <div v-show=\"!show3\" class=\"spanComment\">\r\n                                <h6 class=\"text-left\">Remark:</h6>\r\n\r\n                                <!--<textarea rows=\"1\" class=\"textArea\" v-model=\"inputEndduringThemesComment\" @input=\"textareaResize($event)\"></textarea>-->\r\n                                <input type=\"text\" class=\"form-control\" v-model=\"inputEndduringThemesComment\">\r\n                                <div v-for=\"value in portfolioCommentHistoryList\" class=\"preview-comment__list\"\r\n                                     v-if=\"value.AppComValue !== undefined && value.AppComDesc==='Enduring Themes' && value.AppComType === 'Portfolio Header'\">\r\n\r\n                                    <label class=\"preview-comment__commenter\">\r\n                                        Commenter: {{ value.CONname }} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span>Date: {{ value.AppComCreatedDate_convert }}</span>\r\n                                    </label>\r\n                                    <label>\r\n                                        {{ value.AppComValue }}\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </el-collapse-transition>\r\n                    </div>\r\n                    <div class=\"preview-top\">\r\n\r\n                        <label class=\"ppResearchQuestionTitle\">Research Question: </label>\r\n                        <el-input\r\n                                type=\"textarea\"\r\n                                autosize\r\n                                v-model=\"taResearchQuestion\"\r\n                                class=\"mb-2 textArea\"\r\n                        >\r\n                        </el-input>\r\n                        <!--<textarea rows=\"1\" class=\"textArea\" v-model=\"taResearchQuestion\"-->\r\n                        <!--@input=\"textareaResize($event)\"></textarea>-->\r\n\r\n                        <!--<i class=\"fa fa-clone\" aria-hidden=\"true\" v-on:click=\"openCommentField($event)\"-->\r\n                        <!--v-if=\"commentField\">                        </i>-->\r\n\r\n                        <el-button @click=\"showResearch = !showResearch\" class=\"preview-comment__btn\" size=\"mini\"\r\n                                   v-if=\"commentField\">\r\n                            <i class=\"material-icons\">\r\n                                chat_bubble_outline\r\n                            </i>\r\n                        </el-button>\r\n                    </div>\r\n\r\n\r\n                    <div class=\"preview-comment\">\r\n                        <el-collapse-transition>\r\n                            <div v-show=\"!showResearch\" class=\"spanComment\">\r\n                                <h6 class=\"text-left\">Remark:</h6>\r\n\r\n                                <!--<textarea rows=\"1\" class=\"textArea\" v-model=\"inputResearchQuestionComment\" @input=\"textareaResize($event)\"></textarea>-->\r\n                                <input type=\"text\" class=\"form-control\" v-model=\"inputResearchQuestionComment\">\r\n                                <div v-for=\"value in portfolioCommentHistoryList\" class=\"preview-comment__list\"\r\n                                     v-if=\"value.AppComValue !== undefined && value.AppComDesc==='Research Question' && value.AppComType === 'Portfolio Header'\">\r\n                                    <label class=\"preview-comment__commenter\">\r\n                                        Commenter: {{ value.CONname }} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Date of Commenter:\r\n                                        {{ value.AppComCreatedDate_convert }}\r\n                                    </label>\r\n                                    <label>\r\n                                        {{ value.AppComValue }}\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </el-collapse-transition>\r\n                    </div>\r\n                </div>\r\n\r\n                <!--div class=\"row ppEndduringThemes\">\r\n                    <div class=\"col-lg-3 col-md-3 col-sm-3 col-xs-3 ppEndduringThemesTitle\">Enduring Themes: </div>\r\n                    <div class=\"col-lg-9 col-md-9 col-sm-9 col-xs-9\" >\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"row ppResearchQuestion\">\r\n                    <div class=\"col-lg-3 col-md-3 col-sm-3 col-xs-3 ppResearchQuestionTitle\"></div>\r\n                    <div class=\"col-lg-9 col-md-9 col-sm-9 col-xs-9\" >\r\n\r\n                    </div>\r\n                </div-->\r\n\r\n                <div v-for=\"item in postList\" class=\"ppEachPost\" ref=\"ppEachPost_Update\">\r\n                    <div class=\"ppDateOfObservation\">\r\n                        <span class=\"ppDateOfObservationTitle\">Date of observation: </span>\r\n                        <span><input type=\"text\" class=\"form-control inputPostCreatedDate\" ref=\"postCreatedDate\"\r\n                                     :value=\"item.PostCreatedDate_convert.trim()\" readonly></span>\r\n                        <!--<span ref=\"postCreatedDate\">{{item.PostCreatedDate_convert.trim()}}</span>-->\r\n                    </div>\r\n\r\n                    <div class=\"preview-content-wrap\">\r\n                        <el-tooltip class=\"item\" effect=\"dark\" content=\"Post Content\" placement=\"top\">\r\n                            <input type=\"text\" class=\"form-control ppPostContent\" ref=\"postContent\"\r\n                                   :value=\"item.PostContent.trim()\">\r\n                        </el-tooltip>\r\n                        <!--<i class=\"fa fa-clone\" aria-hidden=\"true\" v-on:click=\"openCommentField($event)\"-->\r\n                        <!--v-if=\"commentField\">-->\r\n                        <!--<span class=\"spanComment\">-->\r\n                        <!--<div v-for=\"value in portfolioCommentHistoryList\"-->\r\n                        <!--v-if=\"value.AppComValue !== undefined && value.AppComApproverItemID === item.PostID && value.AppComType === 'Portfolio Details' && value.AppComDesc === 'Post Title'\">-->\r\n                        <!--<label>-->\r\n                        <!--Commenter: {{ value.CONname }} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Date of Commenter: {{  value.AppComCreatedDate_convert }}-->\r\n                        <!--</label>-->\r\n                        <!--<label>-->\r\n                        <!--{{ value.AppComValue }}-->\r\n                        <!--</label>-->\r\n                        <!--</div>-->\r\n\r\n                        <!--<input type=\"text\" class=\"form-control\" ref=\"postContentComment\">-->\r\n                        <!--</span>-->\r\n                        <!--</i>-->\r\n                        <el-button @click=\"showContent = !showContent\" class=\"preview-comment__btn\" size=\"mini\"\r\n                                   v-if=\"commentField\">\r\n                            <i class=\"material-icons\">\r\n                                chat_bubble_outline\r\n                            </i>\r\n                        </el-button>\r\n                    </div>\r\n                    <div class=\"preview-comment\">\r\n                        <el-collapse-transition>\r\n                            <div v-show=\"!showContent\" class=\"spanComment\">\r\n                                <h6 class=\"text-left\">Remark:</h6>\r\n\r\n                                <input type=\"text\" class=\"form-control\" ref=\"postContentComment\">\r\n                                <div v-for=\"value in portfolioCommentHistoryList\" class=\"preview-comment__list\"\r\n                                     v-if=\"value.AppComValue !== undefined && value.AppComApproverItemID === item.PostID && value.AppComType === 'Portfolio Details' && value.AppComDesc === 'Post Title'\">\r\n                                    <label class=\"preview-comment__commenter\">\r\n                                        Commenter: {{ value.CONname }} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Date of Commenter:\r\n                                        {{ value.AppComCreatedDate_convert }}\r\n                                    </label>\r\n                                    <label>\r\n                                        {{ value.AppComValue }}\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </el-collapse-transition>\r\n                    </div>\r\n\r\n                    <div class=\"carousel-wrap\">\r\n                        <b-carousel id=\"carousel1\"\r\n                                    style=\"text-shadow: 1px 1px 2px #333;\"\r\n                                    indicators\r\n                                    :controls=\"!isNull(mediaList[item.PostID]) && mediaList[item.PostID].length>1\"\r\n                                    background=\"#ababab\"\r\n                                    :interval=\"0\">\r\n                            <div class=\"ppMedia\" v-for=\"media in mediaList[item.PostID]\">\r\n                                <b-carousel-slide>\r\n                                    <img slot=\"img\" class=\"card-img-top d-block img-fluid w-100\"\r\n                                         :src=\"getLowSource(media)\"\r\n                                    />\r\n                                </b-carousel-slide>\r\n                            </div>\r\n                        </b-carousel>\r\n                    </div>\r\n\r\n                    <!--<div v-for=\"media in postList[item.PostID]\" >-->\r\n                    <!--<img slot=\"img\" class=\"card-img-top d-block img-fluid w-100\"-->\r\n                    <!--:src=\"getLowSource(media)\"/>-->\r\n                    <!--</div>-->\r\n\r\n                    <div class=\"ppGoals\">\r\n                        <div class=\"ppGoalsTitle mb-2\">Connection with long-term goals</div>\r\n                        <div class=\"preview-top mb-3\">\r\n                            <el-input\r\n                                    type=\"textarea\"\r\n                                    autosize\r\n                                    v-model=\"connection\"\r\n                                    ref=\"postGoal\"\r\n                                    class=\"mb-2\"\r\n                            >\r\n\r\n                            </el-input>\r\n                            <!--<textarea rows=\"1\" class=\"textArea\" @input=\"textareaResize($event)\" ref=\"postGoal\">{{ item.PostPorDtlDevelopmentGoals }}</textarea>-->\r\n                            <!--<i class=\"fa fa-clone\" aria-hidden=\"true\" v-on:click=\"openCommentField($event)\"-->\r\n                            <!--v-if=\"commentField\">-->\r\n                            <!--<span class=\"spanComment\">-->\r\n                            <!--<div v-for=\"value in portfolioCommentHistoryList\"-->\r\n                            <!--v-if=\"value.AppComValue !== undefined && value.AppComApproverItemID === item.PostID && value.AppComType === 'Portfolio Details' && value.AppComDesc === 'Post Goals'\">-->\r\n                            <!--<label>-->\r\n                            <!--Commenter: {{ value.CONname }} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Date of Commenter: {{  value.AppComCreatedDate_convert }}-->\r\n                            <!--</label>-->\r\n                            <!--<label>-->\r\n                            <!--{{ value.AppComValue }}-->\r\n                            <!--</label>-->\r\n                            <!--</div>-->\r\n\r\n                            <!--<input type=\"text\" class=\"form-control\" ref=\"postGoalComment\">-->\r\n                            <!--</span>-->\r\n                            <!--</i>-->\r\n\r\n                            <el-button @click=\"showConnection = !showConnection\" class=\"preview-comment__btn\"\r\n                                       size=\"mini\" v-if=\"commentField\">\r\n                                <i class=\"material-icons\">\r\n                                    chat_bubble_outline\r\n                                </i>\r\n                            </el-button>\r\n                        </div>\r\n\r\n                        <div class=\"preview-comment\">\r\n                            <el-collapse-transition>\r\n                                <div v-show=\"!showConnection\" class=\"spanComment\">\r\n                                    <h6 class=\"text-left\">Remark:</h6>\r\n\r\n                                    <input type=\"text\" class=\"form-control\" ref=\"postGoalComment\">\r\n                                    <div v-for=\"value in portfolioCommentHistoryList\" class=\"preview-comment__list\"\r\n                                         v-if=\"value.AppComValue !== undefined && value.AppComApproverItemID === item.PostID && value.AppComType === 'Portfolio Details' && value.AppComDesc === 'Post Goals'\">\r\n                                        <label class=\"preview-comment__commenter\">\r\n                                            Commenter: {{ value.CONname }} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Date of\r\n                                            Commenter: {{ value.AppComCreatedDate_convert }}\r\n                                        </label>\r\n                                        <label>\r\n                                            {{ value.AppComValue }}\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </el-collapse-transition>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"ppObservation\">\r\n                        <div class=\"ppObservationTitle mb-2\">Anecdotal Observations</div>\r\n                        <div class=\"preview-top mb-3\">\r\n\r\n                            <el-input\r\n                                    type=\"textarea\"\r\n                                    autosize\r\n                                    v-model=\"analysis\"\r\n                                    ref=\"postObservation\"\r\n                            >\r\n                            </el-input>\r\n                            <!--<textarea rows=\"1\" class=\"textArea\" @input=\"textareaResize($event)\" ref=\"postObservation\">{{ item.PostPorDtlAnalysisReflection }}-->\r\n                            <!--{{ item.PostPorDtlObservation }}</textarea>-->\r\n                            <!--<i class=\"fa fa-clone\" aria-hidden=\"true\" v-on:click=\"openCommentField($event)\"-->\r\n                            <!--v-if=\"commentField\">-->\r\n                            <!--<span class=\"spanComment\">-->\r\n                            <!--<div v-for=\"value in portfolioCommentHistoryList\"-->\r\n                            <!--v-if=\"value.AppComValue !== undefined && value.AppComApproverItemID === item.PostID && value.AppComType === 'Portfolio Details' && value.AppComDesc === 'Post Observations'\">-->\r\n                            <!--<label>-->\r\n                            <!--Commenter: {{ value.CONname }} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Date of Commenter: {{  value.AppComCreatedDate_convert }}-->\r\n                            <!--</label>-->\r\n                            <!--<label>-->\r\n                            <!--{{ value.AppComValue }}-->\r\n                            <!--</label>-->\r\n                            <!--</div>-->\r\n\r\n                            <!--<input type=\"text\" class=\"form-control\" ref=\"postObservationComment\">-->\r\n                            <!--</span>-->\r\n                            <!--</i>-->\r\n                            <el-button @click=\"showObservation = !showObservation\" class=\"preview-comment__btn\"\r\n                                       size=\"mini\" v-if=\"commentField\">\r\n                                <i class=\"material-icons\">\r\n                                    chat_bubble_outline\r\n                                </i>\r\n                            </el-button>\r\n                        </div>\r\n                        <div class=\"preview-comment\">\r\n                            <el-collapse-transition>\r\n                                <div v-show=\"!showObservation\" class=\"spanComment\">\r\n                                    <h6 class=\"text-left\">Remark:</h6>\r\n\r\n                                    <input type=\"text\" class=\"form-control\" ref=\"postObservationComment\">\r\n                                    <div v-for=\"value in portfolioCommentHistoryList\" class=\"preview-comment__list\"\r\n                                         v-if=\"value.AppComValue !== undefined && value.AppComApproverItemID === item.PostID && value.AppComType === 'Portfolio Details' && value.AppComDesc === 'Post Observations'\">\r\n                                        <label class=\"preview-comment__commenter\">\r\n                                            Commenter: {{ value.CONname }} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Date of\r\n                                            Commenter: {{ value.AppComCreatedDate_convert }}\r\n                                        </label>\r\n                                        <label>\r\n                                            {{ value.AppComValue }}\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            </el-collapse-transition>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"portfolio-preview__submit\">\r\n                    <button v-on:click=\"savePortfolio\" v-if=\"savePortfolioAction\"\r\n                            class=\"btn btn-primary waves-effect waves-light m-r-10 btnFamilyIDSearch\">Submit\r\n                    </button>\r\n                    <button v-on:click=\"approvePortfolio('Approved')\" v-if=\"approverPortfolioAction\"\r\n                            class=\"btn btn-primary waves-effect waves-light m-r-10 btnFamilyIDSearch\">Approve\r\n                    </button>\r\n                    <button v-on:click=\"approvePortfolio('Reject')\" v-if=\"approverPortfolioAction\"\r\n                            class=\"btn btn-primary waves-effect waves-light m-r-10 btnFamilyIDSearch\">Reject\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import DataSource from \"../data/datasource\";\r\n    import Vue from 'vue';\r\n    import CollapseTransition from 'element-ui/lib/transitions/collapse-transition';\r\n\r\n    export default {\r\n        name: \"PortfolioPreview\",\r\n        data() {\r\n            return {\r\n                postList: [],\r\n                mediaList: [],\r\n                portfolioCommentHistoryList: [],\r\n\r\n                taEnduringThemes: '',\r\n                taResearchQuestion: '',\r\n                inputLearningStory: '',\r\n                taObservation: '',\r\n                saveEditMode: '',\r\n                savePortfolioAction: '',\r\n                approverPortfolioAction: '',\r\n\r\n                commentField: '',\r\n                spanEndduringThemes: '',\r\n                inputEndduringThemesComment: '',\r\n                inputResearchQuestion: '',\r\n                inputResearchQuestionComment: '',\r\n                portfolioID: '',\r\n                connection: '',\r\n                analysis: '',\r\n                show3: true,\r\n                showResearch: true,\r\n                showContent: true,\r\n                showConnection: true,\r\n                showObservation: true,\r\n            };\r\n        },\r\n        async created() {\r\n            if (this.$route.params.mode === '' || this.$route.params.mode === null || this.$route.params.mode === undefined) { //this is from email link\r\n                if (this.$route.query.id != null || this.$route.query.id !== undefined) {\r\n                    this.saveEditMode = 'APPROVER';\r\n                    //this.portfolioID = this.$route.query.id;\r\n                    this.commentField = true;\r\n\r\n                    await this.deString(this.$route.query.id);\r\n                } else {\r\n                    this.$router.push('/pendingapprover');\r\n                }\r\n            } else {\r\n                if (this.$route.params.mode === 'NEW') {\r\n                    this.saveEditMode = 'NEW';\r\n                    this.savePortfolioAction = true;\r\n\r\n                    await this.getPostData(this.$route.params.stringifyPostIDs);\r\n                } else if (this.$route.params.mode === 'EDIT') {\r\n                    this.saveEditMode = 'EDIT';\r\n                    this.commentField = true;\r\n\r\n                    await this.getPortfolioComment(this.$route.params.portfolioID);\r\n                    await this.getPortfolioPost(this.$route.params.portfolioID);\r\n                } else if (this.$route.params.mode === 'APPROVER') {\r\n                    this.saveEditMode = 'APPROVER';\r\n                    this.portfolioID = this.$route.params.portfolioID;\r\n                    this.commentField = true;\r\n\r\n                    await this.getPortfolioComment(this.$route.params.portfolioID);\r\n                    await this.getPortfolioPost(this.$route.params.portfolioID);\r\n                    await this.checkApprover(this.$route.params.portfolioID);\r\n                }\r\n            }\r\n        },\r\n        component: {\r\n            CollapseTransition\r\n        },\r\n        async mounted() {\r\n\r\n        },\r\n        methods: {\r\n            isNull(obj) {\r\n                return (obj === null || obj === undefined || obj === \"undefined\" || obj.length === 0 || obj === \"\");\r\n            },\r\n            async deString(inputString) {\r\n                try {\r\n                    const response = await DataSource.shared.deString(inputString);\r\n                    if (response) {\r\n                        switch (response.code) {\r\n                            case \"88\":\r\n                                this.$router.push('/');\r\n                                break;\r\n                            case \"99\":\r\n                                this.$router.push('/pendingapprover');\r\n                                break;\r\n                        }\r\n                        this.portfolioID = response.string;\r\n\r\n                        await this.getPortfolioComment(this.portfolioID);\r\n                        await this.getPortfolioPost(this.portfolioID);\r\n                        await this.checkApprover(this.portfolioID);\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async getPortfolioPost(portfolioID) {\r\n                try {\r\n                    const response = await DataSource.shared.getPortfolioHeaderDetails(portfolioID);\r\n                    if (response) {\r\n                        switch (response.code) {\r\n                            case \"2\":\r\n                                this.$notify.error({\r\n                                    title: 'Error',\r\n                                    message: 'no record found'\r\n                                });\r\n                                break;\r\n                            case \"88\":\r\n                                this.$router.push('/');\r\n                                break;\r\n                            case \"99\":\r\n                                this.$router.push('/pendingapprover');\r\n                                break;\r\n                        }\r\n                        response.HeaderTable.Table.forEach((m, index) => {\r\n                            this.inputLearningStory = m.PortfolioTitle;\r\n                            this.taEnduringThemes = m.PortfolioEnduringThemes;\r\n                            this.taResearchQuestion = m.PortfolioResearchQuestion;\r\n                        });\r\n                        let tempPortfolioDetails = [];\r\n                        response.DetailsTable.Table.forEach((m, index) => {\r\n                            let my_object = {\r\n                                PostID: m.PortfolioDetailsPostID,\r\n                                PostCreatedDate_convert: m.PortfolioDetailsPostCreatedDate,\r\n                                PostContent: m.PortfolioDetailsTitle,\r\n                                PostPorDtlDevelopmentGoals: m.PortfolioDetailsGoals,\r\n                                PostPorDtlAnalysisReflection: m.PortfolioDetailsObservations\r\n                            };\r\n                            this.connection = m.PortfolioDetailsGoals;\r\n                            this.analysis = m.PortfolioDetailsObservations;\r\n                            tempPortfolioDetails.push(my_object);\r\n                        });\r\n                        this.postList = tempPortfolioDetails;\r\n\r\n                        this.getImage();\r\n\r\n                        // if (response.code === '88') {\r\n                        //     window.location.replace('/');\r\n                        // } else if (response.code === '99') {\r\n                        //     // alert('Error');\r\n                        // } else if (response.code === '2') {\r\n                        //     alert('no record found');\r\n                        //\r\n                        // } else {\r\n                        //     response.HeaderTable.Table.forEach((m, index) => {\r\n                        //         this.inputLearningStory = m.PortfolioTitle;\r\n                        //         this.taEnduringThemes = m.PortfolioEnduringThemes;\r\n                        //         this.taResearchQuestion = m.PortfolioResearchQuestion;\r\n                        //     });\r\n                        //     let tempPortfolioDetails = [];\r\n                        //     response.DetailsTable.Table.forEach((m, index) => {\r\n                        //         let my_object = {\r\n                        //             PostID: m.PortfolioDetailsPostID,\r\n                        //             PostCreatedDate_convert: m.PortfolioDetailsPostCreatedDate,\r\n                        //             PostContent: m.PortfolioDetailsTitle,\r\n                        //             PostPorDtlDevelopmentGoals: m.PortfolioDetailsGoals,\r\n                        //             PostPorDtlAnalysisReflection: m.PortfolioDetailsObservations\r\n                        //         };\r\n                        //         this.connection = m.PortfolioDetailsGoals;\r\n                        //         this.analysis = m.PortfolioDetailsObservations;\r\n                        //         tempPortfolioDetails.push(my_object);\r\n                        //     });\r\n                        //     this.postList = tempPortfolioDetails;\r\n                        //\r\n                        //     this.getImage();\r\n                        // }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async getPostData(arrayPostID) {\r\n                try {\r\n                    //let jsonStringPostID = JSON.stringify([\"POS201900005560\",\"POS201900005576\",\"POS201900005585\"]);\r\n                    let jsonStringPostID = arrayPostID;\r\n\r\n                    const response = await DataSource.shared.getPostByPostID(jsonStringPostID);\r\n                    if (response) {\r\n                        if (response.code === '88') {\r\n                            window.location.replace('/');\r\n                        } else if (response.code === '99') {\r\n                            this.$notify.error({\r\n                                title: 'Error',\r\n                                message: 'Error'\r\n                            });\r\n                        } else {\r\n                            this.postList = response.Table;\r\n                            if (response.Table.length > 0) {\r\n                                let tempAnalysis = response.Table[0].PostPorDtlAnalysisReflection\r\n                                let tempObservation = response.Table[0].PostPorDtlObservation\r\n                                this.analysis = tempAnalysis + '\\n' + tempObservation;\r\n                                console.log(this.analysis);\r\n                                let tempConnection = JSON.stringify(response.Table[0].PostPorDtlDevelopmentGoals);\r\n                                this.connection = JSON.parse(tempConnection);\r\n                                // let tempLearning = JSON.stringify(response.Table[0].PostPorDtlTitle);\r\n                                // this.inputLearningStory = JSON.parse(tempLearning);\r\n                            }\r\n                            this.getImage();\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async getImage() {\r\n                for (const post of this.postList) {\r\n                    const response2 = await DataSource.shared.getPostFile(post.PostID);\r\n                    if (response2) {\r\n                        if (response2.code === '88') {\r\n                            window.location.replace('/');\r\n                        } else if (response2.code === '2') {\r\n                            console.log('no data found');\r\n                        } else {\r\n                            Vue.set(this.mediaList, post.PostID, response2.Table);\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            getLowSource(file) {\r\n                if (this.isImage(file))\r\n                    return \"data:\" + file.PostItemFileType + \";base64,\" + file.PostItemFile;\r\n                else\r\n                    return \"\";\r\n            },\r\n            isImage(obj_File) {\r\n                let ext = String(obj_File.PostItemFileExt).toUpperCase();\r\n                let isImage = false;\r\n\r\n                switch (ext) {\r\n                    case \".PNG\":\r\n                    case \".JPG\":\r\n                    case \".BMP\":\r\n                    case \".GIF\":\r\n                        isImage = true;\r\n                        break;\r\n                    default:\r\n                        isImage = false;\r\n                        break;\r\n                }\r\n\r\n                return isImage;\r\n            },\r\n            textareaResize(e) {\r\n                // this.$refs.ppEndduringThemesTa.style.minHeight = this.$refs.ppEndduringThemesTa.scrollHeight + 'px';\r\n                // this.$refs.ppResearchQuestionTa.style.minHeight = this.$refs.ppResearchQuestionTa.scrollHeight + 'px';\r\n                // this.$refs.ppObservationTa.style.minHeight = this.$refs.ppObservationTa.scrollHeight + 'px';\r\n                e.currentTarget.style.height = 'auto';\r\n                e.currentTarget.style.height = e.currentTarget.scrollHeight + 'px';\r\n            },\r\n            async savePortfolio() {\r\n                try {\r\n                    if (this.inputLearningStory === '' || this.taEnduringThemes === '' || this.taResearchQuestion === '') {\r\n                        this.$notify.error({\r\n                            title: 'Error',\r\n                            message: 'Please fill in all fields'\r\n                        });\r\n                    } else {\r\n                        this.$vs.loading();\r\n                        let postDetails = [];\r\n\r\n                        this.$refs.ppEachPost_Update.forEach((m, index) => {\r\n                            let my_object = {\r\n                                postID: this.postList[index].PostID,\r\n                                postContent: this.$refs.postContent[index].value,\r\n                                postGoal: this.$refs.postGoal[index].value,\r\n                                postObservation: this.$refs.postObservation[index].value,\r\n                                postCreatedDate: this.$refs.postCreatedDate[index].value\r\n                            };\r\n                            postDetails.push(my_object);\r\n                        });\r\n\r\n                        const response = await DataSource.shared.savePortfolio(this.$route.params.portfolioDesc, this.$route.params.studentID, this.$route.params.portfolioID, this.inputLearningStory, this.taEnduringThemes, this.taResearchQuestion, JSON.stringify(postDetails));\r\n                        if (response) {\r\n                            if (response.code === '88') {\r\n                                window.location.replace('/');\r\n                            } else if (response.code === '99') {\r\n                                this.$vs.loading.close();\r\n                                this.$notify.error({\r\n                                    title: 'Error',\r\n                                    message: 'Please fill up all content..'\r\n                                });\r\n                            } else {\r\n                                this.$vs.loading.close();\r\n                                this.$notify({\r\n                                    title: 'Success',\r\n                                    message: 'Portfolio Submitted!',\r\n                                    type: 'success'\r\n                                });\r\n                                setTimeout(\"window.location.replace('/Portfolio')\", 300);\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async approvePortfolio(actionStatus) {\r\n                try {\r\n                    this.$vs.loading();\r\n                    let postDetailsComment = [];\r\n\r\n                    this.$refs.ppEachPost_Update.forEach((m, index) => {\r\n                        let my_object = {\r\n                            postID: this.postList[index].PostID,\r\n                            postContentComment: this.$refs.postContentComment[index].value,\r\n                            postGoalComment: this.$refs.postGoalComment[index].value,\r\n                            postObservationComment: this.$refs.postObservationComment[index].value\r\n                        };\r\n                        postDetailsComment.push(my_object);\r\n                    });\r\n\r\n\r\n                    let portfolioID = this.portfolioID;\r\n                    let portfolioEnduringThemesComment = this.inputEndduringThemesComment;\r\n                    let portfolioResearchQuestionComment = this.inputResearchQuestionComment;\r\n                    let jsonStringCommentValue = JSON.stringify(postDetailsComment);\r\n\r\n                    const response = await DataSource.shared.approvePortfolio(portfolioID, actionStatus, portfolioEnduringThemesComment, portfolioResearchQuestionComment, jsonStringCommentValue);\r\n                    if (response) {\r\n                        this.$vs.loading.close();\r\n                        if (response) {\r\n                            if (response.code === '88') {\r\n                                window.location.replace('/');\r\n                            } else if (response.code === '99') {\r\n                                this.$notify.error({\r\n                                    title: 'Error',\r\n                                    message: 'Error'\r\n                                });\r\n                            } else {\r\n                                this.$notify({\r\n                                    title: 'Success',\r\n                                    message: 'Done!',\r\n                                    type: 'success'\r\n                                });\r\n                                this.$router.go(-1);\r\n                                // window.location.replace('/');\r\n                            }\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            openCommentField(e) {\r\n                try {\r\n                    if (e.target.classList.contains('visibleAll')) {\r\n                        e.target.classList.remove('visibleAll');\r\n                    } else {\r\n                        e.target.className += \" visibleAll\";\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async checkApprover(portfolioID) {\r\n                try {\r\n                    const response = await DataSource.shared.checkApproveStatusByUser(portfolioID, \"PORTFOLIO\");\r\n                    if (response) {\r\n                        if (response.code === '1') {\r\n                            this.approverPortfolioAction = true;\r\n                        } else {\r\n                            this.approverPortfolioAction = false;\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async getPortfolioComment(portfolioID) {\r\n                try {\r\n                    const response = await DataSource.shared.getApproverComment(portfolioID);\r\n                    if (response) {\r\n                        this.portfolioCommentHistoryList = response.Table;\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n        },\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n    .carousel {\r\n        /*width: 70%;*/\r\n        display: inline-block;\r\n    }\r\n\r\n    .ppTitle, .ppResearchQuestion, .ppDateOfObservation, .ppPostContent, #carousel1 {\r\n        margin-bottom: 20px;\r\n    }\r\n\r\n    .ppEachPost {\r\n        margin-bottom: 50px;\r\n    }\r\n\r\n    /*.ppGoals, .ppObservation {*/\r\n    /*padding: 10px 10px 20px 10px;*/\r\n    /*border: 3px solid;*/\r\n    /*}*/\r\n\r\n    .ppObservation {\r\n        border-top: 0px solid !important;\r\n    }\r\n\r\n    /*.ppTitle, .ppGoalsTitle, .ppObservationTitle {*/\r\n    /*text-decoration: underline;*/\r\n    /*font-weight: bold;*/\r\n    /*}*/\r\n    .ppEndduringThemes, .ppResearchQuestion, .ppGoals, .ppObservation {\r\n        text-align: left;\r\n    }\r\n\r\n    .ppEndduringThemes .ppEndduringThemesTitle, .ppResearchQuestion .ppResearchQuestionTitle, .ppDateOfObservation .ppDateOfObservationTitle, .ppGoalsTitle, .ppObservationTitle {\r\n        font-weight: bold;\r\n    }\r\n\r\n    .ppDateOfObservation {\r\n        text-align: right;\r\n    }\r\n\r\n    .ppPostContent {\r\n        color: red;\r\n        font-style: italic;\r\n    }\r\n\r\n    .ppMedia img {\r\n        width: 100% !important;\r\n    }\r\n\r\n    .textArea {\r\n        width: 100%;\r\n        resize: none;\r\n    }\r\n\r\n    .inputLearningStory, .ppPostContent {\r\n        text-align: center;\r\n    }\r\n\r\n    .inputPostCreatedDate {\r\n        width: auto;\r\n        display: inline;\r\n    }\r\n\r\n    .fa-clone {\r\n        cursor: pointer;\r\n    }\r\n\r\n    .visibleAll * {\r\n        visibility: visible !important;\r\n    }\r\n</style>"]}]}