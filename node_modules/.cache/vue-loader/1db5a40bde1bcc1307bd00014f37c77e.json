{"remainingRequest":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\TransferIn.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\TransferIn.vue","mtime":1558875151962},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1553612671158},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1553612666995}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport DataSource from \"../data/datasource\";\n\nexport default {\n    name: \"TransferIn\",\n    data() {\n        return {\n            levelList: [],\n            academicYearList: [],\n            studentIntakeYearList: [],\n            transferStudentID: '',\n            studentSchoolID: '',\n            inputDateOfCommencement: '',\n\n            transferInListInt: [\n                // {\n                //     Index_No: \"123\",\n                //     Full_Name: \"qweasd\",\n                //     Middle_name: \"asd\",\n                //     Last_name: \"qw\"\n                // },{\n                //     Index_No: \"1231\",\n                //     Full_Name: \"qweasd\",\n                //     Middle_name: \"asd\",\n                //     Last_name: \"qw\"\n                // }\n            ],\n            transferInList: [{\n                prop: \"Index_No\",\n                label: \"Student ID\"\n            }, {\n                prop: \"Full_Name\",\n                label: \"First Name\"\n            }, {\n                prop: \"Middle Name\",\n                label: \"Middle_name\"\n            }, {\n                prop: \"Last Name\",\n                label: \"Last_name\"\n            }],\n            transferListAction: {\n                label: 'Action',\n                props: {\n                    align: 'center',\n                },\n                buttons: [{\n                    props: {\n                        type: 'primary',\n                        icon: 'el-icon-edit'\n                    },\n                    handler: row => {\n                        this.transferStudentID = row.Student_ID;\n                        this.studentSchoolID = row.PK_STUSCH_ID;\n                        this.inputDateOfCommencement = row.STUSCH_EffectiveDate_convert;\n                        this.$refs.transferShowModal.show();\n                    },\n                    label: 'Action'\n                }]\n            },\n            showEmpty: false,\n            search: \"\"\n        };\n    },\n    computed: {\n        filteredList() {\n            if (this.transferInListInt && Array.isArray(this.transferInListInt)) {\n                return this.transferInListInt.filter(d => {\n                    return d.Full_Name.toLowerCase().includes(this.search.toLowerCase());\n                });\n            }\n        }\n    },\n    async created() {\n        this.getPendingAcceptTransferSchoolList();\n        this.BindStudentLevel();\n        this.BindAcademicYear();\n        this.BindStudentIntakeYear();\n    },\n    async mounted() {\n    },\n    methods: {\n        searchInputChange(e) {\n            console.log(e.target.value);\n        },\n\n        getTransferAction(Student_ID, PK_STUSCH_ID, STUSCH_EffectiveDate_convert) {\n            this.transferStudentID = Student_ID;\n            this.studentSchoolID = PK_STUSCH_ID;\n            this.inputDateOfCommencement = STUSCH_EffectiveDate_convert;\n            console.log(this.transferStudentID, this.studentSchoolID, this.inputDateOfCommencement);\n            this.$refs.transferShowModal.show();\n        },\n        async getPendingAcceptTransferSchoolList() {\n            this.$vs.loading();\n            try {\n                const response = await DataSource.shared.getPendingAcceptTransferSchoolBySchool();\n                if (response) {\n                    switch (response.code) {\n                        case \"88\":\n                            this.$router.push('/');\n                            break;\n                        case \"99\":\n                            this.$notify.error({\n                                title: 'Error',\n                                message: 'Error'\n                            });\n                            break;\n                        case \"2\":\n                            this.showEmpty = true;\n                            break;\n                    }\n\n                    this.transferInListInt = response.Table;\n                }\n            } catch (e) {\n                this.results = e;\n            }\n            this.$vs.loading.close();\n        },\n        async BindStudentLevel() {\n            try {\n                const response = await DataSource.shared.getLevel('');\n                if (response) {\n                    this.levelListResponse = response.Table;\n                    this.levelListResponse.forEach(m => {\n                        this.levelList.push(m);\n                    });\n                }\n            } catch (e) {\n                this.results = e;\n            }\n        },\n        async BindAcademicYear() {\n            try {\n                const response = await DataSource.shared.getAcademicYear();\n                if (response) {\n                    this.academicYearListResponse = response.Table;\n                    this.academicYearListResponse.forEach(m => {\n                        this.academicYearList.push(m);\n                    });\n                }\n            } catch (e) {\n                this.results = e;\n            }\n        },\n        async BindStudentIntakeYear() {\n            try {\n                const response = await DataSource.shared.getIntakeYear();\n                if (response) {\n                    this.studentIntakeYearListResponse = response.Table;\n                    this.studentIntakeYearListResponse.forEach(m => {\n                        this.studentIntakeYearList.push(m);\n                    });\n                }\n            } catch (e) {\n                this.results = e;\n            }\n        },\n        async ApproveReject(value) {\n            this.$vs.loading();\n            try {\n\n\n                if (this.transferStudentID !== \"\" && this.studentSchoolID !== \"\") {\n                    if (value === 'APPROVE') {\n                        if (this.$refs.ddlStudentSelectLevel.value !== \"\" && this.$refs.ddlStudentFirstAcademicYear.value !== \"\" && this.$refs.ddlStudentIntakeYear.value !== \"\") {\n                            const getAcaYearRes = await DataSource.shared.getAcademicYearDateRange(this.$refs.ddlStudentFirstAcademicYear.value);\n\n                            if (getAcaYearRes) {\n                                if (getAcaYearRes.code === \"99\") {\n                                    this.$notify.error({\n                                        title: 'Error',\n                                        message: 'Get Academic Year Error - Please try again later'\n                                    });\n                                } else {\n                                    let academicYearFromDate, academicYearToDate;\n\n                                    this.getAcaYearResTemp = getAcaYearRes.Table;\n                                    this.getAcaYearResTemp.forEach(m => {\n                                        academicYearFromDate = m.SMT_From;\n                                        academicYearToDate = m.SMT_To;\n                                    });\n\n                                    this.academicYearToDate(value, academicYearFromDate, academicYearToDate, this.$refs.ddlStudentSelectLevel.value, this.$refs.ddlStudentFirstAcademicYear.value, this.$refs.ddlStudentIntakeYear.value);\n                                }\n                            }\n                        } else {\n                            this.$notify.error({\n                                title: 'Error',\n                                message: 'Please fill in all the information'\n                            });\n                        }\n                    } else if (value === 'REJECT') {\n                        this.academicYearToDate(value, 'NO DATA', 'NO DATA', 'NO DATA', 'NO DATA', 'NO DATA');\n                    }\n\n\n                } else {\n                    this.$notify.error({\n                        title: 'Error',\n                        message: 'Error! Fail to get table info'\n                    });\n                }\n            } catch (e) {\n                this.results = e;\n            }\n        },\n        async academicYearToDate(value, academicYearFromDate, academicYearToDate, level, adYear, intakeYear) {\n            try {\n                const getSetLvlRes = await DataSource.shared.setLevelForAcceptScool(this.transferStudentID, level, academicYearFromDate, academicYearToDate, adYear, intakeYear, value, this.studentSchoolID, this.inputDateOfCommencement);\n\n                if (getSetLvlRes) {\n                    if (getSetLvlRes.code === \"1\") {\n                        this.$notify({\n                            title: 'Success',\n                            message: 'Records Successfully Saved',\n                            type: 'success'\n                        });\n                        this.getPendingAcceptTransferSchoolList();\n                        this.$refs.transferShowModal.hide();\n                        // window.location.replace('/TransferIn');\n                    } else if (getSetLvlRes.code === \"2\") {\n                        this.$notify.error({\n                            title: 'Error',\n                            message: 'Date of Commencement Cannot today or less than today'\n                        });\n                    } else {\n                        this.$notify.error({\n                            title: 'Error',\n                            message: 'Save Student Accept / Reject School - Please try again later'\n                        });\n                    }\n                }\n            } catch (e) {\n                this.results = e;\n            }\n            this.$vs.loading.close();\n        }\n    },\n};\n",{"version":3,"sources":["TransferIn.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TransferIn.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div id=\"transferin\">\r\n        <div class=\"container\">\r\n            <div class=\"row header mb-2\">\r\n                <div class=\"col-lg-3 \">\r\n                    <h3 class=\"text-left mb-3\">\r\n                        {{$route.name}}\r\n                    </h3>\r\n                </div>\r\n                <div class=\"search-wrap\">\r\n                    <el-input placeholder=\"Search for...\" v-model=\"search\" @change=\"searchInputChange\" ></el-input>\r\n                </div>\r\n                <div class=\"col-lg-3\">\r\n                    <router-link :to=\"{name: 'Student List'}\">\r\n                        <el-button type=\"primary\" round\r\n                                   class=\"float-right large-btn classManage-filter\"><i\r\n                                class=\"material-icons\">\r\n                            swap_horiz\r\n                        </i> Transfer More\r\n                        </el-button>\r\n                    </router-link>\r\n                </div>\r\n            </div>\r\n            <div class=\"empty-list_image\" v-if=\"transferInListInt&&transferInListInt.length<1 || showEmpty === true\">\r\n                <strong>No Data Found...</strong>\r\n                <img src=\"../assets/notfound.png\"/>\r\n            </div>\r\n            <!--<div class=\"row\">-->\r\n            <!--<div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">-->\r\n            <!--<div>-->\r\n            <!--&lt;!&ndash;<div v-if=\"transferInListInt.length>0\">&ndash;&gt;-->\r\n            <!--<data-tables :data=\"transferInListInt\" :action-col=\"transferListAction\">-->\r\n            <!--<el-table-column v-for=\"transferInListInfo in transferInList\"-->\r\n            <!--:prop=\"transferInListInfo.prop\"-->\r\n            <!--:label=\"transferInListInfo.label\" :key=\"transferInListInfo.prop\"-->\r\n            <!--sortable=\"custom\">-->\r\n            <!--</el-table-column>-->\r\n            <!--</data-tables>-->\r\n            <!--</div>-->\r\n            <!--</div>-->\r\n            <!--</div>-->\r\n            <div class=\"row transfer_card mt-3\">\r\n                <div class=\"transfer_card-item\" v-for=\"item in filteredList\">\r\n                    <span class=\"top-colorBar\">{{item.STUSCH_EffectiveDate_convert}}</span>\r\n                    <small>{{item.Index_No}}</small>\r\n                    <hr/>\r\n                    <h4>{{item.Full_Name}}</h4>\r\n                    <div style=\"color:#999;\">\r\n                        {{item.Last_name}}\r\n                    </div>\r\n                    <el-button type=\"primary\" icon=\"el-icon-edit\" circle size=\"small\"\r\n                               @click=\"getTransferAction(item.Student_ID,item.PK_STUSCH_ID,item.STUSCH_EffectiveDate_convert)\"\r\n                               class=\"mt-2 mb-2\"></el-button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <b-modal id=\"transferModal\" size=\"lg\" title=\"Transfer\" ok-only ok-variant=\"secondary\" ok-title=\"Cancel\"\r\n                 ref=\"transferShowModal\" hide-footer>\r\n            <div style=\"display: none;\">{{ transferStudentID }} - {{ studentSchoolID }}</div>\r\n            <div class=\"row \">\r\n                <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                    <label>Select Level</label>\r\n                    <select ref=\"ddlStudentSelectLevel\" class=\"form-control pro-edt-select form-control-primary\">\r\n                        <option v-for=\"item in levelList\" v-bind:value=\"item.PK_Course_ID.trim()\">{{\r\n                            item.CRS_Course_Name.trim() }}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                    <label>First Academic Year</label>\r\n                    <select ref=\"ddlStudentFirstAcademicYear\"\r\n                            class=\"form-control pro-edt-select form-control-primary\">\r\n                        <option v-for=\"item in academicYearList\" v-bind:value=\"item.PK_Semester_ID.trim()\">{{\r\n                            item.SMT_Code.trim() }}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                    <label>Intake Year</label>\r\n                    <select ref=\"ddlStudentIntakeYear\" class=\"form-control pro-edt-select form-control-primary\">\r\n                        <option v-for=\"item in studentIntakeYearList\" v-bind:value=\"item.PK_PAI_ID.trim()\">{{\r\n                            item.PAI_Intake_No.trim() }}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"col-lg-6 col-md-6 col-sm-6 col-xs-12\">\r\n                    <label>Date of Commencement</label>\r\n                    <div class=\"date\">\r\n                        <el-date-picker v-model=\"inputDateOfCommencement\" format=\"dd/MM/yyyy\"\r\n                                        value-format=\"dd/MM/yyyy\" type=\"date\"\r\n                                        placeholder=\"Pick a date\"></el-date-picker>\r\n                    </div>\r\n                </div>\r\n                <!--<div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">-->\r\n                <!--<button class=\"btn btn-primary waves-effect waves-light m-r-10\" v-on:click=\"ApproveReject('APPROVE')\">Approve</button>-->\r\n                <!--<button class=\"btn btn-primary waves-effect waves-light m-r-10\" v-on:click=\"ApproveReject('REJECT')\">Reject</button>-->\r\n                <!--</div>-->\r\n                <hr class=\"custom-hr\"/>\r\n                <div class=\"col-lg-6\">\r\n                    <button v-on:click=\"ApproveReject('REJECT')\"\r\n                            class=\"btn btn-secondary close-modal-btn float-left\">Reject\r\n                    </button>\r\n                </div>\r\n                <div class=\"col-lg-6\">\r\n                    <button class=\"btn btn-primary waves-effect waves-light m-r-10 btnFamilyIDSearch\"\r\n                            v-on:click=\"ApproveReject('APPROVE')\">Approve\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </b-modal>\r\n    </div>\r\n</template>\r\n<script>\r\n    import DataSource from \"../data/datasource\";\r\n\r\n    export default {\r\n        name: \"TransferIn\",\r\n        data() {\r\n            return {\r\n                levelList: [],\r\n                academicYearList: [],\r\n                studentIntakeYearList: [],\r\n                transferStudentID: '',\r\n                studentSchoolID: '',\r\n                inputDateOfCommencement: '',\r\n\r\n                transferInListInt: [\r\n                    // {\r\n                    //     Index_No: \"123\",\r\n                    //     Full_Name: \"qweasd\",\r\n                    //     Middle_name: \"asd\",\r\n                    //     Last_name: \"qw\"\r\n                    // },{\r\n                    //     Index_No: \"1231\",\r\n                    //     Full_Name: \"qweasd\",\r\n                    //     Middle_name: \"asd\",\r\n                    //     Last_name: \"qw\"\r\n                    // }\r\n                ],\r\n                transferInList: [{\r\n                    prop: \"Index_No\",\r\n                    label: \"Student ID\"\r\n                }, {\r\n                    prop: \"Full_Name\",\r\n                    label: \"First Name\"\r\n                }, {\r\n                    prop: \"Middle Name\",\r\n                    label: \"Middle_name\"\r\n                }, {\r\n                    prop: \"Last Name\",\r\n                    label: \"Last_name\"\r\n                }],\r\n                transferListAction: {\r\n                    label: 'Action',\r\n                    props: {\r\n                        align: 'center',\r\n                    },\r\n                    buttons: [{\r\n                        props: {\r\n                            type: 'primary',\r\n                            icon: 'el-icon-edit'\r\n                        },\r\n                        handler: row => {\r\n                            this.transferStudentID = row.Student_ID;\r\n                            this.studentSchoolID = row.PK_STUSCH_ID;\r\n                            this.inputDateOfCommencement = row.STUSCH_EffectiveDate_convert;\r\n                            this.$refs.transferShowModal.show();\r\n                        },\r\n                        label: 'Action'\r\n                    }]\r\n                },\r\n                showEmpty: false,\r\n                search: \"\"\r\n            };\r\n        },\r\n        computed: {\r\n            filteredList() {\r\n                if (this.transferInListInt && Array.isArray(this.transferInListInt)) {\r\n                    return this.transferInListInt.filter(d => {\r\n                        return d.Full_Name.toLowerCase().includes(this.search.toLowerCase());\r\n                    });\r\n                }\r\n            }\r\n        },\r\n        async created() {\r\n            this.getPendingAcceptTransferSchoolList();\r\n            this.BindStudentLevel();\r\n            this.BindAcademicYear();\r\n            this.BindStudentIntakeYear();\r\n        },\r\n        async mounted() {\r\n        },\r\n        methods: {\r\n            searchInputChange(e) {\r\n                console.log(e.target.value);\r\n            },\r\n\r\n            getTransferAction(Student_ID, PK_STUSCH_ID, STUSCH_EffectiveDate_convert) {\r\n                this.transferStudentID = Student_ID;\r\n                this.studentSchoolID = PK_STUSCH_ID;\r\n                this.inputDateOfCommencement = STUSCH_EffectiveDate_convert;\r\n                console.log(this.transferStudentID, this.studentSchoolID, this.inputDateOfCommencement);\r\n                this.$refs.transferShowModal.show();\r\n            },\r\n            async getPendingAcceptTransferSchoolList() {\r\n                this.$vs.loading();\r\n                try {\r\n                    const response = await DataSource.shared.getPendingAcceptTransferSchoolBySchool();\r\n                    if (response) {\r\n                        switch (response.code) {\r\n                            case \"88\":\r\n                                this.$router.push('/');\r\n                                break;\r\n                            case \"99\":\r\n                                this.$notify.error({\r\n                                    title: 'Error',\r\n                                    message: 'Error'\r\n                                });\r\n                                break;\r\n                            case \"2\":\r\n                                this.showEmpty = true;\r\n                                break;\r\n                        }\r\n\r\n                        this.transferInListInt = response.Table;\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n                this.$vs.loading.close();\r\n            },\r\n            async BindStudentLevel() {\r\n                try {\r\n                    const response = await DataSource.shared.getLevel('');\r\n                    if (response) {\r\n                        this.levelListResponse = response.Table;\r\n                        this.levelListResponse.forEach(m => {\r\n                            this.levelList.push(m);\r\n                        });\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async BindAcademicYear() {\r\n                try {\r\n                    const response = await DataSource.shared.getAcademicYear();\r\n                    if (response) {\r\n                        this.academicYearListResponse = response.Table;\r\n                        this.academicYearListResponse.forEach(m => {\r\n                            this.academicYearList.push(m);\r\n                        });\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async BindStudentIntakeYear() {\r\n                try {\r\n                    const response = await DataSource.shared.getIntakeYear();\r\n                    if (response) {\r\n                        this.studentIntakeYearListResponse = response.Table;\r\n                        this.studentIntakeYearListResponse.forEach(m => {\r\n                            this.studentIntakeYearList.push(m);\r\n                        });\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async ApproveReject(value) {\r\n                this.$vs.loading();\r\n                try {\r\n\r\n\r\n                    if (this.transferStudentID !== \"\" && this.studentSchoolID !== \"\") {\r\n                        if (value === 'APPROVE') {\r\n                            if (this.$refs.ddlStudentSelectLevel.value !== \"\" && this.$refs.ddlStudentFirstAcademicYear.value !== \"\" && this.$refs.ddlStudentIntakeYear.value !== \"\") {\r\n                                const getAcaYearRes = await DataSource.shared.getAcademicYearDateRange(this.$refs.ddlStudentFirstAcademicYear.value);\r\n\r\n                                if (getAcaYearRes) {\r\n                                    if (getAcaYearRes.code === \"99\") {\r\n                                        this.$notify.error({\r\n                                            title: 'Error',\r\n                                            message: 'Get Academic Year Error - Please try again later'\r\n                                        });\r\n                                    } else {\r\n                                        let academicYearFromDate, academicYearToDate;\r\n\r\n                                        this.getAcaYearResTemp = getAcaYearRes.Table;\r\n                                        this.getAcaYearResTemp.forEach(m => {\r\n                                            academicYearFromDate = m.SMT_From;\r\n                                            academicYearToDate = m.SMT_To;\r\n                                        });\r\n\r\n                                        this.academicYearToDate(value, academicYearFromDate, academicYearToDate, this.$refs.ddlStudentSelectLevel.value, this.$refs.ddlStudentFirstAcademicYear.value, this.$refs.ddlStudentIntakeYear.value);\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                this.$notify.error({\r\n                                    title: 'Error',\r\n                                    message: 'Please fill in all the information'\r\n                                });\r\n                            }\r\n                        } else if (value === 'REJECT') {\r\n                            this.academicYearToDate(value, 'NO DATA', 'NO DATA', 'NO DATA', 'NO DATA', 'NO DATA');\r\n                        }\r\n\r\n\r\n                    } else {\r\n                        this.$notify.error({\r\n                            title: 'Error',\r\n                            message: 'Error! Fail to get table info'\r\n                        });\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async academicYearToDate(value, academicYearFromDate, academicYearToDate, level, adYear, intakeYear) {\r\n                try {\r\n                    const getSetLvlRes = await DataSource.shared.setLevelForAcceptScool(this.transferStudentID, level, academicYearFromDate, academicYearToDate, adYear, intakeYear, value, this.studentSchoolID, this.inputDateOfCommencement);\r\n\r\n                    if (getSetLvlRes) {\r\n                        if (getSetLvlRes.code === \"1\") {\r\n                            this.$notify({\r\n                                title: 'Success',\r\n                                message: 'Records Successfully Saved',\r\n                                type: 'success'\r\n                            });\r\n                            this.getPendingAcceptTransferSchoolList();\r\n                            this.$refs.transferShowModal.hide();\r\n                            // window.location.replace('/TransferIn');\r\n                        } else if (getSetLvlRes.code === \"2\") {\r\n                            this.$notify.error({\r\n                                title: 'Error',\r\n                                message: 'Date of Commencement Cannot today or less than today'\r\n                            });\r\n                        } else {\r\n                            this.$notify.error({\r\n                                title: 'Error',\r\n                                message: 'Save Student Accept / Reject School - Please try again later'\r\n                            });\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n                this.$vs.loading.close();\r\n            }\r\n        },\r\n    };\r\n</script>\r\n<style scoped>\r\n</style>"]}]}