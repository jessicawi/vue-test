{"remainingRequest":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\ResetPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\ResetPassword.vue","mtime":1553877294295},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1553612671158},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1553612666995}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport DataSource from \"../data/datasource\";\nimport { required, minLength, email } from 'vuelidate/lib/validators'\n\nexport default {\n    name: 'ResetPassword',\n    data() {\n        return {\n            results: \"\",\n            userEmail: \"\",\n            userPassword: \"\",\n            otp: \"\",\n            isLoading: false,\n        };\n    },\n    validations: {\n        userEmail: {\n            required,\n            email\n        },\n        userPassword: {\n            required,\n            minLength: minLength(6)\n        },\n        otp: {\n            required\n        }\n    },\n    methods: {\n        async onSubmit() {\n            //this.results = \"<< Requesting.. >>\";\n            try {\n                this.isLoading = true;\n                const response = await DataSource.shared.resetPassword(this.userEmail, this.userPassword, this.otp);\n                this.isLoading = false;\n                if (response) {\n                    switch (response.code) {\n                        case \"1\":\n                            window.location.replace(\"/login\");\n                            this.results = `Password Reset`;\n                            //this.results = `Invalid User Name - sample 1:${JSON.stringify(response)}`;\n                            break;\n                        case \"2\":\n                            this.results = `Invalid OTP`;\n                            //this.results = `Invalid User Name - sample 1:${JSON.stringify(response)}`;\n                            break;\n                        case \"3\":\n                            this.results = `OTP Expired`;\n                            //this.results = `Invalid password - sample 2: code: ${response.code}`;\n                            break;\n                        case \"99\":\n                            this.results = `Please Try Again`;\n                            //this.results = `Please fill in all field - sample 3: code: ${response.code}`;\n                            break;\n                    }\n                }\n            } catch (e) {\n                this.results = e;\n                this.isLoading = false;\n            }\n        },\n    }\n\n\n};\n\n",{"version":3,"sources":["ResetPassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA","file":"ResetPassword.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div id=\"resetPassword\" class=\"content\">\r\n        <div class=\"backstretch\">\r\n            <img src=\"../assets/bg.jpg\"/>\r\n        </div>\r\n\r\n        <div class=\"row login-box\">\r\n            <div class=\"resetlink-wrap\">\r\n                <div class=\"col-md-12 mb-6 login-form col-sm-12\">\r\n                    <div class=\"login-header mb-5 row\">\r\n                        <div class=\"col-md-10\">\r\n                            <h4 class=\"mb-3 text-muted\">Reset Password</h4><br/>\r\n                            <span>Your password needs to have at least one symbol or number, <br/>and have at least 8 characters.</span>\r\n                        </div>\r\n                        <div class=\"col-md-2 pl-0 pr-0\">\r\n                            <img src=\"../assets/kagami.jpg\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"reset-content\">\r\n                        <form class=\"needs-validation\" novalidate @submit.prevent=\"onSubmit\">\r\n\r\n                            <div class=\"mb-3 form-group\" :class=\"{ 'form-group--error': $v.userEmail.$error }\">\r\n                                <input type=\"email\" class=\"form-control\" id=\"userEmail\" v-model=\"userEmail\"\r\n                                       placeholder=\"Email Address\"\r\n                                       v-model.trim=\"$v.userEmail.$model\">\r\n                            </div>\r\n                            <div class=\"error\" v-if=\"!$v.userEmail.required\">Email is required</div>\r\n                            <div class=\"error\" v-if=\"!$v.userEmail.email\">Enter a valid email</div>\r\n\r\n                            <div class=\"mb-3 form-group\" :class=\"{ 'form-group--error': $v.userPassword.$error }\">\r\n                                <input type=\"password\" class=\"form-control\" id=\"userPassword\" v-model=\"userPassword\"\r\n                                       placeholder=\"New Password\"\r\n                                       v-model.trim=\"$v.userPassword.$model\">\r\n                            </div>\r\n                            <div class=\"error\" v-if=\"!$v.userPassword.required\">Password is required</div>\r\n                            <div class=\"error\" v-if=\"!$v.userPassword.minLength\">Password must have at least 6 letters.</div>\r\n\r\n\r\n                            <div class=\"mb-3 form-group\" :class=\"{ 'form-group--error': $v.otp.$error }\">\r\n                                <input type=\"text\" class=\"form-control\" id=\"otp\" v-model=\"otp\"\r\n                                       placeholder=\"OTP\"\r\n                                       v-model.trim=\"$v.otp.$model\">\r\n                            </div>\r\n                            <div class=\"error\" v-if=\"!$v.otp.required\">OTP is required</div>\r\n\r\n                            <div class=\"system-msg\"><p>{{results}}</p></div>\r\n                            <div class=\"row d-flex mt-3 mb-5\">\r\n                                <div class=\"col-md-12\">\r\n                                    <button class=\"btn btn-primary btn-lg btn-block login-btn\" type=\"submit\" v-show=\"isLoading===false\">\r\n                                        Submit\r\n                                    </button>\r\n                                    <div class=\"loading\" v-if=\"isLoading===true\">\r\n                                        <div class=\"load-3\">\r\n                                            <div class=\"line\"></div>\r\n                                            <div class=\"line\"></div>\r\n                                            <div class=\"line\"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\n    import DataSource from \"../data/datasource\";\r\n    import { required, minLength, email } from 'vuelidate/lib/validators'\r\n\r\n    export default {\r\n        name: 'ResetPassword',\r\n        data() {\r\n            return {\r\n                results: \"\",\r\n                userEmail: \"\",\r\n                userPassword: \"\",\r\n                otp: \"\",\r\n                isLoading: false,\r\n            };\r\n        },\r\n        validations: {\r\n            userEmail: {\r\n                required,\r\n                email\r\n            },\r\n            userPassword: {\r\n                required,\r\n                minLength: minLength(6)\r\n            },\r\n            otp: {\r\n                required\r\n            }\r\n        },\r\n        methods: {\r\n            async onSubmit() {\r\n                //this.results = \"<< Requesting.. >>\";\r\n                try {\r\n                    this.isLoading = true;\r\n                    const response = await DataSource.shared.resetPassword(this.userEmail, this.userPassword, this.otp);\r\n                    this.isLoading = false;\r\n                    if (response) {\r\n                        switch (response.code) {\r\n                            case \"1\":\r\n                                window.location.replace(\"/login\");\r\n                                this.results = `Password Reset`;\r\n                                //this.results = `Invalid User Name - sample 1:${JSON.stringify(response)}`;\r\n                                break;\r\n                            case \"2\":\r\n                                this.results = `Invalid OTP`;\r\n                                //this.results = `Invalid User Name - sample 1:${JSON.stringify(response)}`;\r\n                                break;\r\n                            case \"3\":\r\n                                this.results = `OTP Expired`;\r\n                                //this.results = `Invalid password - sample 2: code: ${response.code}`;\r\n                                break;\r\n                            case \"99\":\r\n                                this.results = `Please Try Again`;\r\n                                //this.results = `Please fill in all field - sample 3: code: ${response.code}`;\r\n                                break;\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                    this.isLoading = false;\r\n                }\r\n            },\r\n        }\r\n\r\n\r\n    };\r\n\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n    .topbar {\r\n        display: none;\r\n    }\r\n\r\n</style>\r\n\r\n<style>\r\n    .resetPassword header {\r\n        display: none;\r\n    }\r\n</style>\r\n"]}]}