{"remainingRequest":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\PendingApprover.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\PendingApprover.vue","mtime":1555253101142},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1553612671158},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1553612666995}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport DataSource from \"../data/datasource\";\n\nexport default {\n    name: \"PendingApprover\",\n    data() {\n        return {\n            list: [],\n            pendingApproverList: [{\n                prop: \"ApproverPendingType\",\n                label: \"Type\"\n            }, {\n                prop: \"ApproverPendingContent\",\n                label: \"Title\"\n            }, {\n                prop: \"ApproverPendingConName\",\n                label: \"Requester\"\n            }],\n            actionCol: {\n                label: 'Action',\n                props: {\n                    align: 'center',\n                },\n                buttons: [{\n                    props: {\n                        type: 'primary',\n                        icon: 'el-icon-edit',\n                        round: true,\n                    },\n                    handler: row => {\n                        if (row.ApproverPendingType === \"Portfolio\") {\n                            this.$router.push({\n                                name: 'Portfolio Preview',\n                                params: {\n                                    portfolioID: row.ApproverItemID,\n                                    mode: 'APPROVER'\n                                }\n                            });\n                        } else if (row.ApproverPendingType.includes(\"Posting - \")) {\n                            this.$router.push({\n                                name: 'Post Approve',\n                                params: {\n                                    postID: row.ApproverItemID,\n                                    postType: row.ApproverPendingType\n                                }\n                            });\n                        } else {\n                            alert('Error! Please try again later');\n                        }\n                    },\n                    label: 'Action'\n                }]\n            },\n            selectedRow: [],\n        };\n    },\n    async created() {\n        this.getPendingApproverList();\n    },\n    methods: {\n        handleSelectionChange(val) {\n            this.selectedRow = val;\n        },\n        async getPendingApproverList() {\n            try {\n                const response = await DataSource.shared.getPendingApprover();\n                if (response) {\n                    this.list = response.Table;\n                }\n            } catch (e) {\n                this.results = e;\n            }\n        },\n    },\n};\n",{"version":3,"sources":["PendingApprover.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PendingApprover.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div id=\"pendingapprover\">\r\n        <div class=\"container admin-wrap\">\r\n            <div class=\"row header\">\r\n                <div class=\"col-lg-8 \">\r\n                    <h3 class=\"text-left\">PENDING APPROVER <span>{{list.length}}</span></h3>\r\n                </div>\r\n\r\n                <div class=\"col-lg-4\">\r\n                    <router-link :to=\"{name: 'Latest Update'}\">\r\n                        <el-button type=\"primary\" round class=\"float-right\"><i class=\"material-icons\">\r\n                            chevron_left\r\n                        </i> CREATE POST\r\n                        </el-button>\r\n                    </router-link>\r\n                </div>\r\n            </div>\r\n            <div v-if=\"list.length>0\" class=\"datatable_group\">\r\n                <data-tables :data=\"list\" :action-col=\"actionCol\" @selection-change=\"handleSelectionChange\">\r\n                    <el-table-column type=\"selection\" width=\"55\">\r\n                    </el-table-column>\r\n                    <el-table-column v-for=\"item in pendingApproverList\" :prop=\"item.prop\"\r\n                                     :label=\"item.label\" :key=\"item.prop\"\r\n                                     sortable=\"custom\">\r\n                    </el-table-column>\r\n                </data-tables>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import DataSource from \"../data/datasource\";\r\n\r\n    export default {\r\n        name: \"PendingApprover\",\r\n        data() {\r\n            return {\r\n                list: [],\r\n                pendingApproverList: [{\r\n                    prop: \"ApproverPendingType\",\r\n                    label: \"Type\"\r\n                }, {\r\n                    prop: \"ApproverPendingContent\",\r\n                    label: \"Title\"\r\n                }, {\r\n                    prop: \"ApproverPendingConName\",\r\n                    label: \"Requester\"\r\n                }],\r\n                actionCol: {\r\n                    label: 'Action',\r\n                    props: {\r\n                        align: 'center',\r\n                    },\r\n                    buttons: [{\r\n                        props: {\r\n                            type: 'primary',\r\n                            icon: 'el-icon-edit',\r\n                            round: true,\r\n                        },\r\n                        handler: row => {\r\n                            if (row.ApproverPendingType === \"Portfolio\") {\r\n                                this.$router.push({\r\n                                    name: 'Portfolio Preview',\r\n                                    params: {\r\n                                        portfolioID: row.ApproverItemID,\r\n                                        mode: 'APPROVER'\r\n                                    }\r\n                                });\r\n                            } else if (row.ApproverPendingType.includes(\"Posting - \")) {\r\n                                this.$router.push({\r\n                                    name: 'Post Approve',\r\n                                    params: {\r\n                                        postID: row.ApproverItemID,\r\n                                        postType: row.ApproverPendingType\r\n                                    }\r\n                                });\r\n                            } else {\r\n                                alert('Error! Please try again later');\r\n                            }\r\n                        },\r\n                        label: 'Action'\r\n                    }]\r\n                },\r\n                selectedRow: [],\r\n            };\r\n        },\r\n        async created() {\r\n            this.getPendingApproverList();\r\n        },\r\n        methods: {\r\n            handleSelectionChange(val) {\r\n                this.selectedRow = val;\r\n            },\r\n            async getPendingApproverList() {\r\n                try {\r\n                    const response = await DataSource.shared.getPendingApprover();\r\n                    if (response) {\r\n                        this.list = response.Table;\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n        },\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}