{"remainingRequest":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\ApproverMaster.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\src\\pages\\ApproverMaster.vue","mtime":1555258106486},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1553612671158},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1558432313812},{"path":"C:\\Users\\jessi\\Documents\\git\\vue-test\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1553612666995}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport DataSource from \"../data/datasource\";\n\nexport default {\n    name: \"ApproverMaster\",\n    data() {\n        return {\n            showAddSpecific: false,\n            showAddApproverMaster: false,\n            tabForm: 'approver_master',\n            ddlStaffList: '',\n            staffList: [],\n            ddlStaffListSpecificUser: '',\n            staffListSpecificUser: [],\n            approverTypeList: ['Portfolio', 'Documentation_Posting', 'Update_Posting', 'Portfolio_Posting', 'Report_Posting', 'Broadcast_Posting'],\n            ddlApproverType: '',\n            ddlApproverTypeSpecificUser: '',\n            approverLevelList: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\n            ddlApproverLevel: '',\n            selectedRow: [],\n\n            approverListInt: [],\n            approverList: [{\n                prop: \"ApproverMasterType\",\n                label: \"Type\"\n            }, {\n                prop: \"ApproverMasterLevel\",\n                label: \"Approval Level\"\n            }, {\n                prop: \"CONname\",\n                label: \"Approver\"\n            }, {\n                prop: \"ContainAnySpecificUser\",\n                label: \"Specific User To Approve\"\n            }],\n            approverListDeleteButton: {\n                label: 'Delete',\n                props: {\n                    align: 'center',\n                },\n                buttons: [{\n                    props: {\n                        type: 'primary',\n                        icon: 'el-icon-edit'\n                    },\n                    handler: row => {\n                        this.deleteApproverMaster(row.ApproverMasterID);\n                    },\n                    label: 'Delete'\n                }]\n            },\n\n            approverSpecificUserInt: [],\n            approverSpecificUserList: [{\n                prop: \"AppMacSpeType\",\n                label: \"Type\"\n            }, {\n                prop: \"CONname\",\n                label: \"Specific Needed Approve User Name\"\n            }],\n            approverSpecificUserListDeleteButton: {\n                label: 'Delete',\n                props: {\n                    align: 'center',\n                },\n                buttons: [{\n                    props: {\n                        type: 'primary',\n                        icon: 'el-icon-edit'\n                    },\n                    handler: row => {\n                        this.deleteApproverMasterSpecificUser(row.AppMasSpeID);\n                    },\n                    label: 'Delete'\n                }]\n            },\n        };\n    },\n    async created() {\n        this.getStaffList();\n        this.getStaffListBySchool();\n    },\n    async mounted() {\n        this.getApproverMaster();\n        this.getApproverMasterSpecificUser();\n    },\n    methods: {\n        showSpecificApproverMaster(){\n            this.showAddSpecific = true;\n        },\n        showApproverMaster() {\n            this.showAddApproverMaster = true;\n        },\n        handleSelectionChange(val) {\n            this.selectedRow = val;\n            console.log(this.selectedRow);\n        },\n        async getStaffList() {\n            this.$vs.loading();\n            try {\n                const response = await DataSource.shared.getAllStaffList();\n                if (response) {\n                    switch (response.code) {\n                        case \"88\":\n                            this.$router.push('/');\n                            break;\n                        case \"99\":\n                            this.$notify.error({\n                                title: 'Error',\n                                message: 'Error'\n                            });\n                            break;\n                    }\n\n                    this.staffList = response.Table;\n                }\n            } catch (e) {\n                this.results = e;\n            }\n            this.$vs.loading.close();\n        },\n        async getStaffListBySchool() {\n            this.$vs.loading();\n            try {\n                const response = await DataSource.shared.getAllStaffListBySchool();\n                if (response) {\n                    switch (response.code) {\n                        case \"88\":\n                            this.$router.push('/');\n                            break;\n                        case \"99\":\n                            this.$notify.error({\n                                title: 'Error',\n                                message: 'Error'\n                            });\n                            break;\n                    }\n\n                    this.staffListSpecificUser = response.Table;\n                }\n            } catch (e) {\n                this.results = e;\n            }\n            this.$vs.loading.close();\n        },\n        async getApproverMaster() {\n            this.$vs.loading();\n            try {\n                const response = await DataSource.shared.getApproverMaster();\n                if (response) {\n                    switch (response.code) {\n                        case \"2\":\n                            this.$notify.error({\n                                title: 'Error',\n                                message: 'no record found'\n                            });\n                            break;\n                        case \"88\":\n                            this.$router.push('/');\n                            break;\n                        case \"99\":\n                            this.$notify.error({\n                                title: 'Error',\n                                message: 'Get list Error'\n                            });\n                            break;\n                    }\n\n                    this.approverListInt = response.Table;\n                }\n            } catch (e) {\n                this.results = e;\n            }\n            this.$vs.loading.close();\n        },\n        async deleteApproverMaster(approverMasterID) {\n            this.$vs.loading();\n            try {\n                const response = await DataSource.shared.updateApproverMaster(approverMasterID, \"VOID\");\n                if (response) {\n                    switch (response.code) {\n                        case \"1\":\n                            this.$notify({\n                                title: 'Successful Delete',\n                                message: 'Successful Delete',\n                                type: 'success'\n                            });\n                            this.getApproverMaster();\n                            // window.location.replace('/ApproverMaster');\n                            break;\n                        case \"2\":\n                            this.$notify.error({\n                                title: 'Error',\n                                message: 'Higher Approver Level Is Existing, Not Able To Empty Lower Approver Level'\n                            });\n                            break;\n                        case \"88\":\n                            this.$router.push('/');\n                            break;\n                        case \"99\":\n                            this.$notify.error({\n                                title: 'Error',\n                                message: 'Error'\n                            });\n                            break;\n                    }\n\n                    this.approverListInt = response.Table;\n                }\n            } catch (e) {\n                this.results = e;\n            }\n            this.$vs.loading.close();\n        },\n        async deleteSelectedApproverMaster() {\n            this.$vs.loading();\n            try {\n                const approverMasterID = JSON.stringify(this.selectedRow.map(m => m.ApproverMasterID));\n                console.log(approverMasterID);\n                const response = await DataSource.shared.updateApproverMaster(approverMasterID, \"VOID\");\n                if (response) {\n                    switch (response.code) {\n                        case \"1\":\n                            this.$notify({\n                                title: 'Successful Delete',\n                                message: 'Successful Delete',\n                                type: 'success'\n                            });\n                            this.getApproverMaster();\n                            // window.location.replace('/ApproverMaster');\n                            break;\n                        case \"2\":\n                            this.$notify.error({\n                                title: 'Error',\n                                message: 'Higher Approver Level Is Existing, Not Able To Empty Lower Approver Level'\n                            });\n                            break;\n                        case \"88\":\n                            this.$router.push('/');\n                            break;\n                        case \"99\":\n                            this.$notify.error({\n                                title: 'Error',\n                                message: 'Error'\n                            });\n                            break;\n                    }\n\n                    this.approverListInt = response.Table;\n                }\n            } catch (e) {\n                this.results = e;\n            }\n            this.$vs.loading.close();\n        },\n        async saveApproverMaster() {\n            try {\n                if (this.ddlApproverType === '' || this.ddlApproverLevel === '' || this.ddlStaffList === '') {\n                    this.$notify.error({\n                        title: 'Error',\n                        message: 'Please fill in all fields'\n                    });\n                } else {\n                    this.$vs.loading();\n\n                    const response = await DataSource.shared.saveApproverMaster(this.ddlApproverLevel, this.ddlStaffList, this.ddlApproverType);\n                    if (response) {\n                        switch (response.code) {\n                            case \"1\":\n                                this.showAddApproverMaster = false;\n                                this.$notify({\n                                    title: 'Successful',\n                                    message: 'Successful added.',\n                                    type: 'success'\n                                });\n                                this.getApproverMaster();\n                                // window.location.replace('/ApproverMaster');\n                                break;\n                            case \"2\":\n                                this.$notify.error({\n                                    title: 'Duplicated',\n                                    message: 'Approver duplicated'\n                                });\n                                break;\n                            case \"3\":\n                                this.$notify.error({\n                                    title: 'Fail to Add',\n                                    message: 'Lower approver level is not existed, please follow the correct sequence of approver level'\n                                });\n                                break;\n                            case \"88\":\n                                this.$router.push('/');\n                                break;\n                            case \"99\":\n                                this.$notify.error({\n                                    title: 'Error',\n                                    message: 'Error'\n                                });\n                                break;\n                        }\n\n                        this.approverListInt = response.Table;\n                    }\n\n                    this.$vs.loading.close();\n                }\n            } catch (e) {\n                this.results = e;\n            }\n\n        },\n        async getApproverMasterSpecificUser() {\n            try {\n                const response = await DataSource.shared.getApproverMasterSpecificUser();\n                if (response) {\n                    switch (response.code) {\n                        case \"88\":\n                            this.$router.push('/');\n                            break;\n                        case \"99\":\n                            this.$notify.error({\n                                title: 'Error',\n                                message: 'Error'\n                            });\n                            break;\n                    }\n\n                    this.approverSpecificUserInt = response.Table;\n                }\n            } catch (e) {\n                this.results = e;\n            }\n        },\n        async deleteApproverMasterSpecificUser(value) {\n            try {\n                this.$vs.loading();\n\n                const response = await DataSource.shared.updateApproverMasterSpecificUser(value, \"VOID\");\n                if (response) {\n                    switch (response.code) {\n                        case \"1\":\n                            this.$notify({\n                                title: 'Successful',\n                                message: 'Successful Added',\n                                type: 'success'\n                            });\n                            this.getApproverMasterSpecificUser();\n                            // window.location.replace('/ApproverMaster');\n                            break;\n                        case \"88\":\n                            this.$router.push('/');\n                            break;\n                        case \"99\":\n                            this.$notify.error({\n                                title: 'Error',\n                                message: 'Error'\n                            });\n                            break;\n                    }\n                }\n\n                this.$vs.loading.close();\n            } catch (e) {\n                this.results = e;\n            }\n        },\n        async saveApproveSpecificUser() {\n            try {\n                if (this.ddlApproverTypeSpecificUser === '' || this.ddlStaffListSpecificUser === '') {\n                    this.$notify.error({\n                        title: 'Error',\n                        message: 'Please fill in all fields'\n                    });\n                } else {\n                    this.$vs.loading();\n\n                    const response = await DataSource.shared.saveApproverMasterSpecificUser(this.ddlStaffListSpecificUser, this.ddlApproverTypeSpecificUser);\n                    if (response) {\n                        switch (response.code) {\n                            case \"1\":\n                                this.showAddSpecific = false;\n                                this.$notify({\n                                    title: 'Successful',\n                                    message: 'Successful Added',\n                                    type: 'success'\n                                });\n\n                                this.getApproverMasterSpecificUser();\n                                // window.location.replace('/ApproverMaster');\n                                break;\n                            case \"2\":\n                                this.$notify.error({\n                                    title: 'Duplicated',\n                                    message: 'Approver duplicated'\n                                });\n                                break;\n                            case \"88\":\n                                this.$router.push('/');\n                                break;\n                            case \"99\":\n                                this.$notify.error({\n                                    title: 'Error',\n                                    message: 'Error'\n                                });\n                                break;\n                        }\n                    }\n\n                    this.$vs.loading.close();\n                }\n            } catch (e) {\n                this.results = e;\n            }\n\n        },\n    },\n};\n",{"version":3,"sources":["ApproverMaster.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"ApproverMaster.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div id=\"approvermaster\">\r\n        <div class=\"container admin-wrap\">\r\n            <div class=\"row header\">\r\n                <div class=\"col-lg-12 \">\r\n                    <h3 class=\"text-left\"> APPROVER MASTER</h3>\r\n                </div>\r\n            </div>\r\n            <el-tabs v-model=\"tabForm\" @tab-click=\"handleClick\">\r\n                <el-tab-pane label=\"Approver Master\" name=\"approver_master\">\r\n                    <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                        <div v-if=\"approverListInt.length>0\" class=\"datatable_group\">\r\n                            <div class=\"toolbar\">\r\n                                <el-button-group class=\"float-right mb-3\">\r\n\r\n                                    <el-tooltip class=\"item\" effect=\"dark\" content=\"Add Approver Master\"\r\n                                                placement=\"top-start\">\r\n                                        <el-button type=\"primary\" icon=\"el-icon-plus\"\r\n                                                   @click=\"showApproverMaster\"></el-button>\r\n                                    </el-tooltip>\r\n\r\n                                    <el-tooltip class=\"item\" effect=\"dark\" content=\"Delete\" placement=\"top-start\">\r\n                                        <el-button type=\"primary\" icon=\"el-icon-delete\" :disabled=\"selectedRow.length<1\"\r\n                                                   @click=\"deleteSelectedApproverMaster()\"></el-button>\r\n                                    </el-tooltip>\r\n                                </el-button-group>\r\n                            </div>\r\n                            <data-tables :data=\"approverListInt\" :action-col=\"approverListDeleteButton\"\r\n                                         @selection-change=\"handleSelectionChange\">\r\n                                <el-table-column type=\"selection\" width=\"55\">\r\n                                </el-table-column>\r\n                                <el-table-column v-for=\"approverListInfo in approverList\" :prop=\"approverListInfo.prop\"\r\n                                                 :label=\"approverListInfo.label\" :key=\"approverListInfo.prop\"\r\n                                                 sortable=\"custom\">\r\n                                </el-table-column>\r\n                            </data-tables>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </el-tab-pane>\r\n                <el-tab-pane label=\"Specific User To Approve\" name=\"SpecificUser_approver\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-lg-12\">\r\n                            <div v-if=\"approverSpecificUserInt.length>0\" class=\"datatable_group\">\r\n                                <div class=\"toolbar\">\r\n                                    <el-button-group class=\"float-right mb-3\">\r\n\r\n                                        <el-tooltip class=\"item\" effect=\"dark\" content=\"Add Approver Master\"\r\n                                                    placement=\"top-start\">\r\n                                            <el-button type=\"primary\" icon=\"el-icon-plus\"\r\n                                                       @click=\"showSpecificApproverMaster\"></el-button>\r\n                                        </el-tooltip>\r\n\r\n                                        <el-tooltip class=\"item\" effect=\"dark\" content=\"Delete\" placement=\"top-start\">\r\n                                            <el-button type=\"primary\" icon=\"el-icon-delete\" :disabled=\"selectedRow.length<1\"\r\n                                                       @click=\"deleteSelectedApproverMaster()\"></el-button>\r\n                                        </el-tooltip>\r\n                                    </el-button-group>\r\n                                </div>\r\n                                <data-tables :data=\"approverSpecificUserInt\"\r\n                                             :action-col=\"approverSpecificUserListDeleteButton\"\r\n                                             @selection-change=\"handleSelectionChange\">\r\n                                    <el-table-column type=\"selection\" width=\"55\">\r\n                                    </el-table-column>\r\n                                    <el-table-column v-for=\"approverSpecificUserListInfo in approverSpecificUserList\"\r\n                                                     :prop=\"approverSpecificUserListInfo.prop\"\r\n                                                     :label=\"approverSpecificUserListInfo.label\"\r\n                                                     :key=\"approverSpecificUserListInfo.prop\"\r\n                                                     sortable=\"custom\">\r\n                                    </el-table-column>\r\n                                </data-tables>\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </el-tab-pane>\r\n            </el-tabs>\r\n            <!--<div class=\"row\">-->\r\n            <!--<div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">-->\r\n            <!--<b-btn v-b-modal.specificUserToApprove variant=\"primary\">-->\r\n            <!--Specific User To Approve-->\r\n            <!--</b-btn>-->\r\n            <!--</div>-->\r\n\r\n\r\n            <!--</div>-->\r\n        </div>\r\n        <b-modal id=\"addApproverMaster\" title=\"Add Approver Master\" hide-footer v-model=\"showAddApproverMaster\">\r\n            <div class=\"col-lg-12 mb-3\">\r\n                <label>Approver Type</label>\r\n                <el-select\r\n                        v-model=\"ddlApproverType\"\r\n                        :loading=\"loading\"\r\n                        class=\"w-100\">\r\n                    <el-option\r\n                            v-for=\"item in approverTypeList\"\r\n                            :key=\"item\"\r\n                            :label=\"item\"\r\n                            :value=\"item\">\r\n                    </el-option>\r\n                </el-select>\r\n                <!--<select v-model=\"ddlApproverType\" class=\"form-control pro-edt-select form-control-primary\">-->\r\n                    <!--<option v-for=\"item in approverTypeList\" v-bind:value=\"item\">-->\r\n                        <!--{{ item }}-->\r\n                    <!--</option>-->\r\n                <!--</select>-->\r\n            </div>\r\n\r\n            <div class=\"col-lg-12 mb-3\">\r\n                <label>Approver Level</label>\r\n                <el-select\r\n                        v-model=\"ddlApproverLevel\"\r\n                        filterable\r\n                        reserve-keyword\r\n                        :loading=\"loading\"\r\n                        class=\"w-100\">\r\n                    <el-option\r\n                            v-for=\"item in approverLevelList\"\r\n                            :key=\"item\"\r\n                            :label=\"item\"\r\n                            :value=\"item\">\r\n                    </el-option>\r\n                </el-select>\r\n                <!--<select v-model=\"ddlApproverLevel\" class=\"form-control pro-edt-select form-control-primary\">-->\r\n                    <!--<option v-for=\"item in approverLevelList\" v-bind:value=\"item\">-->\r\n                        <!--{{ item }}-->\r\n                    <!--</option>-->\r\n                <!--</select>-->\r\n            </div>\r\n\r\n            <div class=\"col-lg-12 mb-3\">\r\n                <label>Approver</label>\r\n                <el-select\r\n                        v-model=\"ddlStaffList\"\r\n                        filterable\r\n                        reserve-keyword\r\n                        :loading=\"loading\"\r\n                        class=\"w-100\">\r\n                    <el-option\r\n                            v-for=\"item in staffList\"\r\n                            :key=\"item.CONid\"\r\n                            :label=\"item.CONname\"\r\n                            :value=\"item.CONid\">\r\n                    </el-option>\r\n                </el-select>\r\n                <!--<select v-model=\"ddlStaffList\" class=\"form-control pro-edt-select form-control-primary\">-->\r\n                <!--<option v-for=\"item in staffList\" v-bind:value=\"item.CONid\">-->\r\n                <!--{{ item.CONname }}-->\r\n                <!--</option>-->\r\n                <!--</select>-->\r\n            </div>\r\n\r\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                <button v-on:click=\"saveApproverMaster()\" class=\"btn btn-primary waves-effect waves-light m-r-10\">\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </b-modal>\r\n        <b-modal id=\"addSpecificApproverMaster\" title=\"Specific Needed Approver\" hide-footer v-model=\"showAddSpecific\">\r\n            <div class=\"col-lg-12 mb-3\">\r\n                <label>Approver Type</label>\r\n                <el-select\r\n                        v-model=\"ddlApproverTypeSpecificUser\"\r\n                        :loading=\"loading\"\r\n                        class=\"w-100\">\r\n                    <el-option\r\n                            v-for=\"item in approverTypeList\"\r\n                            :key=\"item\"\r\n                            :label=\"item\"\r\n                            :value=\"item\">\r\n                    </el-option>\r\n                </el-select>\r\n                <!--<select v-model=\"ddlApproverTypeSpecificUser\"-->\r\n                        <!--class=\"form-control pro-edt-select form-control-primary\">-->\r\n                    <!--<option v-for=\"item in approverTypeList\" v-bind:value=\"item\">-->\r\n                        <!--{{ item }}-->\r\n                    <!--</option>-->\r\n                <!--</select>-->\r\n            </div>\r\n\r\n            <div class=\"col-lg-12 mb-3\">\r\n                <label>Specific Needed Approve User</label>\r\n\r\n                <el-select\r\n                        v-model=\"ddlStaffListSpecificUser\"\r\n                        filterable\r\n                        reserve-keyword\r\n                        :loading=\"loading\"\r\n                        class=\"w-100\">\r\n                    <el-option\r\n                            v-for=\"item in staffListSpecificUser\"\r\n                            :key=\"item.CONid\"\r\n                            :label=\"item.CONname\"\r\n                            :value=\"item.CONid\">\r\n                    </el-option>\r\n                </el-select>\r\n                <!--<select v-model=\"ddlStaffListSpecificUser\"-->\r\n                        <!--class=\"form-control pro-edt-select form-control-primary\">-->\r\n                    <!--<option v-for=\"item in staffListSpecificUser\" v-bind:value=\"item.CONid\">-->\r\n                        <!--{{ item.CONname }}-->\r\n                    <!--</option>-->\r\n                <!--</select>-->\r\n            </div>\r\n\r\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                <button v-on:click=\"saveApproveSpecificUser()\"\r\n                        class=\"btn btn-primary waves-effect waves-light m-r-10\">\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </b-modal>\r\n        <!--<b-modal id=\"specificUserToApprove\" size=\"lg\" title=\"Specific User To Approve\" ok-only-->\r\n        <!--ok-variant=\"secondary\" ok-title=\"Cancel\" ref=\"familyModalShowModal\">-->\r\n        <!--<div class=\"row\">-->\r\n        <!--<div class= \"col-lg-12 col-md-12 col-sm-12 col-xs-12\">-->\r\n        <!--<div v-if=\"approverSpecificUserInt.length>0\" class=\"datatable_group\">-->\r\n        <!--<data-tables :data=\"approverSpecificUserInt\" :action-col=\"approverSpecificUserListDeleteButton\" @selection-change=\"handleSelectionChange\">-->\r\n        <!--<el-table-column v-for=\"approverSpecificUserListInfo in approverSpecificUserList\" :prop=\"approverSpecificUserListInfo.prop\"-->\r\n        <!--:label=\"approverSpecificUserListInfo.label\" :key=\"approverSpecificUserListInfo.prop\"-->\r\n        <!--sortable=\"custom\">-->\r\n        <!--</el-table-column>-->\r\n        <!--</data-tables>-->\r\n        <!--</div>-->\r\n        <!--</div>-->\r\n\r\n        <!--<div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">-->\r\n        <!--<label>Approver Type</label>-->\r\n        <!--<select v-model=\"ddlApproverTypeSpecificUser\" class=\"form-control pro-edt-select form-control-primary\">-->\r\n        <!--<option v-for=\"item in approverTypeList\" v-bind:value=\"item\">-->\r\n        <!--{{ item }}-->\r\n        <!--</option>-->\r\n        <!--</select>-->\r\n        <!--</div>-->\r\n\r\n        <!--<div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">-->\r\n        <!--<label>Specific Needed Approve User</label>-->\r\n        <!--<select v-model=\"ddlStaffListSpecificUser\" class=\"form-control pro-edt-select form-control-primary\">-->\r\n        <!--<option v-for=\"item in staffListSpecificUser\" v-bind:value=\"item.CONid\">-->\r\n        <!--{{ item.CONname }}-->\r\n        <!--</option>-->\r\n        <!--</select>-->\r\n        <!--</div>-->\r\n\r\n        <!--<div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">-->\r\n        <!--<button v-on:click=\"saveApproveSpecificUser()\" class=\"btn btn-primary waves-effect waves-light m-r-10\">-->\r\n        <!--Save-->\r\n        <!--</button>-->\r\n        <!--</div>-->\r\n        <!--</div>-->\r\n        <!--</b-modal>-->\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import DataSource from \"../data/datasource\";\r\n\r\n    export default {\r\n        name: \"ApproverMaster\",\r\n        data() {\r\n            return {\r\n                showAddSpecific: false,\r\n                showAddApproverMaster: false,\r\n                tabForm: 'approver_master',\r\n                ddlStaffList: '',\r\n                staffList: [],\r\n                ddlStaffListSpecificUser: '',\r\n                staffListSpecificUser: [],\r\n                approverTypeList: ['Portfolio', 'Documentation_Posting', 'Update_Posting', 'Portfolio_Posting', 'Report_Posting', 'Broadcast_Posting'],\r\n                ddlApproverType: '',\r\n                ddlApproverTypeSpecificUser: '',\r\n                approverLevelList: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\r\n                ddlApproverLevel: '',\r\n                selectedRow: [],\r\n\r\n                approverListInt: [],\r\n                approverList: [{\r\n                    prop: \"ApproverMasterType\",\r\n                    label: \"Type\"\r\n                }, {\r\n                    prop: \"ApproverMasterLevel\",\r\n                    label: \"Approval Level\"\r\n                }, {\r\n                    prop: \"CONname\",\r\n                    label: \"Approver\"\r\n                }, {\r\n                    prop: \"ContainAnySpecificUser\",\r\n                    label: \"Specific User To Approve\"\r\n                }],\r\n                approverListDeleteButton: {\r\n                    label: 'Delete',\r\n                    props: {\r\n                        align: 'center',\r\n                    },\r\n                    buttons: [{\r\n                        props: {\r\n                            type: 'primary',\r\n                            icon: 'el-icon-edit'\r\n                        },\r\n                        handler: row => {\r\n                            this.deleteApproverMaster(row.ApproverMasterID);\r\n                        },\r\n                        label: 'Delete'\r\n                    }]\r\n                },\r\n\r\n                approverSpecificUserInt: [],\r\n                approverSpecificUserList: [{\r\n                    prop: \"AppMacSpeType\",\r\n                    label: \"Type\"\r\n                }, {\r\n                    prop: \"CONname\",\r\n                    label: \"Specific Needed Approve User Name\"\r\n                }],\r\n                approverSpecificUserListDeleteButton: {\r\n                    label: 'Delete',\r\n                    props: {\r\n                        align: 'center',\r\n                    },\r\n                    buttons: [{\r\n                        props: {\r\n                            type: 'primary',\r\n                            icon: 'el-icon-edit'\r\n                        },\r\n                        handler: row => {\r\n                            this.deleteApproverMasterSpecificUser(row.AppMasSpeID);\r\n                        },\r\n                        label: 'Delete'\r\n                    }]\r\n                },\r\n            };\r\n        },\r\n        async created() {\r\n            this.getStaffList();\r\n            this.getStaffListBySchool();\r\n        },\r\n        async mounted() {\r\n            this.getApproverMaster();\r\n            this.getApproverMasterSpecificUser();\r\n        },\r\n        methods: {\r\n            showSpecificApproverMaster(){\r\n                this.showAddSpecific = true;\r\n            },\r\n            showApproverMaster() {\r\n                this.showAddApproverMaster = true;\r\n            },\r\n            handleSelectionChange(val) {\r\n                this.selectedRow = val;\r\n                console.log(this.selectedRow);\r\n            },\r\n            async getStaffList() {\r\n                this.$vs.loading();\r\n                try {\r\n                    const response = await DataSource.shared.getAllStaffList();\r\n                    if (response) {\r\n                        switch (response.code) {\r\n                            case \"88\":\r\n                                this.$router.push('/');\r\n                                break;\r\n                            case \"99\":\r\n                                this.$notify.error({\r\n                                    title: 'Error',\r\n                                    message: 'Error'\r\n                                });\r\n                                break;\r\n                        }\r\n\r\n                        this.staffList = response.Table;\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n                this.$vs.loading.close();\r\n            },\r\n            async getStaffListBySchool() {\r\n                this.$vs.loading();\r\n                try {\r\n                    const response = await DataSource.shared.getAllStaffListBySchool();\r\n                    if (response) {\r\n                        switch (response.code) {\r\n                            case \"88\":\r\n                                this.$router.push('/');\r\n                                break;\r\n                            case \"99\":\r\n                                this.$notify.error({\r\n                                    title: 'Error',\r\n                                    message: 'Error'\r\n                                });\r\n                                break;\r\n                        }\r\n\r\n                        this.staffListSpecificUser = response.Table;\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n                this.$vs.loading.close();\r\n            },\r\n            async getApproverMaster() {\r\n                this.$vs.loading();\r\n                try {\r\n                    const response = await DataSource.shared.getApproverMaster();\r\n                    if (response) {\r\n                        switch (response.code) {\r\n                            case \"2\":\r\n                                this.$notify.error({\r\n                                    title: 'Error',\r\n                                    message: 'no record found'\r\n                                });\r\n                                break;\r\n                            case \"88\":\r\n                                this.$router.push('/');\r\n                                break;\r\n                            case \"99\":\r\n                                this.$notify.error({\r\n                                    title: 'Error',\r\n                                    message: 'Get list Error'\r\n                                });\r\n                                break;\r\n                        }\r\n\r\n                        this.approverListInt = response.Table;\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n                this.$vs.loading.close();\r\n            },\r\n            async deleteApproverMaster(approverMasterID) {\r\n                this.$vs.loading();\r\n                try {\r\n                    const response = await DataSource.shared.updateApproverMaster(approverMasterID, \"VOID\");\r\n                    if (response) {\r\n                        switch (response.code) {\r\n                            case \"1\":\r\n                                this.$notify({\r\n                                    title: 'Successful Delete',\r\n                                    message: 'Successful Delete',\r\n                                    type: 'success'\r\n                                });\r\n                                this.getApproverMaster();\r\n                                // window.location.replace('/ApproverMaster');\r\n                                break;\r\n                            case \"2\":\r\n                                this.$notify.error({\r\n                                    title: 'Error',\r\n                                    message: 'Higher Approver Level Is Existing, Not Able To Empty Lower Approver Level'\r\n                                });\r\n                                break;\r\n                            case \"88\":\r\n                                this.$router.push('/');\r\n                                break;\r\n                            case \"99\":\r\n                                this.$notify.error({\r\n                                    title: 'Error',\r\n                                    message: 'Error'\r\n                                });\r\n                                break;\r\n                        }\r\n\r\n                        this.approverListInt = response.Table;\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n                this.$vs.loading.close();\r\n            },\r\n            async deleteSelectedApproverMaster() {\r\n                this.$vs.loading();\r\n                try {\r\n                    const approverMasterID = JSON.stringify(this.selectedRow.map(m => m.ApproverMasterID));\r\n                    console.log(approverMasterID);\r\n                    const response = await DataSource.shared.updateApproverMaster(approverMasterID, \"VOID\");\r\n                    if (response) {\r\n                        switch (response.code) {\r\n                            case \"1\":\r\n                                this.$notify({\r\n                                    title: 'Successful Delete',\r\n                                    message: 'Successful Delete',\r\n                                    type: 'success'\r\n                                });\r\n                                this.getApproverMaster();\r\n                                // window.location.replace('/ApproverMaster');\r\n                                break;\r\n                            case \"2\":\r\n                                this.$notify.error({\r\n                                    title: 'Error',\r\n                                    message: 'Higher Approver Level Is Existing, Not Able To Empty Lower Approver Level'\r\n                                });\r\n                                break;\r\n                            case \"88\":\r\n                                this.$router.push('/');\r\n                                break;\r\n                            case \"99\":\r\n                                this.$notify.error({\r\n                                    title: 'Error',\r\n                                    message: 'Error'\r\n                                });\r\n                                break;\r\n                        }\r\n\r\n                        this.approverListInt = response.Table;\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n                this.$vs.loading.close();\r\n            },\r\n            async saveApproverMaster() {\r\n                try {\r\n                    if (this.ddlApproverType === '' || this.ddlApproverLevel === '' || this.ddlStaffList === '') {\r\n                        this.$notify.error({\r\n                            title: 'Error',\r\n                            message: 'Please fill in all fields'\r\n                        });\r\n                    } else {\r\n                        this.$vs.loading();\r\n\r\n                        const response = await DataSource.shared.saveApproverMaster(this.ddlApproverLevel, this.ddlStaffList, this.ddlApproverType);\r\n                        if (response) {\r\n                            switch (response.code) {\r\n                                case \"1\":\r\n                                    this.showAddApproverMaster = false;\r\n                                    this.$notify({\r\n                                        title: 'Successful',\r\n                                        message: 'Successful added.',\r\n                                        type: 'success'\r\n                                    });\r\n                                    this.getApproverMaster();\r\n                                    // window.location.replace('/ApproverMaster');\r\n                                    break;\r\n                                case \"2\":\r\n                                    this.$notify.error({\r\n                                        title: 'Duplicated',\r\n                                        message: 'Approver duplicated'\r\n                                    });\r\n                                    break;\r\n                                case \"3\":\r\n                                    this.$notify.error({\r\n                                        title: 'Fail to Add',\r\n                                        message: 'Lower approver level is not existed, please follow the correct sequence of approver level'\r\n                                    });\r\n                                    break;\r\n                                case \"88\":\r\n                                    this.$router.push('/');\r\n                                    break;\r\n                                case \"99\":\r\n                                    this.$notify.error({\r\n                                        title: 'Error',\r\n                                        message: 'Error'\r\n                                    });\r\n                                    break;\r\n                            }\r\n\r\n                            this.approverListInt = response.Table;\r\n                        }\r\n\r\n                        this.$vs.loading.close();\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n\r\n            },\r\n            async getApproverMasterSpecificUser() {\r\n                try {\r\n                    const response = await DataSource.shared.getApproverMasterSpecificUser();\r\n                    if (response) {\r\n                        switch (response.code) {\r\n                            case \"88\":\r\n                                this.$router.push('/');\r\n                                break;\r\n                            case \"99\":\r\n                                this.$notify.error({\r\n                                    title: 'Error',\r\n                                    message: 'Error'\r\n                                });\r\n                                break;\r\n                        }\r\n\r\n                        this.approverSpecificUserInt = response.Table;\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async deleteApproverMasterSpecificUser(value) {\r\n                try {\r\n                    this.$vs.loading();\r\n\r\n                    const response = await DataSource.shared.updateApproverMasterSpecificUser(value, \"VOID\");\r\n                    if (response) {\r\n                        switch (response.code) {\r\n                            case \"1\":\r\n                                this.$notify({\r\n                                    title: 'Successful',\r\n                                    message: 'Successful Added',\r\n                                    type: 'success'\r\n                                });\r\n                                this.getApproverMasterSpecificUser();\r\n                                // window.location.replace('/ApproverMaster');\r\n                                break;\r\n                            case \"88\":\r\n                                this.$router.push('/');\r\n                                break;\r\n                            case \"99\":\r\n                                this.$notify.error({\r\n                                    title: 'Error',\r\n                                    message: 'Error'\r\n                                });\r\n                                break;\r\n                        }\r\n                    }\r\n\r\n                    this.$vs.loading.close();\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n            },\r\n            async saveApproveSpecificUser() {\r\n                try {\r\n                    if (this.ddlApproverTypeSpecificUser === '' || this.ddlStaffListSpecificUser === '') {\r\n                        this.$notify.error({\r\n                            title: 'Error',\r\n                            message: 'Please fill in all fields'\r\n                        });\r\n                    } else {\r\n                        this.$vs.loading();\r\n\r\n                        const response = await DataSource.shared.saveApproverMasterSpecificUser(this.ddlStaffListSpecificUser, this.ddlApproverTypeSpecificUser);\r\n                        if (response) {\r\n                            switch (response.code) {\r\n                                case \"1\":\r\n                                    this.showAddSpecific = false;\r\n                                    this.$notify({\r\n                                        title: 'Successful',\r\n                                        message: 'Successful Added',\r\n                                        type: 'success'\r\n                                    });\r\n\r\n                                    this.getApproverMasterSpecificUser();\r\n                                    // window.location.replace('/ApproverMaster');\r\n                                    break;\r\n                                case \"2\":\r\n                                    this.$notify.error({\r\n                                        title: 'Duplicated',\r\n                                        message: 'Approver duplicated'\r\n                                    });\r\n                                    break;\r\n                                case \"88\":\r\n                                    this.$router.push('/');\r\n                                    break;\r\n                                case \"99\":\r\n                                    this.$notify.error({\r\n                                        title: 'Error',\r\n                                        message: 'Error'\r\n                                    });\r\n                                    break;\r\n                            }\r\n                        }\r\n\r\n                        this.$vs.loading.close();\r\n                    }\r\n                } catch (e) {\r\n                    this.results = e;\r\n                }\r\n\r\n            },\r\n        },\r\n    };\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}